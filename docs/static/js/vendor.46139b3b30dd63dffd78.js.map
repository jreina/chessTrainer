{"version":3,"sources":["webpack:///static/js/vendor.46139b3b30dd63dffd78.js","webpack:///./~/vue-loader/lib/component-normalizer.js","webpack:///./~/chessboardjs/www/js/chessboard.js","webpack:///./~/chess.js/chess.js","webpack:///./~/vue/dist/vue.runtime.esm.js","webpack:///./~/vue-router/dist/vue-router.esm.js","webpack:///./~/vue-style-loader/lib/listToStyles.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/vue-style-loader/lib/addStylesClient.js"],"names":["webpackJsonp","module","exports","rawScriptExports","compiledTemplate","scopeId","cssModules","esModule","scriptExports","type","default","options","render","staticRenderFns","_scopeId","computed","Object","keys","forEach","key","validMove","move","tmp","split","length","validSquare","square","search","validPieceCode","code","validFen","fen","replace","chunks","i","validPositionObject","pos","hasOwnProperty","fenToPieceCode","piece","toLowerCase","toUpperCase","pieceCodeToFen","fenToObj","rows","position","currentRow","row","colIndex","j","emptySquares","parseInt","COLUMNS","objToFen","obj","ChessBoard","containerElOrId","cfg","uuid","c","Math","random","toString","deepCopy","thing","JSON","parse","stringify","parseSemVer","version","major","minor","patch","compareSemVer","minimum","error","msg","showErrors","errorText","console","log","arguments","window","alert","checkDeps","el","document","getElementById","containerEl","$","fn","jquery","MINIMUM_JQUERY_VERSION","validAnimationSpeed","speed","expandConfig","orientation","CURRENT_ORIENTATION","showNotation","draggable","dropOffBoard","sparePieces","pieceTheme","appearSpeed","moveSpeed","snapbackSpeed","snapSpeed","trashSpeed","CURRENT_POSITION","START_POSITION","calculateSquareSize","containerWidth","width","boardWidth","createElIds","SQUARE_ELS_IDS","pieces","whitePiece","blackPiece","SPARE_PIECE_ELS_IDS","buildBoardContainer","html","CSS","chessboard","sparePiecesTop","board","sparePiecesBottom","buildBoard","alpha","reverse","squareColor","SQUARE_SIZE","notation","numeric","clearfix","buildPieceImgSrc","buildPiece","hidden","id","buildSparePieces","color","animateSquareToSquare","src","dest","completeFn","srcSquareEl","srcSquarePosition","offset","destSquareEl","destSquarePosition","animatedPieceId","append","animatedPieceEl","css","display","top","left","find","remove","complete","opts","duration","animate","animateSparePieceToSquare","srcOffset","destOffset","pieceId","doAnimations","a","oldPos","newPos","onFinish","numFinished","drawPositionInstant","ANIMATION_HAPPENING","onMoveEnd","fadeOut","fadeIn","source","destination","squareDistance","s1","s2","s1x","indexOf","s1y","s2x","s2y","xDelta","abs","yDelta","createRadius","squares","s","push","distance","sort","b","squares2","findClosestPiece","closestSquares","calculateAnimations","pos1","pos2","animations","squaresMovedTo","closestPiece","boardEl","drawBoard","sparePiecesTopEl","sparePiecesBottomEl","calculatePositionFromMoves","moves","setCurrentPosition","onChange","isXYOnSquare","x","y","SQUARE_ELS_OFFSETS","captureSquareOffsets","removeSquareHighlights","removeClass","highlight1","highlight2","snapbackDraggedPiece","draggedPieceEl","onSnapbackEnd","DRAGGED_PIECE","DRAGGED_PIECE_SOURCE","trashDraggedPiece","sourceSquarePosition","DRAGGING_A_PIECE","newPosition","dropDraggedPieceOnSquare","targetSquarePosition","onSnapEnd","beginDraggingPiece","onDragStart","DRAGGED_PIECE_LOCATION","attr","addClass","updateDraggedPiece","location","onDragMove","stopDraggedPiece","action","onDrop","oldPosition","result","isTouchDevice","documentElement","isMSIE","navigator","userAgent","stopDefault","e","preventDefault","mousedownSquare","this","pageX","pageY","touchstartSquare","originalEvent","changedTouches","mousedownSparePiece","touchstartSparePiece","mousemoveWindow","touchmoveWindow","mouseupWindow","touchendWindow","mouseenterSquare","onMouseoverSquare","currentTarget","mouseleaveSquare","onMouseoutSquare","addEvents","on","ondragstart","initDom","draggedPieceId","BOARD_BORDER_SIZE","widget","resize","init","START_FEN","black","white","clear","useAnimation","destroy","unbind","flip","arg","height","start","__webpack_require__","__WEBPACK_AMD_DEFINE_RESULT__","Chess","Array","kings","w","EMPTY","turn","WHITE","castling","ep_square","half_moves","move_number","history","header","update_setup","generate_fen","reset","load","DEFAULT_POSITION","tokens","validate_fen","valid","charAt","is_digit","BLACK","put","algebraic","BITS","KSIDE_CASTLE","QSIDE_CASTLE","SQUARES","errors","0","1","2","3","4","5","6","7","8","9","10","11","error_number","isNaN","test","sum_fields","previous_was_number","k","empty","a8","h1","cflags","join","set_header","args","get","SYMBOLS","sq","KING","build_move","from","to","flags","promotion","PROMOTION","captured","EP_CAPTURE","PAWN","generate_moves","add_move","rank","RANK_8","RANK_1","QUEEN","ROOK","BISHOP","KNIGHT","len","us","them","swap_color","second_rank","RANK_7","RANK_2","first_sq","last_sq","single_square","legal","PAWN_OFFSETS","NORMAL","BIG_PAWN","CAPTURE","PIECE_OFFSETS","castling_from","castling_to","attacked","legal_moves","make_move","king_attacked","undo_move","move_to_san","sloppy","output","disambiguator","get_disambiguator","in_check","in_checkmate","stripped_san","difference","index","ATTACKS","SHIFTS","RAYS","blocked","in_stalemate","insufficient_material","bishops","num_pieces","sq_color","sum","in_threefold_repetition","positions","repetition","slice","pop","ROOKS","flag","old","ambiguities","same_rank","same_file","ambig_from","ambig_to","file","ascii","move_from_san","clean_move","matches","match","f","r","substring","make_pretty","ugly_move","clone","san","FLAGS","dupe","property","trim","str","perft","depth","nodes","child_nodes","POSSIBLE_RESULTS","n","q","p","b8","c8","d8","e8","f8","g8","h8","a7","b7","c7","d7","e7","f7","g7","h7","a6","b6","c6","d6","e6","f6","g6","h6","a5","b5","c5","d5","e5","f5","g5","h5","a4","b4","c4","d4","e4","f4","g4","h4","a3","b3","c3","d3","e3","f3","g3","h3","a2","b2","c2","d2","e2","f2","g2","h2","a1","b1","c1","d1","e1","f1","g1","ugly_moves","verbose","in_draw","game_over","pgn","newline","newline_char","max_width","header_exists","reversed_history","move_string","Result","current_width","load_pgn","mask","has_keys","object","parse_pgn_header","header_obj","headers","RegExp","value","regex","header_string","ms","rav_regex","half_move","move_obj","pretty_move","undo","square_color","sq_0x88","move_history","undefined","call","__webpack_exports__","global","_toString","val","String","toNumber","parseFloat","makeMap","expectsLowerCase","map","create","list","arr","item","splice","hasOwn","isPrimitive","cached","cache","bind","ctx","boundFn","l","apply","_length","toArray","ret","extend","_from","isObject","isPlainObject","OBJECT_STRING","toObject","res","noop","looseEqual","isObjectA","isObjectB","looseIndexOf","once","called","isNative","Ctor","isReserved","charCodeAt","def","enumerable","defineProperty","writable","configurable","parsePath","path","bailRE","segments","pushTarget","_target","Dep","target","targetStack","popTarget","protoAugment","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","observerState","shouldConvert","isServerRendering","isArray","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","dep","getOwnPropertyDescriptor","getter","setter","set","childOb","depend","dependArray","newVal","notify","max","del","mergeData","toVal","fromVal","mergeHook","parentVal","childVal","concat","mergeAssets","normalizeProps","props","name","camelize","normalizeDirectives","dirs","directives","update","mergeOptions","parent","child","vm","mergeField","strat","strats","defaultStrat","extendsFrom","extends","mixins","mixin","prototype","Vue$2","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","isType","Boolean","hyphenate","getPropDefaultValue","prevShouldConvert","$options","_props","getType","handleError","err","config","errorHandler","inBrowser","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","children","text","elm","context","componentOptions","ns","isStatic","isCloned","cloneVNodes","vnodes","createFnInvoker","fns","invoker","arguments$1","updateListeners","oldOn","add","remove$$1","cur","event","normalizeEvent","capture","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","nestedIndex","last","getFirstComponentChild","filter","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","once$$1","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","cb","$emit","resolveSlots","slots","defaultSlot","functionalContext","slot","isComment","resolveScopedSlots","initLifecycle","abstract","$parent","$children","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","activeInstance","__patch__","_parentElm","_refElm","__vue__","$vnode","$forceUpdate","$destroy","teardown","_watchers","_data","mountComponent","createEmptyVNode","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","resetSchedulerState","queue","has","waiting","flushing","flushSchedulerQueue","watcher","run","devtools","emit","queueWatcher","nextTick","traverse","seenObjects","_traverse","seen","isA","depId","proxy","sourceKey","sharedPropertyDefinition","initState","initProps","methods","initMethods","initData","initComputed","watch","initWatch","propsOptions","isRoot","loop","watchers","_computedWatchers","userDef","computedWatcherOptions","defineComputed","createComputedGetter","dirty","evaluate","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","expOrFn","user","immediate","createComponent","baseCtor","_base","cid","resolved","resolveAsyncComponent","resolveConstructorOptions","model","transformModel","extractProps","functional","createFunctionalComponent","nativeOn","mergeHooks","_context","h","d","createElement","createComponentInstanceForVnode","parentElm","refElm","vnodeComponentOptions","_isComponent","_componentTag","inlineTemplate","componentInstance","$mount","keepAlive","mountedNode","prepatch","oldVnode","insert","factory","requested","pendingCallbacks","sync","resolve","reject","reason","then","attrs","domProps","altKey","checkProp","hash","preserve","hooksToMerge","fromParent","ours","hooks","mergeHook$1","one","two","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","applyNS","renderList","renderSlot","fallback","bindObject","scopedSlotFn","slotNodes","resolveFilter","identity","checkKeyCodes","eventKeyCode","builtInAlias","keyCodes","bindObjectProps","asProp","mustUseProp","renderStatic","isInFor","tree","_staticTrees","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","node","initRender","renderContext","_c","$createElement","renderMixin","$nextTick","ref","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","initInjections","provide","inject","_provided","hasSymbol","Reflect","ownKeys","provideKey","initMixin","_init","_uid","uid","initInternalComponent","constructor","_self","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","sealed","sealedOptions","dedupe","initUse","use","plugin","installed","unshift","install","initMixin$1","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","_assetTypes","Comp","initAssetRegisters","definition","getComponentName","pattern","pruneCache","cachedNode","pruneCacheEntry","initGlobalAPI","configDef","util","warn","defineReactive","delete","builtInComponents","genClassForVnode","parentNode","childNode","mergeClassData","genClassFromData","staticClass","class","dynamicClass","stringifyClass","stringified","isSVG","isUnknownElement","unknownElementCache","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","registerRef","isRemoval","refs","refInFor","isUndef","isDef","sameVnode","vnode1","vnode2","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","emptyNodeAt","nodeOps","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","isRootInsert","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","emptyNode","i$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","elmToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","hasData","postpatch","invokeInsertHook","initial","hydrate","hasChildNodes","childrenMatch","firstChild","isRenderedModule","modules","hooks$1","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","updateAttrs","oldAttrs","setAttr","isIE9","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","normalizeEvents","RANGE_TOKEN","isIE","CHECKBOX_RADIO_TOKEN","isChrome","add$1","oldHandler","target$1","ev","remove$2","addEventListener","removeEventListener","updateDOMListeners","updateDOMProps","oldProps","_value","strCur","shouldUpdateValue","checkVal","composing","isDirty","isInputChanged","activeElement","_vModifiers","number","normalizeStyleData","style","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","oldStyle","newStyle","setProp","classList","getAttribute","tar","resolveTransition","def$$1","autoCssTransition","nextFrame","raf","addTransitionClass","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","timeout","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","setTimeout","styles","getComputedStyle","transitioneDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","cancelled","_enterCb","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookAgumentsLength","show","pendingNode","_pending","isValidDuration","leave","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","_","setSelected","binding","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","comp","key$1","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","getBoundingClientRect","applyTranslation","dx","dy","moved","transform","WebkitTransform","transitionDuration","_isServer","_Set","camelizeRE","hyphenateRE","no","optionMergeStrategies","silent","productionTip","performance","ignoredElements","_lifecycleHooks","_maxUpdateCount","hasProto","UA","isEdge","isAndroid","isIOS","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Symbol","nextTickHandler","pending","copies","callbacks","timerFunc","Promise","logError","catch","MutationObserver","counter","observer","textNode","characterData","_resolve","Set","freeze","uid$1","subs","addSub","sub","removeSub","addDep","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","isSettingProps","walk","items","instanceData","defaultData","raw","prototypeAccessors","defineProperties","uid$2","deep","lazy","active","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","patternTypes","KeepAlive","include","exclude","created","destroyed","testEl","acceptValue","svg","math","isHTMLTag","baseModules","klass","events","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalize","prefixes","upper","prefixed","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","platformModules","vmodel","model$1","some","v","originalDisplay","__vOriginalDisplay","platformDirectives","transitionProps","mode","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","beforeUpdate","updated","hasMove","body","offsetHeight","propertyName","_hasMove","cloneNode","info","platformComponents","condition","message","resolveProps","route","params","resolveQuery","extraQuery","parsedQuery","parseQuery","param","parts","decode","shift","stringifyQuery","encode","val2","createRoute","record","redirectedFrom","meta","fullPath","getFullPath","matched","formatMatch","isSameRoute","START","trailingSlashRE","isObjectEqual","aKeys","bKeys","every","isIncludedRoute","current","queryIncludes","guardEvent","metaKey","ctrlKey","shiftKey","defaultPrevented","button","findAnchor","_Vue","_router","_route","beforeCreate","router","component","View","Link","beforeRouteEnter","beforeRouteLeave","resolvePath","relative","base","stack","segment","hashIndex","queryIndex","cleanPath","createRouteMap","routes","oldPathMap","oldNameMap","pathMap","nameMap","addRouteRecord","matchAs","normalizePath","instances","redirect","alias","aliasRoute","defaultDelimiter","delimiter","PATH_REGEXP","exec","m","escaped","next","prefix","group","modifier","asterisk","partial","repeat","optional","escapeGroup","escapeString","substr","compile","tokensToFunction","encodeURIComponentPretty","encodeURI","encodeAsterisk","pretty","encodeURIComponent","token","TypeError","isarray","attachKeys","re","sensitive","regexpToRegexp","groups","arrayToRegexp","pathToRegexp","stringToRegexp","tokensToRegExp","strict","endsWithDelimiter","getRouteRegex","regexp","hit","regexpCache","fillParams","routeMsg","regexpCompileCache","normalizeLocation","_normalized","assign","rawPath","parsedPath","basePath","createMatcher","addRoutes","currentRoute","paramNames","_createRoute","matchRoute","originalRedirect","resolveRecordPath","aliasedPath","aliasedMatch","aliasedRecord","pathname","decodeURIComponent","setupScroll","saveScrollPosition","state","setStateKey","handleScroll","isPop","app","behavior","scrollBehavior","getScrollPosition","shouldScroll","selector","getElementPosition","isValidPosition","normalizePosition","scrollTo","getStateKey","positionStore","pageXOffset","pageYOffset","docEl","docRect","elRect","isNumber","genKey","Time","now","toFixed","_key","pushState","url","replaceState","runQueue","step","normalizeBase","baseEl","resolveQueue","activated","deactivated","extractGuards","records","guards","flatMapComponents","instance","guard","extractGuard","flatten","extractLeaveGuards","bindGuard","extractUpdateHooks","extractEnterGuards","isValid","bindEnterGuard","poll","resolveAsyncComponents","resolvedDef","getLocation","checkFallback","ensureSlash","getHash","replaceHash","href","pushHash","createHref","routerView","$route","_routerViewCache","inactive","routerViewDepth","encodeReserveRE","encodeReserveReplacer","commaRE","toTypes","eventTypes","required","exact","$router","classes","linkActiveClass","compareTarget","click","index$1","parse_1","compile_1","tokensToFunction_1","tokensToRegExp_1","supportsPushState","ua","Date","History","ready","readyCbs","listen","onReady","transitionTo","onComplete","onAbort","confirmTransition","updateRoute","ensureURL","abort","beforeHooks","iterator","postEnterCbs","prev","afterHooks","HTML5History","History$$1","expectScroll","go","getCurrentLocation","HashHistory","setupListeners","AbstractHistory","targetIndex","VueRouter","apps","matcher","setupHashListener","beforeEach","afterEach","back","forward","getMatchedComponents","normalizedTo","parentId","newStyles","media","sourceMap","part","g","Function","eval","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","addStyle","listToStyles","createStyleElement","styleElement","head","hasSSR","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","styleSheet","replaceText","cssNode","childNodes","sources","btoa","unescape","hasDocument","DEBUG","Error","getElementsByTagName","_isProduction","newList","mayRemove","textStore","replacement"],"mappings":"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","file":"static/js/vendor.46139b3b30dd63dffd78.js","sourcesContent":["webpackJsonp([1,2],[\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar __WEBPACK_AMD_DEFINE_RESULT__;/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n\n  /* jshint indent: false */\n\n  var BLACK = 'b';\n  var WHITE = 'w';\n\n  var EMPTY = -1;\n\n  var PAWN = 'p';\n  var KNIGHT = 'n';\n  var BISHOP = 'b';\n  var ROOK = 'r';\n  var QUEEN = 'q';\n  var KING = 'k';\n\n  var SYMBOLS = 'pnbrqkPNBRQK';\n\n  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n    b: [-17, -15,  17,  15],\n    r: [-16,   1,  16,  -1],\n    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n  };\n\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  };\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  };\n\n  var RANK_1 = 7;\n  var RANK_2 = 6;\n  var RANK_3 = 5;\n  var RANK_4 = 4;\n  var RANK_5 = 3;\n  var RANK_6 = 2;\n  var RANK_7 = 1;\n  var RANK_8 = 0;\n\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n  };\n\n  var board = new Array(128);\n  var kings = {w: EMPTY, b: EMPTY};\n  var turn = WHITE;\n  var castling = {w: 0, b: 0};\n  var ep_square = EMPTY;\n  var half_moves = 0;\n  var move_number = 1;\n  var history = [];\n  var header = {};\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION);\n  } else {\n    load(fen);\n  }\n\n  function clear() {\n    board = new Array(128);\n    kings = {w: EMPTY, b: EMPTY};\n    turn = WHITE;\n    castling = {w: 0, b: 0};\n    ep_square = EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header = {};\n    update_setup(generate_fen());\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION);\n  }\n\n  function load(fen) {\n    var tokens = fen.split(/\\s+/);\n    var position = tokens[0];\n    var square = 0;\n\n    if (!validate_fen(fen).valid) {\n      return false;\n    }\n\n    clear();\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i);\n\n      if (piece === '/') {\n        square += 8;\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10);\n      } else {\n        var color = (piece < 'a') ? WHITE : BLACK;\n        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n        square++;\n      }\n    }\n\n    turn = tokens[1];\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE;\n    }\n\n    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n    half_moves = parseInt(tokens[4], 10);\n    move_number = parseInt(tokens[5], 10);\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n       0: 'No errors.',\n       1: 'FEN string must contain six space-delimited fields.',\n       2: '6th field (move number) must be a positive integer.',\n       3: '5th field (half move counter) must be a non-negative integer.',\n       4: '4th field (en-passant square) is invalid.',\n       5: '3rd field (castling availability) is invalid.',\n       6: '2nd field (side to move) is invalid.',\n       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n       8: '1st field (piece positions) is invalid [consecutive numbers].',\n       9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square',\n    };\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {valid: false, error_number: 1, error: errors[1]};\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n      return {valid: false, error_number: 2, error: errors[2]};\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n      return {valid: false, error_number: 3, error: errors[3]};\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {valid: false, error_number: 4, error: errors[4]};\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return {valid: false, error_number: 5, error: errors[5]};\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {valid: false, error_number: 6, error: errors[6]};\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {valid: false, error_number: 7, error: errors[7]};\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0;\n      var previous_was_number = false;\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return {valid: false, error_number: 8, error: errors[8]};\n          }\n          sum_fields += parseInt(rows[i][k], 10);\n          previous_was_number = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {valid: false, error_number: 9, error: errors[9]};\n          }\n          sum_fields += 1;\n          previous_was_number = false;\n        }\n      }\n      if (sum_fields !== 8) {\n        return {valid: false, error_number: 10, error: errors[10]};\n      }\n    }\n\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n          return {valid: false, error_number: 11, error: errors[11]};\n    }\n\n    /* everything's okay! */\n    return {valid: true, error_number: 0, error: errors[0]};\n  }\n\n  function generate_fen() {\n    var empty = 0;\n    var fen = '';\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++;\n      } else {\n        if (empty > 0) {\n          fen += empty;\n          empty = 0;\n        }\n        var color = board[i].color;\n        var piece = board[i].type;\n\n        fen += (color === WHITE) ?\n                 piece.toUpperCase() : piece.toLowerCase();\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty;\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/';\n        }\n\n        empty = 0;\n        i += 8;\n      }\n    }\n\n    var cflags = '';\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-';\n    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' &&\n          typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1];\n      }\n    }\n    return header;\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return;\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1';\n      header['FEN'] = fen;\n    } else {\n      delete header['SetUp'];\n      delete header['FEN'];\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]];\n    return (piece) ? {type: piece.type, color: piece.color} : null;\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false;\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false;\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false;\n    }\n\n    var sq = SQUARES[square];\n\n    /* don't let the user place more than one king */\n    if (piece.type == KING &&\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n      return false;\n    }\n\n    board[sq] = {type: piece.type, color: piece.color};\n    if (piece.type === KING) {\n      kings[piece.color] = sq;\n    }\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  function remove(square) {\n    var piece = get(square);\n    board[SQUARES[square]] = null;\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY;\n    }\n\n    update_setup(generate_fen());\n\n    return piece;\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    };\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION;\n      move.promotion = promotion;\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type;\n    } else if (flags & BITS.EP_CAPTURE) {\n        move.captured = PAWN;\n    }\n    return move;\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (board[from].type === PAWN &&\n         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n          for (var i = 0, len = pieces.length; i < len; i++) {\n            moves.push(build_move(board, from, to, flags, pieces[i]));\n          }\n      } else {\n       moves.push(build_move(board, from, to, flags));\n      }\n    }\n\n    var moves = [];\n    var us = turn;\n    var them = swap_color(us);\n    var second_rank = {b: RANK_7, w: RANK_2};\n\n    var first_sq = SQUARES.a8;\n    var last_sq = SQUARES.h1;\n    var single_square = false;\n\n    /* do we want legal moves? */\n    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n                options.legal : true;\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square];\n        single_square = true;\n      } else {\n        /* invalid square */\n        return [];\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece == null || piece.color !== us) {\n        continue;\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0];\n        if (board[square] == null) {\n            add_move(board, moves, i, square, BITS.NORMAL);\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1];\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN);\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j];\n          if (square & 0x88) continue;\n\n          if (board[square] != null &&\n              board[square].color === them) {\n              add_move(board, moves, i, square, BITS.CAPTURE);\n          } else if (square === ep_square) {\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j];\n          var square = i;\n\n          while (true) {\n            square += offset;\n            if (square & 0x88) break;\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL);\n            } else {\n              if (board[square].color === us) break;\n              add_move(board, moves, i, square, BITS.CAPTURE);\n              break;\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break;\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if ((!single_square) || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from + 2;\n\n        if (board[castling_from + 1] == null &&\n            board[castling_to]       == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from + 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us] , castling_to,\n                   BITS.KSIDE_CASTLE);\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from - 2;\n\n        if (board[castling_from - 1] == null &&\n            board[castling_from - 2] == null &&\n            board[castling_from - 3] == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from - 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us], castling_to,\n                   BITS.QSIDE_CASTLE);\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves;\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = [];\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i]);\n      }\n      undo_move();\n    }\n\n    return legal_moves;\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n\n    var output = '';\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O';\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O';\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy);\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator;\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0];\n        }\n        output += 'x';\n      }\n\n      output += algebraic(move.to);\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase();\n      }\n    }\n\n    make_move(move);\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#';\n      } else {\n        output += '+';\n      }\n    }\n    undo_move();\n\n    return output;\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue;\n\n      var piece = board[i];\n      var difference = i - square;\n      var index = difference + 119;\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true;\n          } else {\n            if (piece.color === BLACK) return true;\n          }\n          continue;\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true;\n\n        var offset = RAYS[index];\n        var j = i + offset;\n\n        var blocked = false;\n        while (j !== square) {\n          if (board[j] != null) { blocked = true; break; }\n          j += offset;\n        }\n\n        if (!blocked) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color]);\n  }\n\n  function in_check() {\n    return king_attacked(turn);\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0;\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0;\n  }\n\n  function insufficient_material() {\n    var pieces = {};\n    var bishops = [];\n    var num_pieces = 0;\n    var sq_color = 0;\n\n    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2;\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece) {\n        pieces[piece.type] = (piece.type in pieces) ?\n                              pieces[piece.type] + 1 : 1;\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color);\n        }\n        num_pieces++;\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) { return true; }\n\n    /* k vs. kn .... or .... k vs. kb */\n    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n                                 pieces[KNIGHT] === 1)) { return true; }\n\n    /* kb vs. kb where any number of bishops are all on the same color */\n    else if (num_pieces === pieces[BISHOP] + 2) {\n      var sum = 0;\n      var len = bishops.length;\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i];\n      }\n      if (sum === 0 || sum === len) { return true; }\n    }\n\n    return false;\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = [];\n    var positions = {};\n    var repetition = false;\n\n    while (true) {\n      var move = undo_move();\n      if (!move) break;\n      moves.push(move);\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\n      /* has the position occurred three or move times */\n      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n      if (positions[fen] >= 3) {\n        repetition = true;\n      }\n\n      if (!moves.length) {\n        break;\n      }\n      make_move(moves.pop());\n    }\n\n    return repetition;\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: {b: kings.b, w: kings.w},\n      turn: turn,\n      castling: {b: castling.b, w: castling.w},\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    });\n  }\n\n  function make_move(move) {\n    var us = turn;\n    var them = swap_color(us);\n    push(move);\n\n    board[move.to] = board[move.from];\n    board[move.from] = null;\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null;\n      } else {\n        board[move.to + 16] = null;\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = {type: move.promotion, color: us};\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to;\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1;\n        var castling_from = move.to + 1;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1;\n        var castling_from = move.to - 2;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      }\n\n      /* turn off castling */\n      castling[us] = '';\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (move.from === ROOKS[us][i].square &&\n            castling[us] & ROOKS[us][i].flag) {\n          castling[us] ^= ROOKS[us][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (move.to === ROOKS[them][i].square &&\n            castling[them] & ROOKS[them][i].flag) {\n          castling[them] ^= ROOKS[them][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16;\n      } else {\n        ep_square = move.to + 16;\n      }\n    } else {\n      ep_square = EMPTY;\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0;\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0;\n    } else {\n      half_moves++;\n    }\n\n    if (turn === BLACK) {\n      move_number++;\n    }\n    turn = swap_color(turn);\n  }\n\n  function undo_move() {\n    var old = history.pop();\n    if (old == null) { return null; }\n\n    var move = old.move;\n    kings = old.kings;\n    turn = old.turn;\n    castling = old.castling;\n    ep_square = old.ep_square;\n    half_moves = old.half_moves;\n    move_number = old.move_number;\n\n    var us = turn;\n    var them = swap_color(turn);\n\n    board[move.from] = board[move.to];\n    board[move.from].type = move.piece;  // to undo any promotions\n    board[move.to] = null;\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = {type: move.captured, color: them};\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index;\n      if (us === BLACK) {\n        index = move.to - 16;\n      } else {\n        index = move.to + 16;\n      }\n      board[index] = {type: PAWN, color: them};\n    }\n\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from;\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1;\n        castling_from = move.to - 1;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2;\n        castling_from = move.to + 1;\n      }\n\n      board[castling_to] = board[castling_from];\n      board[castling_from] = null;\n    }\n\n    return move;\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({legal: !sloppy});\n\n    var from = move.from;\n    var to = move.to;\n    var piece = move.piece;\n\n    var ambiguities = 0;\n    var same_rank = 0;\n    var same_file = 0;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from;\n      var ambig_to = moves[i].to;\n      var ambig_piece = moves[i].piece;\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++;\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++;\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++;\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from);\n      }\n      /* if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      else if (same_file > 0) {\n        return algebraic(from).charAt(1);\n      }\n      /* else use the file symbol */\n      else {\n        return algebraic(from).charAt(0);\n      }\n    }\n\n    return '';\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n';\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |';\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . ';\n      } else {\n        var piece = board[i].type;\n        var color = board[i].color;\n        var symbol = (color === WHITE) ?\n                     piece.toUpperCase() : piece.toLowerCase();\n        s += ' ' + symbol + ' ';\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n';\n        i += 8;\n      }\n    }\n    s += '   +------------------------+\\n';\n    s += '     a  b  c  d  e  f  g  h\\n';\n\n    return s;\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move);\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        var piece = matches[1];\n        var from = matches[2];\n        var to = matches[3];\n        var promotion = matches[4];\n      }\n    }\n\n    var moves = generate_moves();\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n        return moves[i];\n      } else {\n        if (matches &&\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\n            SQUARES[from] == moves[i].from &&\n            SQUARES[to] == moves[i].to &&\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4;\n  }\n\n  function file(i) {\n    return i & 15;\n  }\n\n  function algebraic(i){\n    var f = file(i), r = rank(i);\n    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE;\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move);\n    move.san = move_to_san(move, false);\n    move.to = algebraic(move.to);\n    move.from = algebraic(move.from);\n\n    var flags = '';\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag];\n      }\n    }\n    move.flags = flags;\n\n    return move;\n  }\n\n  function clone(obj) {\n    var dupe = (obj instanceof Array) ? [] : {};\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property]);\n      } else {\n        dupe[property] = obj[property];\n      }\n    }\n\n    return dupe;\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({legal: false});\n    var nodes = 0;\n    var color = turn;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1);\n          nodes += child_nodes;\n        } else {\n          nodes++;\n        }\n      }\n      undo_move();\n    }\n\n    return nodes;\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n                /* from the ECMA-262 spec (section 12.6.4):\n                 * \"The mechanics of enumerating the properties ... is\n                 * implementation dependent\"\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n                 * ordered correctly\n                 */\n                var keys = [];\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                  if (i & 0x88) { i += 7; continue; }\n                  keys.push(algebraic(i));\n                }\n                return keys;\n              })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen);\n    },\n\n    reset: function() {\n      return reset();\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options);\n      var moves = [];\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose) {\n          moves.push(make_pretty(ugly_moves[i]));\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false));\n        }\n      }\n\n      return moves;\n    },\n\n    in_check: function() {\n      return in_check();\n    },\n\n    in_checkmate: function() {\n      return in_checkmate();\n    },\n\n    in_stalemate: function() {\n      return in_stalemate();\n    },\n\n    in_draw: function() {\n      return half_moves >= 100 ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    insufficient_material: function() {\n      return insufficient_material();\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition();\n    },\n\n    game_over: function() {\n      return half_moves >= 100 ||\n             in_checkmate() ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen);\n    },\n\n    fen: function() {\n      return generate_fen();\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline = (typeof options === 'object' &&\n                     typeof options.newline_char === 'string') ?\n                     options.newline_char : '\\n';\n      var max_width = (typeof options === 'object' &&\n                       typeof options.max_width === 'number') ?\n                       options.max_width : 0;\n      var result = [];\n      var header_exists = false;\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n        header_exists = true;\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline);\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = [];\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      var moves = [];\n      var move_string = '';\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...';\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string);\n          }\n          move_string = move_number + '.';\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false);\n        make_move(move);\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string);\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result);\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ');\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0;\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n\n          result.push(newline);\n          current_width = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          current_width++;\n        }\n        result.push(moves[i]);\n        current_width += moves[i].length;\n      }\n\n      return result.join('');\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\');\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true;\n        }\n        return false;\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char = (typeof options === 'object' &&\n                            typeof options.newline_char === 'string') ?\n                            options.newline_char : '\\r?\\n';\n        var header_obj = {};\n        var headers = header.split(new RegExp(mask(newline_char)));\n        var key = '';\n        var value = '';\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n          if (trim(key).length > 0) {\n            header_obj[key] = value;\n          }\n        }\n\n        return header_obj;\n      }\n\n      var newline_char = (typeof options === 'object' &&\n                          typeof options.newline_char === 'string') ?\n                          options.newline_char : '\\r?\\n';\n      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n                             '(' + mask(newline_char) + ')*' +\n                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n      /* get header part of the PGN file */\n      var header_string = pgn.replace(regex, '$1');\n\n      /* no info part given, begins with moves */\n      if (header_string[0] !== '[') {\n        header_string = '';\n      }\n\n      reset();\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options);\n      for (var key in headers) {\n        set_header([key, headers[key]]);\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n      * [FEN position] */\n      if (headers['SetUp'] === '1') {\n          if (!(('FEN' in headers) && load(headers['FEN']))) {\n            return false;\n          }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '');\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '');\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '');\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/));\n\n      /* delete empty entries */\n      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n      var move = '';\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy);\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1];\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move]);\n        }\n      }\n      else {\n        move = move_from_san(move, sloppy);\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n      return true;\n    },\n\n    header: function() {\n      return set_header(arguments);\n    },\n\n    ascii: function() {\n      return ascii();\n    },\n\n    turn: function() {\n      return turn;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      var move_obj = null;\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy);\n      } else if (typeof move === 'object') {\n        var moves = generate_moves();\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) &&\n              move.to === algebraic(moves[i].to) &&\n              (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)) {\n            move_obj = moves[i];\n            break;\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null;\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj);\n\n      make_move(move_obj);\n\n      return pretty_move;\n    },\n\n    undo: function() {\n      var move = undo_move();\n      return (move) ? make_pretty(move) : null;\n    },\n\n    clear: function() {\n      return clear();\n    },\n\n    put: function(piece, square) {\n      return put(piece, square);\n    },\n\n    get: function(square) {\n      return get(square);\n    },\n\n    remove: function(square) {\n      return remove(square);\n    },\n\n    perft: function(depth) {\n      return perft(depth);\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square];\n        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n      }\n\n      return null;\n    },\n\n    history: function(options) {\n      var reversed_history = [];\n      var move_history = [];\n      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n                     options.verbose);\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n        if (verbose) {\n          move_history.push(make_pretty(move));\n        } else {\n          move_history.push(move_to_san(move));\n        }\n        make_move(move);\n      }\n\n      return move_history;\n    }\n\n  };\n};\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (true) exports.Chess = Chess;\n/* export Chess object for any RequireJS compatible environment */\nif (true) !(__WEBPACK_AMD_DEFINE_RESULT__ = function () { return Chess;  }.call(exports, __webpack_require__, exports, module),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * Vue.js v2.2.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: \"production\" !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar perf;\n\nif (false) {\n  perf = inBrowser && window.performance;\n  if (perf && (!perf.mark || !perf.measure)) {\n    perf = undefined;\n  }\n}\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  if (Array.isArray(obj)) {\n    obj.splice(key, 1);\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (false) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, type) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, type);\n  } else {\n    if (false) {\n      warn((\"Error in \" + type + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'option is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n      perf.mark(startTag);\n      var vnode = vm._render();\n      perf.mark(endTag);\n      perf.measure((name + \" render\"), startTag, endTag);\n      perf.mark(startTag);\n      vm._update(vnode, hydrating);\n      perf.mark(endTag);\n      perf.measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (false) {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (false) {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (false) {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  updateChildComponent(\n    child,\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    activateChildComponent(vnode.componentInstance, true /* direct */);\n  }\n}\n\nfunction destroy (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      deactivateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && \"production\" !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          data[key] = value[key];\n        } else {\n          var type = data.attrs && data.attrs.type;\n          var hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initInjections (vm) {\n  var provide = vm.$options.provide;\n  var inject = vm.$options.inject;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && source._provided[provideKey]) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (false) {\n      perf.mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    initInjections(vm);\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      perf.mark('init end');\n      perf.measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$2 (options) {\n  if (false) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.2.1';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (false) {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (false) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\n\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar str;\nvar index$1;\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookAgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookAgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookAgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookAgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.mustUseProp = mustUseProp;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (false) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (false) {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = Vue$2;\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(27)))\n\n/***/ }),\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */,\n/* 16 */,\n/* 17 */,\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n  * vue-router v2.2.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (!condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // inject instance registration hooks\n    var hooks = data.hook || (data.hook = {});\n    hooks.init = function (vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.prepatch = function (oldVnode, vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.destroy = function (vnode) {\n      if (matched.instances[name] === vnode.child) {\n        matched.instances[name] = undefined;\n      }\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      warn(false, (\"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", expecting an object, function or boolean.\"));\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more comformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  if (query) {\n    var parsedQuery;\n    try {\n      parsedQuery = parseQuery(query);\n    } catch (e) {\n      \"production\" !== 'production' && warn(false, e.message);\n      parsedQuery = {};\n    }\n    for (var key in extraQuery) {\n      parsedQuery[key] = extraQuery[key];\n    }\n    return parsedQuery\n  } else {\n    return extraQuery\n  }\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom\n) {\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (ref) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  return (path || '/') + stringifyQuery(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n    var classes = {};\n    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active';\n    var compareTarget = location.path ? createRoute(null, location) : route;\n    classes[activeClass] = this.exact\n      ? isSameRoute(current, compareTarget)\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.target && e.target.getAttribute) {\n    var target = e.target.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (this.$options.router) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  if (relative.charAt(0) === '/') {\n    return relative\n  }\n\n  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '.') {\n      continue\n    } else if (segment === '..') {\n      stack.pop();\n    } else {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathMap,\n  oldNameMap\n) {\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathMap, nameMap, route);\n  });\n\n  return {\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (false) {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var record = {\n    path: normalizePath(path, parent),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (false) {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (false) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = index$1;\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCache = Object.create(null);\n\nfunction getRouteRegex (path) {\n  var hit = regexpCache[path];\n  var keys, regexp;\n\n  if (hit) {\n    keys = hit.keys;\n    regexp = hit.regexp;\n  } else {\n    keys = [];\n    regexp = index(path, keys);\n    regexpCache[path] = { keys: keys, regexp: regexp };\n  }\n\n  return { keys: keys, regexp: regexp }\n}\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (false) {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (false) {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : (current && current.path) || '/';\n  var query = resolveQuery(parsedPath.query, next.query);\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\nfunction createMatcher (routes) {\n  var ref = createRouteMap(routes);\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (false) {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = getRouteRegex(record.path).keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var path in pathMap) {\n        if (matchRoute(path, location.params, location.path)) {\n          return _createRoute(pathMap[path], location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      \"production\" !== 'production' && warn(\n        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n      );\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (false) {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  path,\n  params,\n  pathname\n) {\n  var ref = getRouteRegex(path);\n  var regexp = ref.regexp;\n  var keys = ref.keys;\n  var m = pathname.match(regexp);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) { params[key.name] = val; }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (false) {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n  }\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) {\n        cb(route);\n      });\n    }\n  }, onAbort);\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function () { onAbort && onAbort(); };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    hook(route, current, function (to) {\n      if (to === false) {\n        // next(false) -> abort navigation, ensure current URL\n        this$1.ensureURL(true);\n        abort();\n      } else if (typeof to === 'string' || typeof to === 'object') {\n        // next('/') or next({ path: '/' }) -> redirect\n        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to);\n        abort();\n      } else {\n        // confirm transition and pass on the value\n        next(to);\n      }\n    });\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    runQueue(enterGuards, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { return cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  return function boundRouteGuard () {\n    return guard.apply(instance, arguments)\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return flatMapComponents(matched, function (def, _, match, key) {\n    // if it's a function and doesn't have Vue options attached,\n    // assume it's an async component resolve function.\n    // we are not using Vue's default async resolving mechanism because\n    // we want to halt the navigation until the incoming component has been\n    // resolved.\n    if (typeof def === 'function' && !def.options) {\n      return function (to, from, next) {\n        var resolve = once(function (resolvedDef) {\n          match.components[key] = resolvedDef;\n          next();\n        });\n\n        var reject = once(function (reason) {\n          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason));\n          next(false);\n        });\n\n        var res = def(resolve, reject);\n        if (res && typeof res.then === 'function') {\n          res.then(resolve, reject);\n        }\n      }\n    }\n  })\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, this$1.current, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, this$1.current, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || []);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (false) {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  \"production\" !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  this.beforeHooks.push(fn);\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  this.afterHooks.push(fn);\n};\n\nVueRouter.prototype.onReady = function onReady (cb) {\n  this.history.onReady(cb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(to, current || this.history.current, append);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.2.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = VueRouter;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 28 */,\n/* 29 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(26)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ })\n]);\n\n\n// WEBPACK FOOTER //\n// static/js/vendor.46139b3b30dd63dffd78.js","module.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  scopeId,\n  cssModules\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  // inject cssModules\n  if (cssModules) {\n    var computed = options.computed || (options.computed = {})\n    Object.keys(cssModules).forEach(function (key) {\n      var module = cssModules[key]\n      computed[key] = function () { return module }\n    })\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-loader/lib/component-normalizer.js\n// module id = 0\n// module chunks = 1","/*!\r\n * chessboard.js $version$\r\n *\r\n * Copyright 2013 Chris Oakman\r\n * Released under the MIT license\r\n * https://github.com/oakmac/chessboardjs/blob/master/LICENSE\r\n *\r\n * Date: $date$\r\n */\r\n\r\n//------------------------------------------------------------------------------\r\n// Chess Util Functions\r\n//------------------------------------------------------------------------------\r\nvar COLUMNS = 'abcdefgh'.split('');\r\n\r\nfunction validMove(move) {\r\n  // move should be a string\r\n  if (typeof move !== 'string') return false;\r\n\r\n  // move should be in the form of \"e2-e4\", \"f6-d5\"\r\n  var tmp = move.split('-');\r\n  if (tmp.length !== 2) return false;\r\n\r\n  return (validSquare(tmp[0]) === true && validSquare(tmp[1]) === true);\r\n}\r\n\r\nfunction validSquare(square) {\r\n  if (typeof square !== 'string') return false;\r\n  return (square.search(/^[a-h][1-8]$/) !== -1);\r\n}\r\n\r\nfunction validPieceCode(code) {\r\n  if (typeof code !== 'string') return false;\r\n  return (code.search(/^[bw][KQRNBP]$/) !== -1);\r\n}\r\n\r\n// TODO: this whole function could probably be replaced with a single regex\r\nfunction validFen(fen) {\r\n  if (typeof fen !== 'string') return false;\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  // FEN should be 8 sections separated by slashes\r\n  var chunks = fen.split('/');\r\n  if (chunks.length !== 8) return false;\r\n\r\n  // check the piece sections\r\n  for (var i = 0; i < 8; i++) {\r\n    if (chunks[i] === '' ||\r\n        chunks[i].length > 8 ||\r\n        chunks[i].search(/[^kqrbnpKQRNBP1-8]/) !== -1) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validPositionObject(pos) {\r\n  if (typeof pos !== 'object') return false;\r\n\r\n  for (var i in pos) {\r\n    if (pos.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (validSquare(i) !== true || validPieceCode(pos[i]) !== true) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n// convert FEN piece code to bP, wK, etc\r\nfunction fenToPieceCode(piece) {\r\n  // black piece\r\n  if (piece.toLowerCase() === piece) {\r\n    return 'b' + piece.toUpperCase();\r\n  }\r\n\r\n  // white piece\r\n  return 'w' + piece.toUpperCase();\r\n}\r\n\r\n// convert bP, wK, etc code to FEN structure\r\nfunction pieceCodeToFen(piece) {\r\n  var tmp = piece.split('');\r\n\r\n  // white piece\r\n  if (tmp[0] === 'w') {\r\n    return tmp[1].toUpperCase();\r\n  }\r\n\r\n  // black piece\r\n  return tmp[1].toLowerCase();\r\n}\r\n\r\n// convert FEN string to position object\r\n// returns false if the FEN string is invalid\r\nfunction fenToObj(fen) {\r\n  if (validFen(fen) !== true) {\r\n    return false;\r\n  }\r\n\r\n  // cut off any move, castling, etc info from the end\r\n  // we're only interested in position information\r\n  fen = fen.replace(/ .+$/, '');\r\n\r\n  var rows = fen.split('/');\r\n  var position = {};\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    var row = rows[i].split('');\r\n    var colIndex = 0;\r\n\r\n    // loop through each character in the FEN section\r\n    for (var j = 0; j < row.length; j++) {\r\n      // number / empty squares\r\n      if (row[j].search(/[1-8]/) !== -1) {\r\n        var emptySquares = parseInt(row[j], 10);\r\n        colIndex += emptySquares;\r\n      }\r\n      // piece\r\n      else {\r\n        var square = COLUMNS[colIndex] + currentRow;\r\n        position[square] = fenToPieceCode(row[j]);\r\n        colIndex++;\r\n      }\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\n// position object to FEN string\r\n// returns false if the obj is not a valid position object\r\nfunction objToFen(obj) {\r\n  if (validPositionObject(obj) !== true) {\r\n    return false;\r\n  }\r\n\r\n  var fen = '';\r\n\r\n  var currentRow = 8;\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = COLUMNS[j] + currentRow;\r\n\r\n      // piece exists\r\n      if (obj.hasOwnProperty(square) === true) {\r\n        fen += pieceCodeToFen(obj[square]);\r\n      }\r\n\r\n      // empty space\r\n      else {\r\n        fen += '1';\r\n      }\r\n    }\r\n\r\n    if (i !== 7) {\r\n      fen += '/';\r\n    }\r\n\r\n    currentRow--;\r\n  }\r\n\r\n  // squeeze the numbers together\r\n  // haha, I love this solution...\r\n  fen = fen.replace(/11111111/g, '8');\r\n  fen = fen.replace(/1111111/g, '7');\r\n  fen = fen.replace(/111111/g, '6');\r\n  fen = fen.replace(/11111/g, '5');\r\n  fen = fen.replace(/1111/g, '4');\r\n  fen = fen.replace(/111/g, '3');\r\n  fen = fen.replace(/11/g, '2');\r\n\r\n  return fen;\r\n}\r\n\r\nvar ChessBoard = function (containerElOrId, cfg) {\r\n\r\ncfg = cfg || {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Constants\r\n//------------------------------------------------------------------------------\r\n\r\nvar MINIMUM_JQUERY_VERSION = '1.7.0',\r\n  START_FEN = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR',\r\n  START_POSITION = fenToObj(START_FEN);\r\n\r\n// use unique class names to prevent clashing with anything else on the page\r\n// and simplify selectors\r\n// NOTE: these should never change\r\nvar CSS = {\r\n  alpha: 'alpha-d2270',\r\n  black: 'black-3c85d',\r\n  board: 'board-b72b1',\r\n  chessboard: 'chessboard-63f37',\r\n  clearfix: 'clearfix-7da63',\r\n  highlight1: 'highlight1-32417',\r\n  highlight2: 'highlight2-9c5d2',\r\n  notation: 'notation-322f9',\r\n  numeric: 'numeric-fc462',\r\n  piece: 'piece-417db',\r\n  row: 'row-5277c',\r\n  sparePieces: 'spare-pieces-7492f',\r\n  sparePiecesBottom: 'spare-pieces-bottom-ae20f',\r\n  sparePiecesTop: 'spare-pieces-top-4028b',\r\n  square: 'square-55d63',\r\n  white: 'white-1e1d7'\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Module Scope Variables\r\n//------------------------------------------------------------------------------\r\n\r\n// DOM elements\r\nvar containerEl,\r\n  boardEl,\r\n  draggedPieceEl,\r\n  sparePiecesTopEl,\r\n  sparePiecesBottomEl;\r\n\r\n// constructor return object\r\nvar widget = {};\r\n\r\n//------------------------------------------------------------------------------\r\n// Stateful\r\n//------------------------------------------------------------------------------\r\n\r\nvar ANIMATION_HAPPENING = false,\r\n  BOARD_BORDER_SIZE = 2,\r\n  CURRENT_ORIENTATION = 'white',\r\n  CURRENT_POSITION = {},\r\n  SQUARE_SIZE,\r\n  DRAGGED_PIECE,\r\n  DRAGGED_PIECE_LOCATION,\r\n  DRAGGED_PIECE_SOURCE,\r\n  DRAGGING_A_PIECE = false,\r\n  SPARE_PIECE_ELS_IDS = {},\r\n  SQUARE_ELS_IDS = {},\r\n  SQUARE_ELS_OFFSETS;\r\n\r\n//------------------------------------------------------------------------------\r\n// JS Util Functions\r\n//------------------------------------------------------------------------------\r\n\r\n// http://tinyurl.com/3ttloxj\r\nfunction uuid() {\r\n  return 'xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx-xxxx'.replace(/x/g, function(c) {\r\n    var r = Math.random() * 16 | 0;\r\n    return r.toString(16);\r\n  });\r\n}\r\n\r\nfunction deepCopy(thing) {\r\n  return JSON.parse(JSON.stringify(thing));\r\n}\r\n\r\nfunction parseSemVer(version) {\r\n  var tmp = version.split('.');\r\n  return {\r\n    major: parseInt(tmp[0], 10),\r\n    minor: parseInt(tmp[1], 10),\r\n    patch: parseInt(tmp[2], 10)\r\n  };\r\n}\r\n\r\n// returns true if version is >= minimum\r\nfunction compareSemVer(version, minimum) {\r\n  version = parseSemVer(version);\r\n  minimum = parseSemVer(minimum);\r\n\r\n  var versionNum = (version.major * 10000 * 10000) +\r\n    (version.minor * 10000) + version.patch;\r\n  var minimumNum = (minimum.major * 10000 * 10000) +\r\n    (minimum.minor * 10000) + minimum.patch;\r\n\r\n  return (versionNum >= minimumNum);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Validation / Errors\r\n//------------------------------------------------------------------------------\r\n\r\nfunction error(code, msg, obj) {\r\n  // do nothing if showErrors is not set\r\n  if (cfg.hasOwnProperty('showErrors') !== true ||\r\n      cfg.showErrors === false) {\r\n    return;\r\n  }\r\n\r\n  var errorText = 'ChessBoard Error ' + code + ': ' + msg;\r\n\r\n  // print to console\r\n  if (cfg.showErrors === 'console' &&\r\n      typeof console === 'object' &&\r\n      typeof console.log === 'function') {\r\n    console.log(errorText);\r\n    if (arguments.length >= 2) {\r\n      console.log(obj);\r\n    }\r\n    return;\r\n  }\r\n\r\n  // alert errors\r\n  if (cfg.showErrors === 'alert') {\r\n    if (obj) {\r\n      errorText += '\\n\\n' + JSON.stringify(obj);\r\n    }\r\n    window.alert(errorText);\r\n    return;\r\n  }\r\n\r\n  // custom function\r\n  if (typeof cfg.showErrors === 'function') {\r\n    cfg.showErrors(code, msg, obj);\r\n  }\r\n}\r\n\r\n// check dependencies\r\nfunction checkDeps() {\r\n  // if containerId is a string, it must be the ID of a DOM node\r\n  if (typeof containerElOrId === 'string') {\r\n    // cannot be empty\r\n    if (containerElOrId === '') {\r\n      window.alert('ChessBoard Error 1001: ' +\r\n        'The first argument to ChessBoard() cannot be an empty string.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // make sure the container element exists in the DOM\r\n    var el = document.getElementById(containerElOrId);\r\n    if (! el) {\r\n      window.alert('ChessBoard Error 1002: Element with id \"' +\r\n        containerElOrId + '\" does not exist in the DOM.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n\r\n    // set the containerEl\r\n    containerEl = $(el);\r\n  }\r\n\r\n  // else it must be something that becomes a jQuery collection\r\n  // with size 1\r\n  // ie: a single DOM node or jQuery object\r\n  else {\r\n    containerEl = $(containerElOrId);\r\n\r\n    if (containerEl.length !== 1) {\r\n      window.alert('ChessBoard Error 1003: The first argument to ' +\r\n        'ChessBoard() must be an ID or a single DOM node.' +\r\n        '\\n\\nExiting...');\r\n      return false;\r\n    }\r\n  }\r\n\r\n  // JSON must exist\r\n  if (! window.JSON ||\r\n      typeof JSON.stringify !== 'function' ||\r\n      typeof JSON.parse !== 'function') {\r\n    window.alert('ChessBoard Error 1004: JSON does not exist. ' +\r\n      'Please include a JSON polyfill.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  // check for a compatible version of jQuery\r\n  if (! (typeof window.$ && $.fn && $.fn.jquery &&\r\n      compareSemVer($.fn.jquery, MINIMUM_JQUERY_VERSION) === true)) {\r\n    window.alert('ChessBoard Error 1005: Unable to find a valid version ' +\r\n      'of jQuery. Please include jQuery ' + MINIMUM_JQUERY_VERSION + ' or ' +\r\n      'higher on the page.\\n\\nExiting...');\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nfunction validAnimationSpeed(speed) {\r\n  if (speed === 'fast' || speed === 'slow') {\r\n    return true;\r\n  }\r\n\r\n  if ((parseInt(speed, 10) + '') !== (speed + '')) {\r\n    return false;\r\n  }\r\n\r\n  return (speed >= 0);\r\n}\r\n\r\n// validate config / set default options\r\nfunction expandConfig() {\r\n  if (typeof cfg === 'string' || validPositionObject(cfg) === true) {\r\n    cfg = {\r\n      position: cfg\r\n    };\r\n  }\r\n\r\n  // default for orientation is white\r\n  if (cfg.orientation !== 'black') {\r\n    cfg.orientation = 'white';\r\n  }\r\n  CURRENT_ORIENTATION = cfg.orientation;\r\n\r\n  // default for showNotation is true\r\n  if (cfg.showNotation !== false) {\r\n    cfg.showNotation = true;\r\n  }\r\n\r\n  // default for draggable is false\r\n  if (cfg.draggable !== true) {\r\n    cfg.draggable = false;\r\n  }\r\n\r\n  // default for dropOffBoard is 'snapback'\r\n  if (cfg.dropOffBoard !== 'trash') {\r\n    cfg.dropOffBoard = 'snapback';\r\n  }\r\n\r\n  // default for sparePieces is false\r\n  if (cfg.sparePieces !== true) {\r\n    cfg.sparePieces = false;\r\n  }\r\n\r\n  // draggable must be true if sparePieces is enabled\r\n  if (cfg.sparePieces === true) {\r\n    cfg.draggable = true;\r\n  }\r\n\r\n  // default piece theme is wikipedia\r\n  if (cfg.hasOwnProperty('pieceTheme') !== true ||\r\n      (typeof cfg.pieceTheme !== 'string' &&\r\n       typeof cfg.pieceTheme !== 'function')) {\r\n    cfg.pieceTheme = 'img/chesspieces/wikipedia/{piece}.png';\r\n  }\r\n\r\n  // animation speeds\r\n  if (cfg.hasOwnProperty('appearSpeed') !== true ||\r\n      validAnimationSpeed(cfg.appearSpeed) !== true) {\r\n    cfg.appearSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('moveSpeed') !== true ||\r\n      validAnimationSpeed(cfg.moveSpeed) !== true) {\r\n    cfg.moveSpeed = 200;\r\n  }\r\n  if (cfg.hasOwnProperty('snapbackSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapbackSpeed) !== true) {\r\n    cfg.snapbackSpeed = 50;\r\n  }\r\n  if (cfg.hasOwnProperty('snapSpeed') !== true ||\r\n      validAnimationSpeed(cfg.snapSpeed) !== true) {\r\n    cfg.snapSpeed = 25;\r\n  }\r\n  if (cfg.hasOwnProperty('trashSpeed') !== true ||\r\n      validAnimationSpeed(cfg.trashSpeed) !== true) {\r\n    cfg.trashSpeed = 100;\r\n  }\r\n\r\n  // make sure position is valid\r\n  if (cfg.hasOwnProperty('position') === true) {\r\n    if (cfg.position === 'start') {\r\n      CURRENT_POSITION = deepCopy(START_POSITION);\r\n    }\r\n\r\n    else if (validFen(cfg.position) === true) {\r\n      CURRENT_POSITION = fenToObj(cfg.position);\r\n    }\r\n\r\n    else if (validPositionObject(cfg.position) === true) {\r\n      CURRENT_POSITION = deepCopy(cfg.position);\r\n    }\r\n\r\n    else {\r\n      error(7263, 'Invalid value passed to config.position.', cfg.position);\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// DOM Misc\r\n//------------------------------------------------------------------------------\r\n\r\n// calculates square size based on the width of the container\r\n// got a little CSS black magic here, so let me explain:\r\n// get the width of the container element (could be anything), reduce by 1 for\r\n// fudge factor, and then keep reducing until we find an exact mod 8 for\r\n// our square size\r\nfunction calculateSquareSize() {\r\n  var containerWidth = parseInt(containerEl.width(), 10);\r\n\r\n  // defensive, prevent infinite loop\r\n  if (! containerWidth || containerWidth <= 0) {\r\n    return 0;\r\n  }\r\n\r\n  // pad one pixel\r\n  var boardWidth = containerWidth - 1;\r\n\r\n  while (boardWidth % 8 !== 0 && boardWidth > 0) {\r\n    boardWidth--;\r\n  }\r\n\r\n  return (boardWidth / 8);\r\n}\r\n\r\n// create random IDs for elements\r\nfunction createElIds() {\r\n  // squares on the board\r\n  for (var i = 0; i < COLUMNS.length; i++) {\r\n    for (var j = 1; j <= 8; j++) {\r\n      var square = COLUMNS[i] + j;\r\n      SQUARE_ELS_IDS[square] = square + '-' + uuid();\r\n    }\r\n  }\r\n\r\n  // spare pieces\r\n  var pieces = 'KQRBNP'.split('');\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    var whitePiece = 'w' + pieces[i];\r\n    var blackPiece = 'b' + pieces[i];\r\n    SPARE_PIECE_ELS_IDS[whitePiece] = whitePiece + '-' + uuid();\r\n    SPARE_PIECE_ELS_IDS[blackPiece] = blackPiece + '-' + uuid();\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Markup Building\r\n//------------------------------------------------------------------------------\r\n\r\nfunction buildBoardContainer() {\r\n  var html = '<div class=\"' + CSS.chessboard + '\">';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesTop + '\"></div>';\r\n  }\r\n\r\n  html += '<div class=\"' + CSS.board + '\"></div>';\r\n\r\n  if (cfg.sparePieces === true) {\r\n    html += '<div class=\"' + CSS.sparePieces + ' ' +\r\n      CSS.sparePiecesBottom + '\"></div>';\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n}\r\n\r\n/*\r\nvar buildSquare = function(color, size, id) {\r\n  var html = '<div class=\"' + CSS.square + ' ' + CSS[color] + '\" ' +\r\n  'style=\"width: ' + size + 'px; height: ' + size + 'px\" ' +\r\n  'id=\"' + id + '\">';\r\n\r\n  if (cfg.showNotation === true) {\r\n\r\n  }\r\n\r\n  html += '</div>';\r\n\r\n  return html;\r\n};\r\n*/\r\n\r\nfunction buildBoard(orientation) {\r\n  if (orientation !== 'black') {\r\n    orientation = 'white';\r\n  }\r\n\r\n  var html = '';\r\n\r\n  // algebraic notation / orientation\r\n  var alpha = deepCopy(COLUMNS);\r\n  var row = 8;\r\n  if (orientation === 'black') {\r\n    alpha.reverse();\r\n    row = 1;\r\n  }\r\n\r\n  var squareColor = 'white';\r\n  for (var i = 0; i < 8; i++) {\r\n    html += '<div class=\"' + CSS.row + '\">';\r\n    for (var j = 0; j < 8; j++) {\r\n      var square = alpha[j] + row;\r\n\r\n      html += '<div class=\"' + CSS.square + ' ' + CSS[squareColor] + ' ' +\r\n        'square-' + square + '\" ' +\r\n        'style=\"width: ' + SQUARE_SIZE + 'px; height: ' + SQUARE_SIZE + 'px\" ' +\r\n        'id=\"' + SQUARE_ELS_IDS[square] + '\" ' +\r\n        'data-square=\"' + square + '\">';\r\n\r\n      if (cfg.showNotation === true) {\r\n        // alpha notation\r\n        if ((orientation === 'white' && row === 1) ||\r\n            (orientation === 'black' && row === 8)) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.alpha + '\">' +\r\n            alpha[j] + '</div>';\r\n        }\r\n\r\n        // numeric notation\r\n        if (j === 0) {\r\n          html += '<div class=\"' + CSS.notation + ' ' + CSS.numeric + '\">' +\r\n            row + '</div>';\r\n        }\r\n      }\r\n\r\n      html += '</div>'; // end .square\r\n\r\n      squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n    }\r\n    html += '<div class=\"' + CSS.clearfix + '\"></div></div>';\r\n\r\n    squareColor = (squareColor === 'white' ? 'black' : 'white');\r\n\r\n    if (orientation === 'white') {\r\n      row--;\r\n    }\r\n    else {\r\n      row++;\r\n    }\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildPieceImgSrc(piece) {\r\n  if (typeof cfg.pieceTheme === 'function') {\r\n    return cfg.pieceTheme(piece);\r\n  }\r\n\r\n  if (typeof cfg.pieceTheme === 'string') {\r\n    return cfg.pieceTheme.replace(/{piece}/g, piece);\r\n  }\r\n\r\n  // NOTE: this should never happen\r\n  error(8272, 'Unable to build image source for cfg.pieceTheme.');\r\n  return '';\r\n}\r\n\r\nfunction buildPiece(piece, hidden, id) {\r\n  var html = '<img src=\"' + buildPieceImgSrc(piece) + '\" ';\r\n  if (id && typeof id === 'string') {\r\n    html += 'id=\"' + id + '\" ';\r\n  }\r\n  html += 'alt=\"\" ' +\r\n  'class=\"' + CSS.piece + '\" ' +\r\n  'data-piece=\"' + piece + '\" ' +\r\n  'style=\"width: ' + SQUARE_SIZE + 'px;' +\r\n  'height: ' + SQUARE_SIZE + 'px;';\r\n  if (hidden === true) {\r\n    html += 'display:none;';\r\n  }\r\n  html += '\" />';\r\n\r\n  return html;\r\n}\r\n\r\nfunction buildSparePieces(color) {\r\n  var pieces = ['wK', 'wQ', 'wR', 'wB', 'wN', 'wP'];\r\n  if (color === 'black') {\r\n    pieces = ['bK', 'bQ', 'bR', 'bB', 'bN', 'bP'];\r\n  }\r\n\r\n  var html = '';\r\n  for (var i = 0; i < pieces.length; i++) {\r\n    html += buildPiece(pieces[i], false, SPARE_PIECE_ELS_IDS[pieces[i]]);\r\n  }\r\n\r\n  return html;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Animations\r\n//------------------------------------------------------------------------------\r\n\r\nfunction animateSquareToSquare(src, dest, piece, completeFn) {\r\n  // get information about the source and destination squares\r\n  var srcSquareEl = $('#' + SQUARE_ELS_IDS[src]);\r\n  var srcSquarePosition = srcSquareEl.offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destSquarePosition = destSquareEl.offset();\r\n\r\n  // create the animated piece and absolutely position it\r\n  // over the source square\r\n  var animatedPieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, animatedPieceId));\r\n  var animatedPieceEl = $('#' + animatedPieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    top: srcSquarePosition.top,\r\n    left: srcSquarePosition.left\r\n  });\r\n\r\n  // remove original piece from source square\r\n  srcSquareEl.find('.' + CSS.piece).remove();\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destSquarePosition, opts);\r\n}\r\n\r\nfunction animateSparePieceToSquare(piece, dest, completeFn) {\r\n  var srcOffset = $('#' + SPARE_PIECE_ELS_IDS[piece]).offset();\r\n  var destSquareEl = $('#' + SQUARE_ELS_IDS[dest]);\r\n  var destOffset = destSquareEl.offset();\r\n\r\n  // create the animate piece\r\n  var pieceId = uuid();\r\n  $('body').append(buildPiece(piece, true, pieceId));\r\n  var animatedPieceEl = $('#' + pieceId);\r\n  animatedPieceEl.css({\r\n    display: '',\r\n    position: 'absolute',\r\n    left: srcOffset.left,\r\n    top: srcOffset.top\r\n  });\r\n\r\n  // on complete\r\n  var complete = function() {\r\n    // add the \"real\" piece to the destination square\r\n    destSquareEl.find('.' + CSS.piece).remove();\r\n    destSquareEl.append(buildPiece(piece));\r\n\r\n    // remove the animated piece\r\n    animatedPieceEl.remove();\r\n\r\n    // run complete function\r\n    if (typeof completeFn === 'function') {\r\n      completeFn();\r\n    }\r\n  };\r\n\r\n  // animate the piece to the destination square\r\n  var opts = {\r\n    duration: cfg.moveSpeed,\r\n    complete: complete\r\n  };\r\n  animatedPieceEl.animate(destOffset, opts);\r\n}\r\n\r\n// execute an array of animations\r\nfunction doAnimations(a, oldPos, newPos) {\r\n  if (a.length === 0) {\r\n    return;\r\n  }\r\n\r\n  ANIMATION_HAPPENING = true;\r\n\r\n  var numFinished = 0;\r\n  function onFinish() {\r\n    numFinished++;\r\n\r\n    // exit if all the animations aren't finished\r\n    if (numFinished !== a.length) return;\r\n\r\n    drawPositionInstant();\r\n    ANIMATION_HAPPENING = false;\r\n\r\n    // run their onMoveEnd function\r\n    if (cfg.hasOwnProperty('onMoveEnd') === true &&\r\n      typeof cfg.onMoveEnd === 'function') {\r\n      cfg.onMoveEnd(deepCopy(oldPos), deepCopy(newPos));\r\n    }\r\n  }\r\n\r\n  for (var i = 0; i < a.length; i++) {\r\n    // clear a piece\r\n    if (a[i].type === 'clear') {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square] + ' .' + CSS.piece)\r\n        .fadeOut(cfg.trashSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece (no spare pieces)\r\n    if (a[i].type === 'add' && cfg.sparePieces !== true) {\r\n      $('#' + SQUARE_ELS_IDS[a[i].square])\r\n        .append(buildPiece(a[i].piece, true))\r\n        .find('.' + CSS.piece)\r\n        .fadeIn(cfg.appearSpeed, onFinish);\r\n    }\r\n\r\n    // add a piece from a spare piece\r\n    if (a[i].type === 'add' && cfg.sparePieces === true) {\r\n      animateSparePieceToSquare(a[i].piece, a[i].square, onFinish);\r\n    }\r\n\r\n    // move a piece\r\n    if (a[i].type === 'move') {\r\n      animateSquareToSquare(a[i].source, a[i].destination, a[i].piece,\r\n        onFinish);\r\n    }\r\n  }\r\n}\r\n\r\n// returns the distance between two squares\r\nfunction squareDistance(s1, s2) {\r\n  s1 = s1.split('');\r\n  var s1x = COLUMNS.indexOf(s1[0]) + 1;\r\n  var s1y = parseInt(s1[1], 10);\r\n\r\n  s2 = s2.split('');\r\n  var s2x = COLUMNS.indexOf(s2[0]) + 1;\r\n  var s2y = parseInt(s2[1], 10);\r\n\r\n  var xDelta = Math.abs(s1x - s2x);\r\n  var yDelta = Math.abs(s1y - s2y);\r\n\r\n  if (xDelta >= yDelta) return xDelta;\r\n  return yDelta;\r\n}\r\n\r\n// returns an array of closest squares from square\r\nfunction createRadius(square) {\r\n  var squares = [];\r\n\r\n  // calculate distance of all squares\r\n  for (var i = 0; i < 8; i++) {\r\n    for (var j = 0; j < 8; j++) {\r\n      var s = COLUMNS[i] + (j + 1);\r\n\r\n      // skip the square we're starting from\r\n      if (square === s) continue;\r\n\r\n      squares.push({\r\n        square: s,\r\n        distance: squareDistance(square, s)\r\n      });\r\n    }\r\n  }\r\n\r\n  // sort by distance\r\n  squares.sort(function(a, b) {\r\n    return a.distance - b.distance;\r\n  });\r\n\r\n  // just return the square code\r\n  var squares2 = [];\r\n  for (var i = 0; i < squares.length; i++) {\r\n    squares2.push(squares[i].square);\r\n  }\r\n\r\n  return squares2;\r\n}\r\n\r\n// returns the square of the closest instance of piece\r\n// returns false if no instance of piece is found in position\r\nfunction findClosestPiece(position, piece, square) {\r\n  // create array of closest squares from square\r\n  var closestSquares = createRadius(square);\r\n\r\n  // search through the position in order of distance for the piece\r\n  for (var i = 0; i < closestSquares.length; i++) {\r\n    var s = closestSquares[i];\r\n\r\n    if (position.hasOwnProperty(s) === true && position[s] === piece) {\r\n      return s;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\n// calculate an array of animations that need to happen in order to get\r\n// from pos1 to pos2\r\nfunction calculateAnimations(pos1, pos2) {\r\n  // make copies of both\r\n  pos1 = deepCopy(pos1);\r\n  pos2 = deepCopy(pos2);\r\n\r\n  var animations = [];\r\n  var squaresMovedTo = {};\r\n\r\n  // remove pieces that are the same in both positions\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    if (pos1.hasOwnProperty(i) === true && pos1[i] === pos2[i]) {\r\n      delete pos1[i];\r\n      delete pos2[i];\r\n    }\r\n  }\r\n\r\n  // find all the \"move\" animations\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    var closestPiece = findClosestPiece(pos1, pos2[i], i);\r\n    if (closestPiece !== false) {\r\n      animations.push({\r\n        type: 'move',\r\n        source: closestPiece,\r\n        destination: i,\r\n        piece: pos2[i]\r\n      });\r\n\r\n      delete pos1[closestPiece];\r\n      delete pos2[i];\r\n      squaresMovedTo[i] = true;\r\n    }\r\n  }\r\n\r\n  // add pieces to pos2\r\n  for (var i in pos2) {\r\n    if (pos2.hasOwnProperty(i) !== true) continue;\r\n\r\n    animations.push({\r\n      type: 'add',\r\n      square: i,\r\n      piece: pos2[i]\r\n    })\r\n\r\n    delete pos2[i];\r\n  }\r\n\r\n  // clear pieces from pos1\r\n  for (var i in pos1) {\r\n    if (pos1.hasOwnProperty(i) !== true) continue;\r\n\r\n    // do not clear a piece if it is on a square that is the result\r\n    // of a \"move\", ie: a piece capture\r\n    if (squaresMovedTo.hasOwnProperty(i) === true) continue;\r\n\r\n    animations.push({\r\n      type: 'clear',\r\n      square: i,\r\n      piece: pos1[i]\r\n    });\r\n\r\n    delete pos1[i];\r\n  }\r\n\r\n  return animations;\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Control Flow\r\n//------------------------------------------------------------------------------\r\n\r\nfunction drawPositionInstant() {\r\n  // clear the board\r\n  boardEl.find('.' + CSS.piece).remove();\r\n\r\n  // add the pieces\r\n  for (var i in CURRENT_POSITION) {\r\n    if (CURRENT_POSITION.hasOwnProperty(i) !== true) continue;\r\n\r\n    $('#' + SQUARE_ELS_IDS[i]).append(buildPiece(CURRENT_POSITION[i]));\r\n  }\r\n}\r\n\r\nfunction drawBoard() {\r\n  boardEl.html(buildBoard(CURRENT_ORIENTATION));\r\n  drawPositionInstant();\r\n\r\n  if (cfg.sparePieces === true) {\r\n    if (CURRENT_ORIENTATION === 'white') {\r\n      sparePiecesTopEl.html(buildSparePieces('black'));\r\n      sparePiecesBottomEl.html(buildSparePieces('white'));\r\n    }\r\n    else {\r\n      sparePiecesTopEl.html(buildSparePieces('white'));\r\n      sparePiecesBottomEl.html(buildSparePieces('black'));\r\n    }\r\n  }\r\n}\r\n\r\n// given a position and a set of moves, return a new position\r\n// with the moves executed\r\nfunction calculatePositionFromMoves(position, moves) {\r\n  position = deepCopy(position);\r\n\r\n  for (var i in moves) {\r\n    if (moves.hasOwnProperty(i) !== true) continue;\r\n\r\n    // skip the move if the position doesn't have a piece on the source square\r\n    if (position.hasOwnProperty(i) !== true) continue;\r\n\r\n    var piece = position[i];\r\n    delete position[i];\r\n    position[moves[i]] = piece;\r\n  }\r\n\r\n  return position;\r\n}\r\n\r\nfunction setCurrentPosition(position) {\r\n  var oldPos = deepCopy(CURRENT_POSITION);\r\n  var newPos = deepCopy(position);\r\n  var oldFen = objToFen(oldPos);\r\n  var newFen = objToFen(newPos);\r\n\r\n  // do nothing if no change in position\r\n  if (oldFen === newFen) return;\r\n\r\n  // run their onChange function\r\n  if (cfg.hasOwnProperty('onChange') === true &&\r\n    typeof cfg.onChange === 'function') {\r\n    cfg.onChange(oldPos, newPos);\r\n  }\r\n\r\n  // update state\r\n  CURRENT_POSITION = position;\r\n}\r\n\r\nfunction isXYOnSquare(x, y) {\r\n  for (var i in SQUARE_ELS_OFFSETS) {\r\n    if (SQUARE_ELS_OFFSETS.hasOwnProperty(i) !== true) continue;\r\n\r\n    var s = SQUARE_ELS_OFFSETS[i];\r\n    if (x >= s.left && x < s.left + SQUARE_SIZE &&\r\n        y >= s.top && y < s.top + SQUARE_SIZE) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return 'offboard';\r\n}\r\n\r\n// records the XY coords of every square into memory\r\nfunction captureSquareOffsets() {\r\n  SQUARE_ELS_OFFSETS = {};\r\n\r\n  for (var i in SQUARE_ELS_IDS) {\r\n    if (SQUARE_ELS_IDS.hasOwnProperty(i) !== true) continue;\r\n\r\n    SQUARE_ELS_OFFSETS[i] = $('#' + SQUARE_ELS_IDS[i]).offset();\r\n  }\r\n}\r\n\r\nfunction removeSquareHighlights() {\r\n  boardEl.find('.' + CSS.square)\r\n    .removeClass(CSS.highlight1 + ' ' + CSS.highlight2);\r\n}\r\n\r\nfunction snapbackDraggedPiece() {\r\n  // there is no \"snapback\" for spare pieces\r\n  if (DRAGGED_PIECE_SOURCE === 'spare') {\r\n    trashDraggedPiece();\r\n    return;\r\n  }\r\n\r\n  removeSquareHighlights();\r\n\r\n  // animation complete\r\n  function complete() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // run their onSnapbackEnd function\r\n    if (cfg.hasOwnProperty('onSnapbackEnd') === true &&\r\n      typeof cfg.onSnapbackEnd === 'function') {\r\n      cfg.onSnapbackEnd(DRAGGED_PIECE, DRAGGED_PIECE_SOURCE,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n    }\r\n  }\r\n\r\n  // get source square position\r\n  var sourceSquarePosition =\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_SOURCE]).offset();\r\n\r\n  // animate the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapbackSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(sourceSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction trashDraggedPiece() {\r\n  removeSquareHighlights();\r\n\r\n  // remove the source piece\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  setCurrentPosition(newPosition);\r\n\r\n  // redraw the position\r\n  drawPositionInstant();\r\n\r\n  // hide the dragged piece\r\n  draggedPieceEl.fadeOut(cfg.trashSpeed);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction dropDraggedPieceOnSquare(square) {\r\n  removeSquareHighlights();\r\n\r\n  // update position\r\n  var newPosition = deepCopy(CURRENT_POSITION);\r\n  delete newPosition[DRAGGED_PIECE_SOURCE];\r\n  newPosition[square] = DRAGGED_PIECE;\r\n  setCurrentPosition(newPosition);\r\n\r\n  // get target square information\r\n  var targetSquarePosition = $('#' + SQUARE_ELS_IDS[square]).offset();\r\n\r\n  // animation complete\r\n  var complete = function() {\r\n    drawPositionInstant();\r\n    draggedPieceEl.css('display', 'none');\r\n\r\n    // execute their onSnapEnd function\r\n    if (cfg.hasOwnProperty('onSnapEnd') === true &&\r\n      typeof cfg.onSnapEnd === 'function') {\r\n      cfg.onSnapEnd(DRAGGED_PIECE_SOURCE, square, DRAGGED_PIECE);\r\n    }\r\n  };\r\n\r\n  // snap the piece to the target square\r\n  var opts = {\r\n    duration: cfg.snapSpeed,\r\n    complete: complete\r\n  };\r\n  draggedPieceEl.animate(targetSquarePosition, opts);\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = false;\r\n}\r\n\r\nfunction beginDraggingPiece(source, piece, x, y) {\r\n  // run their custom onDragStart function\r\n  // their custom onDragStart function can cancel drag start\r\n  if (typeof cfg.onDragStart === 'function' &&\r\n      cfg.onDragStart(source, piece,\r\n        deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION) === false) {\r\n    return;\r\n  }\r\n\r\n  // set state\r\n  DRAGGING_A_PIECE = true;\r\n  DRAGGED_PIECE = piece;\r\n  DRAGGED_PIECE_SOURCE = source;\r\n\r\n  // if the piece came from spare pieces, location is offboard\r\n  if (source === 'spare') {\r\n    DRAGGED_PIECE_LOCATION = 'offboard';\r\n  }\r\n  else {\r\n    DRAGGED_PIECE_LOCATION = source;\r\n  }\r\n\r\n  // capture the x, y coords of all squares in memory\r\n  captureSquareOffsets();\r\n\r\n  // create the dragged piece\r\n  draggedPieceEl.attr('src', buildPieceImgSrc(piece))\r\n    .css({\r\n      display: '',\r\n      position: 'absolute',\r\n      left: x - (SQUARE_SIZE / 2),\r\n      top: y - (SQUARE_SIZE / 2)\r\n    });\r\n\r\n  if (source !== 'spare') {\r\n    // highlight the source square and hide the piece\r\n    $('#' + SQUARE_ELS_IDS[source]).addClass(CSS.highlight1)\r\n      .find('.' + CSS.piece).css('display', 'none');\r\n  }\r\n}\r\n\r\nfunction updateDraggedPiece(x, y) {\r\n  // put the dragged piece over the mouse cursor\r\n  draggedPieceEl.css({\r\n    left: x - (SQUARE_SIZE / 2),\r\n    top: y - (SQUARE_SIZE / 2)\r\n  });\r\n\r\n  // get location\r\n  var location = isXYOnSquare(x, y);\r\n\r\n  // do nothing if the location has not changed\r\n  if (location === DRAGGED_PIECE_LOCATION) return;\r\n\r\n  // remove highlight from previous square\r\n  if (validSquare(DRAGGED_PIECE_LOCATION) === true) {\r\n    $('#' + SQUARE_ELS_IDS[DRAGGED_PIECE_LOCATION])\r\n      .removeClass(CSS.highlight2);\r\n  }\r\n\r\n  // add highlight to new square\r\n  if (validSquare(location) === true) {\r\n    $('#' + SQUARE_ELS_IDS[location]).addClass(CSS.highlight2);\r\n  }\r\n\r\n  // run onDragMove\r\n  if (typeof cfg.onDragMove === 'function') {\r\n    cfg.onDragMove(location, DRAGGED_PIECE_LOCATION,\r\n      DRAGGED_PIECE_SOURCE, DRAGGED_PIECE,\r\n      deepCopy(CURRENT_POSITION), CURRENT_ORIENTATION);\r\n  }\r\n\r\n  // update state\r\n  DRAGGED_PIECE_LOCATION = location;\r\n}\r\n\r\nfunction stopDraggedPiece(location) {\r\n  // determine what the action should be\r\n  var action = 'drop';\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'snapback') {\r\n    action = 'snapback';\r\n  }\r\n  if (location === 'offboard' && cfg.dropOffBoard === 'trash') {\r\n    action = 'trash';\r\n  }\r\n\r\n  // run their onDrop function, which can potentially change the drop action\r\n  if (cfg.hasOwnProperty('onDrop') === true &&\r\n    typeof cfg.onDrop === 'function') {\r\n    var newPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    // source piece is a spare piece and position is off the board\r\n    //if (DRAGGED_PIECE_SOURCE === 'spare' && location === 'offboard') {...}\r\n    // position has not changed; do nothing\r\n\r\n    // source piece is a spare piece and position is on the board\r\n    if (DRAGGED_PIECE_SOURCE === 'spare' && validSquare(location) === true) {\r\n      // add the piece to the board\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    // source piece was on the board and position is off the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true && location === 'offboard') {\r\n      // remove the piece from the board\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n    }\r\n\r\n    // source piece was on the board and position is on the board\r\n    if (validSquare(DRAGGED_PIECE_SOURCE) === true &&\r\n      validSquare(location) === true) {\r\n      // move the piece\r\n      delete newPosition[DRAGGED_PIECE_SOURCE];\r\n      newPosition[location] = DRAGGED_PIECE;\r\n    }\r\n\r\n    var oldPosition = deepCopy(CURRENT_POSITION);\r\n\r\n    var result = cfg.onDrop(DRAGGED_PIECE_SOURCE, location, DRAGGED_PIECE,\r\n      newPosition, oldPosition, CURRENT_ORIENTATION);\r\n    if (result === 'snapback' || result === 'trash') {\r\n      action = result;\r\n    }\r\n  }\r\n\r\n  // do it!\r\n  if (action === 'snapback') {\r\n    snapbackDraggedPiece();\r\n  }\r\n  else if (action === 'trash') {\r\n    trashDraggedPiece();\r\n  }\r\n  else if (action === 'drop') {\r\n    dropDraggedPieceOnSquare(location);\r\n  }\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Public Methods\r\n//------------------------------------------------------------------------------\r\n\r\n// clear the board\r\nwidget.clear = function(useAnimation) {\r\n  widget.position({}, useAnimation);\r\n};\r\n\r\n// remove the widget from the page\r\nwidget.destroy = function() {\r\n  // remove markup\r\n  containerEl.html('');\r\n  draggedPieceEl.remove();\r\n\r\n  // remove event handlers\r\n  containerEl.unbind();\r\n};\r\n\r\n// shorthand method to get the current FEN\r\nwidget.fen = function() {\r\n  return widget.position('fen');\r\n};\r\n\r\n// flip orientation\r\nwidget.flip = function() {\r\n  return widget.orientation('flip');\r\n};\r\n\r\n/*\r\n// TODO: write this, GitHub Issue #5\r\nwidget.highlight = function() {\r\n\r\n};\r\n*/\r\n\r\n// move pieces\r\nwidget.move = function() {\r\n  // no need to throw an error here; just do nothing\r\n  if (arguments.length === 0) return;\r\n\r\n  var useAnimation = true;\r\n\r\n  // collect the moves into an object\r\n  var moves = {};\r\n  for (var i = 0; i < arguments.length; i++) {\r\n    // any \"false\" to this function means no animations\r\n    if (arguments[i] === false) {\r\n      useAnimation = false;\r\n      continue;\r\n    }\r\n\r\n    // skip invalid arguments\r\n    if (validMove(arguments[i]) !== true) {\r\n      error(2826, 'Invalid move passed to the move method.', arguments[i]);\r\n      continue;\r\n    }\r\n\r\n    var tmp = arguments[i].split('-');\r\n    moves[tmp[0]] = tmp[1];\r\n  }\r\n\r\n  // calculate position from moves\r\n  var newPos = calculatePositionFromMoves(CURRENT_POSITION, moves);\r\n\r\n  // update the board\r\n  widget.position(newPos, useAnimation);\r\n\r\n  // return the new position object\r\n  return newPos;\r\n};\r\n\r\nwidget.orientation = function(arg) {\r\n  // no arguments, return the current orientation\r\n  if (arguments.length === 0) {\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // set to white or black\r\n  if (arg === 'white' || arg === 'black') {\r\n    CURRENT_ORIENTATION = arg;\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  // flip orientation\r\n  if (arg === 'flip') {\r\n    CURRENT_ORIENTATION = (CURRENT_ORIENTATION === 'white') ? 'black' : 'white';\r\n    drawBoard();\r\n    return CURRENT_ORIENTATION;\r\n  }\r\n\r\n  error(5482, 'Invalid value passed to the orientation method.', arg);\r\n};\r\n\r\nwidget.position = function(position, useAnimation) {\r\n  // no arguments, return the current position\r\n  if (arguments.length === 0) {\r\n    return deepCopy(CURRENT_POSITION);\r\n  }\r\n\r\n  // get position as FEN\r\n  if (typeof position === 'string' && position.toLowerCase() === 'fen') {\r\n    return objToFen(CURRENT_POSITION);\r\n  }\r\n\r\n  // default for useAnimations is true\r\n  if (useAnimation !== false) {\r\n    useAnimation = true;\r\n  }\r\n\r\n  // start position\r\n  if (typeof position === 'string' && position.toLowerCase() === 'start') {\r\n    position = deepCopy(START_POSITION);\r\n  }\r\n\r\n  // convert FEN to position object\r\n  if (validFen(position) === true) {\r\n    position = fenToObj(position);\r\n  }\r\n\r\n  // validate position object\r\n  if (validPositionObject(position) !== true) {\r\n    error(6482, 'Invalid value passed to the position method.', position);\r\n    return;\r\n  }\r\n\r\n  if (useAnimation === true) {\r\n    // start the animations\r\n    doAnimations(calculateAnimations(CURRENT_POSITION, position),\r\n      CURRENT_POSITION, position);\r\n\r\n    // set the new position\r\n    setCurrentPosition(position);\r\n  }\r\n  // instant update\r\n  else {\r\n    setCurrentPosition(position);\r\n    drawPositionInstant();\r\n  }\r\n};\r\n\r\nwidget.resize = function() {\r\n  // calulate the new square size\r\n  SQUARE_SIZE = calculateSquareSize();\r\n\r\n  // set board width\r\n  boardEl.css('width', (SQUARE_SIZE * 8) + 'px');\r\n\r\n  // set drag piece size\r\n  draggedPieceEl.css({\r\n    height: SQUARE_SIZE,\r\n    width: SQUARE_SIZE\r\n  });\r\n\r\n  // spare pieces\r\n  if (cfg.sparePieces === true) {\r\n    containerEl.find('.' + CSS.sparePieces)\r\n      .css('paddingLeft', (SQUARE_SIZE + BOARD_BORDER_SIZE) + 'px');\r\n  }\r\n\r\n  // redraw the board\r\n  drawBoard();\r\n};\r\n\r\n// set the starting position\r\nwidget.start = function(useAnimation) {\r\n  widget.position('start', useAnimation);\r\n};\r\n\r\n//------------------------------------------------------------------------------\r\n// Browser Events\r\n//------------------------------------------------------------------------------\r\n\r\nfunction isTouchDevice() {\r\n  return ('ontouchstart' in document.documentElement);\r\n}\r\n\r\n// reference: http://www.quirksmode.org/js/detect.html\r\nfunction isMSIE() {\r\n  return (navigator && navigator.userAgent &&\r\n      navigator.userAgent.search(/MSIE/) !== -1);\r\n}\r\n\r\nfunction stopDefault(e) {\r\n  e.preventDefault();\r\n}\r\n\r\nfunction mousedownSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  beginDraggingPiece(square, CURRENT_POSITION[square], e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSquare(e) {\r\n  // do nothing if we're not draggable\r\n  if (cfg.draggable !== true) return;\r\n\r\n  var square = $(this).attr('data-square');\r\n\r\n  // no piece on this square\r\n  if (validSquare(square) !== true ||\r\n      CURRENT_POSITION.hasOwnProperty(square) !== true) {\r\n    return;\r\n  }\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece(square, CURRENT_POSITION[square],\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousedownSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  beginDraggingPiece('spare', piece, e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchstartSparePiece(e) {\r\n  // do nothing if sparePieces is not enabled\r\n  if (cfg.sparePieces !== true) return;\r\n\r\n  var piece = $(this).attr('data-piece');\r\n\r\n  e = e.originalEvent;\r\n  beginDraggingPiece('spare', piece,\r\n    e.changedTouches[0].pageX, e.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mousemoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  updateDraggedPiece(e.pageX, e.pageY);\r\n}\r\n\r\nfunction touchmoveWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // prevent screen from scrolling\r\n  e.preventDefault();\r\n\r\n  updateDraggedPiece(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n}\r\n\r\nfunction mouseupWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.pageX, e.pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction touchendWindow(e) {\r\n  // do nothing if we are not dragging a piece\r\n  if (DRAGGING_A_PIECE !== true) return;\r\n\r\n  // get the location\r\n  var location = isXYOnSquare(e.originalEvent.changedTouches[0].pageX,\r\n    e.originalEvent.changedTouches[0].pageY);\r\n\r\n  stopDraggedPiece(location);\r\n}\r\n\r\nfunction mouseenterSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoverSquare') !== true ||\r\n    typeof cfg.onMouseoverSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoverSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\nfunction mouseleaveSquare(e) {\r\n  // do not fire this event if we are dragging a piece\r\n  // NOTE: this should never happen, but it's a safeguard\r\n  if (DRAGGING_A_PIECE !== false) return;\r\n\r\n  if (cfg.hasOwnProperty('onMouseoutSquare') !== true ||\r\n    typeof cfg.onMouseoutSquare !== 'function') return;\r\n\r\n  // get the square\r\n  var square = $(e.currentTarget).attr('data-square');\r\n\r\n  // NOTE: this should never happen; defensive\r\n  if (validSquare(square) !== true) return;\r\n\r\n  // get the piece on this square\r\n  var piece = false;\r\n  if (CURRENT_POSITION.hasOwnProperty(square) === true) {\r\n    piece = CURRENT_POSITION[square];\r\n  }\r\n\r\n  // execute their function\r\n  cfg.onMouseoutSquare(square, piece, deepCopy(CURRENT_POSITION),\r\n    CURRENT_ORIENTATION);\r\n}\r\n\r\n//------------------------------------------------------------------------------\r\n// Initialization\r\n//------------------------------------------------------------------------------\r\n\r\nfunction addEvents() {\r\n  // prevent browser \"image drag\"\r\n  $('body').on('mousedown mousemove', '.' + CSS.piece, stopDefault);\r\n\r\n  // mouse drag pieces\r\n  boardEl.on('mousedown', '.' + CSS.square, mousedownSquare);\r\n  containerEl.on('mousedown', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n    mousedownSparePiece);\r\n\r\n  // mouse enter / leave square\r\n  boardEl.on('mouseenter', '.' + CSS.square, mouseenterSquare)\r\n    .on('mouseleave', '.' + CSS.square, mouseleaveSquare);\r\n\r\n  // IE doesn't like the events on the window object, but other browsers\r\n  // perform better that way\r\n  if (isMSIE() === true) {\r\n    // IE-specific prevent browser \"image drag\"\r\n    document.ondragstart = function() { return false; };\r\n\r\n    $('body').on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n  else {\r\n    $(window).on('mousemove', mousemoveWindow)\r\n      .on('mouseup', mouseupWindow);\r\n  }\r\n\r\n  // touch drag pieces\r\n  if (isTouchDevice() === true) {\r\n    boardEl.on('touchstart', '.' + CSS.square, touchstartSquare);\r\n    containerEl.on('touchstart', '.' + CSS.sparePieces + ' .' + CSS.piece,\r\n      touchstartSparePiece);\r\n    $(window).on('touchmove', touchmoveWindow)\r\n      .on('touchend', touchendWindow);\r\n  }\r\n}\r\n\r\nfunction initDom() {\r\n  // create unique IDs for all the elements we will create\r\n  createElIds();\r\n\r\n  // build board and save it in memory\r\n  containerEl.html(buildBoardContainer());\r\n  boardEl = containerEl.find('.' + CSS.board);\r\n\r\n  if (cfg.sparePieces === true) {\r\n    sparePiecesTopEl = containerEl.find('.' + CSS.sparePiecesTop);\r\n    sparePiecesBottomEl = containerEl.find('.' + CSS.sparePiecesBottom);\r\n  }\r\n\r\n  // create the drag piece\r\n  var draggedPieceId = uuid();\r\n  $('body').append(buildPiece('wP', true, draggedPieceId));\r\n  draggedPieceEl = $('#' + draggedPieceId);\r\n\r\n  // get the border size\r\n  BOARD_BORDER_SIZE = parseInt(boardEl.css('borderLeftWidth'), 10);\r\n\r\n  // set the size and draw the board\r\n  widget.resize();\r\n}\r\n\r\nfunction init() {\r\n  if (checkDeps() !== true ||\r\n      expandConfig() !== true) return;\r\n\r\n  initDom();\r\n  addEvents();\r\n}\r\n\r\n// go time\r\ninit();\r\n\r\n// return the widget object\r\nreturn widget;\r\n\r\n}; // end window.ChessBoard\r\n\r\n// expose util functions\r\nChessBoard.fenToObj = fenToObj;\r\nChessBoard.objToFen = objToFen;\r\n\r\nmodule.exports = ChessBoard;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chessboardjs/www/js/chessboard.js\n// module id = 1\n// module chunks = 1","/*\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice,\n *    this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\n * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n * POSSIBILITY OF SUCH DAMAGE.\n *\n *----------------------------------------------------------------------------*/\n\n/* minified license below  */\n\n/* @license\n * Copyright (c) 2016, Jeff Hlywa (jhlywa@gmail.com)\n * Released under the BSD license\n * https://github.com/jhlywa/chess.js/blob/master/LICENSE\n */\n\nvar Chess = function(fen) {\n\n  /* jshint indent: false */\n\n  var BLACK = 'b';\n  var WHITE = 'w';\n\n  var EMPTY = -1;\n\n  var PAWN = 'p';\n  var KNIGHT = 'n';\n  var BISHOP = 'b';\n  var ROOK = 'r';\n  var QUEEN = 'q';\n  var KING = 'k';\n\n  var SYMBOLS = 'pnbrqkPNBRQK';\n\n  var DEFAULT_POSITION = 'rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1';\n\n  var POSSIBLE_RESULTS = ['1-0', '0-1', '1/2-1/2', '*'];\n\n  var PAWN_OFFSETS = {\n    b: [16, 32, 17, 15],\n    w: [-16, -32, -17, -15]\n  };\n\n  var PIECE_OFFSETS = {\n    n: [-18, -33, -31, -14,  18, 33, 31,  14],\n    b: [-17, -15,  17,  15],\n    r: [-16,   1,  16,  -1],\n    q: [-17, -16, -15,   1,  17, 16, 15,  -1],\n    k: [-17, -16, -15,   1,  17, 16, 15,  -1]\n  };\n\n  var ATTACKS = [\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n    24,24,24,24,24,24,56,  0, 56,24,24,24,24,24,24, 0,\n     0, 0, 0, 0, 0, 2,53, 56, 53, 2, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0, 0,20, 2, 24,  2,20, 0, 0, 0, 0, 0, 0,\n     0, 0, 0, 0,20, 0, 0, 24,  0, 0,20, 0, 0, 0, 0, 0,\n     0, 0, 0,20, 0, 0, 0, 24,  0, 0, 0,20, 0, 0, 0, 0,\n     0, 0,20, 0, 0, 0, 0, 24,  0, 0, 0, 0,20, 0, 0, 0,\n     0,20, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0,20, 0, 0,\n    20, 0, 0, 0, 0, 0, 0, 24,  0, 0, 0, 0, 0, 0,20\n  ];\n\n  var RAYS = [\n     17,  0,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0,  0, 15, 0,\n      0, 17,  0,  0,  0,  0,  0, 16,  0,  0,  0,  0,  0, 15,  0, 0,\n      0,  0, 17,  0,  0,  0,  0, 16,  0,  0,  0,  0, 15,  0,  0, 0,\n      0,  0,  0, 17,  0,  0,  0, 16,  0,  0,  0, 15,  0,  0,  0, 0,\n      0,  0,  0,  0, 17,  0,  0, 16,  0,  0, 15,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0, 17,  0, 16,  0, 15,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,  0, 17, 16, 15,  0,  0,  0,  0,  0,  0, 0,\n      1,  1,  1,  1,  1,  1,  1,  0, -1, -1,  -1,-1, -1, -1, -1, 0,\n      0,  0,  0,  0,  0,  0,-15,-16,-17,  0,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,  0,-15,  0,-16,  0,-17,  0,  0,  0,  0,  0, 0,\n      0,  0,  0,  0,-15,  0,  0,-16,  0,  0,-17,  0,  0,  0,  0, 0,\n      0,  0,  0,-15,  0,  0,  0,-16,  0,  0,  0,-17,  0,  0,  0, 0,\n      0,  0,-15,  0,  0,  0,  0,-16,  0,  0,  0,  0,-17,  0,  0, 0,\n      0,-15,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,-17,  0, 0,\n    -15,  0,  0,  0,  0,  0,  0,-16,  0,  0,  0,  0,  0,  0,-17\n  ];\n\n  var SHIFTS = { p: 0, n: 1, b: 2, r: 3, q: 4, k: 5 };\n\n  var FLAGS = {\n    NORMAL: 'n',\n    CAPTURE: 'c',\n    BIG_PAWN: 'b',\n    EP_CAPTURE: 'e',\n    PROMOTION: 'p',\n    KSIDE_CASTLE: 'k',\n    QSIDE_CASTLE: 'q'\n  };\n\n  var BITS = {\n    NORMAL: 1,\n    CAPTURE: 2,\n    BIG_PAWN: 4,\n    EP_CAPTURE: 8,\n    PROMOTION: 16,\n    KSIDE_CASTLE: 32,\n    QSIDE_CASTLE: 64\n  };\n\n  var RANK_1 = 7;\n  var RANK_2 = 6;\n  var RANK_3 = 5;\n  var RANK_4 = 4;\n  var RANK_5 = 3;\n  var RANK_6 = 2;\n  var RANK_7 = 1;\n  var RANK_8 = 0;\n\n  var SQUARES = {\n    a8:   0, b8:   1, c8:   2, d8:   3, e8:   4, f8:   5, g8:   6, h8:   7,\n    a7:  16, b7:  17, c7:  18, d7:  19, e7:  20, f7:  21, g7:  22, h7:  23,\n    a6:  32, b6:  33, c6:  34, d6:  35, e6:  36, f6:  37, g6:  38, h6:  39,\n    a5:  48, b5:  49, c5:  50, d5:  51, e5:  52, f5:  53, g5:  54, h5:  55,\n    a4:  64, b4:  65, c4:  66, d4:  67, e4:  68, f4:  69, g4:  70, h4:  71,\n    a3:  80, b3:  81, c3:  82, d3:  83, e3:  84, f3:  85, g3:  86, h3:  87,\n    a2:  96, b2:  97, c2:  98, d2:  99, e2: 100, f2: 101, g2: 102, h2: 103,\n    a1: 112, b1: 113, c1: 114, d1: 115, e1: 116, f1: 117, g1: 118, h1: 119\n  };\n\n  var ROOKS = {\n    w: [{square: SQUARES.a1, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h1, flag: BITS.KSIDE_CASTLE}],\n    b: [{square: SQUARES.a8, flag: BITS.QSIDE_CASTLE},\n        {square: SQUARES.h8, flag: BITS.KSIDE_CASTLE}]\n  };\n\n  var board = new Array(128);\n  var kings = {w: EMPTY, b: EMPTY};\n  var turn = WHITE;\n  var castling = {w: 0, b: 0};\n  var ep_square = EMPTY;\n  var half_moves = 0;\n  var move_number = 1;\n  var history = [];\n  var header = {};\n\n  /* if the user passes in a fen string, load it, else default to\n   * starting position\n   */\n  if (typeof fen === 'undefined') {\n    load(DEFAULT_POSITION);\n  } else {\n    load(fen);\n  }\n\n  function clear() {\n    board = new Array(128);\n    kings = {w: EMPTY, b: EMPTY};\n    turn = WHITE;\n    castling = {w: 0, b: 0};\n    ep_square = EMPTY;\n    half_moves = 0;\n    move_number = 1;\n    history = [];\n    header = {};\n    update_setup(generate_fen());\n  }\n\n  function reset() {\n    load(DEFAULT_POSITION);\n  }\n\n  function load(fen) {\n    var tokens = fen.split(/\\s+/);\n    var position = tokens[0];\n    var square = 0;\n\n    if (!validate_fen(fen).valid) {\n      return false;\n    }\n\n    clear();\n\n    for (var i = 0; i < position.length; i++) {\n      var piece = position.charAt(i);\n\n      if (piece === '/') {\n        square += 8;\n      } else if (is_digit(piece)) {\n        square += parseInt(piece, 10);\n      } else {\n        var color = (piece < 'a') ? WHITE : BLACK;\n        put({type: piece.toLowerCase(), color: color}, algebraic(square));\n        square++;\n      }\n    }\n\n    turn = tokens[1];\n\n    if (tokens[2].indexOf('K') > -1) {\n      castling.w |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('Q') > -1) {\n      castling.w |= BITS.QSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('k') > -1) {\n      castling.b |= BITS.KSIDE_CASTLE;\n    }\n    if (tokens[2].indexOf('q') > -1) {\n      castling.b |= BITS.QSIDE_CASTLE;\n    }\n\n    ep_square = (tokens[3] === '-') ? EMPTY : SQUARES[tokens[3]];\n    half_moves = parseInt(tokens[4], 10);\n    move_number = parseInt(tokens[5], 10);\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  /* TODO: this function is pretty much crap - it validates structure but\n   * completely ignores content (e.g. doesn't verify that each side has a king)\n   * ... we should rewrite this, and ditch the silly error_number field while\n   * we're at it\n   */\n  function validate_fen(fen) {\n    var errors = {\n       0: 'No errors.',\n       1: 'FEN string must contain six space-delimited fields.',\n       2: '6th field (move number) must be a positive integer.',\n       3: '5th field (half move counter) must be a non-negative integer.',\n       4: '4th field (en-passant square) is invalid.',\n       5: '3rd field (castling availability) is invalid.',\n       6: '2nd field (side to move) is invalid.',\n       7: '1st field (piece positions) does not contain 8 \\'/\\'-delimited rows.',\n       8: '1st field (piece positions) is invalid [consecutive numbers].',\n       9: '1st field (piece positions) is invalid [invalid piece].',\n      10: '1st field (piece positions) is invalid [row too large].',\n      11: 'Illegal en-passant square',\n    };\n\n    /* 1st criterion: 6 space-seperated fields? */\n    var tokens = fen.split(/\\s+/);\n    if (tokens.length !== 6) {\n      return {valid: false, error_number: 1, error: errors[1]};\n    }\n\n    /* 2nd criterion: move number field is a integer value > 0? */\n    if (isNaN(tokens[5]) || (parseInt(tokens[5], 10) <= 0)) {\n      return {valid: false, error_number: 2, error: errors[2]};\n    }\n\n    /* 3rd criterion: half move counter is an integer >= 0? */\n    if (isNaN(tokens[4]) || (parseInt(tokens[4], 10) < 0)) {\n      return {valid: false, error_number: 3, error: errors[3]};\n    }\n\n    /* 4th criterion: 4th field is a valid e.p.-string? */\n    if (!/^(-|[abcdefgh][36])$/.test(tokens[3])) {\n      return {valid: false, error_number: 4, error: errors[4]};\n    }\n\n    /* 5th criterion: 3th field is a valid castle-string? */\n    if( !/^(KQ?k?q?|Qk?q?|kq?|q|-)$/.test(tokens[2])) {\n      return {valid: false, error_number: 5, error: errors[5]};\n    }\n\n    /* 6th criterion: 2nd field is \"w\" (white) or \"b\" (black)? */\n    if (!/^(w|b)$/.test(tokens[1])) {\n      return {valid: false, error_number: 6, error: errors[6]};\n    }\n\n    /* 7th criterion: 1st field contains 8 rows? */\n    var rows = tokens[0].split('/');\n    if (rows.length !== 8) {\n      return {valid: false, error_number: 7, error: errors[7]};\n    }\n\n    /* 8th criterion: every row is valid? */\n    for (var i = 0; i < rows.length; i++) {\n      /* check for right sum of fields AND not two numbers in succession */\n      var sum_fields = 0;\n      var previous_was_number = false;\n\n      for (var k = 0; k < rows[i].length; k++) {\n        if (!isNaN(rows[i][k])) {\n          if (previous_was_number) {\n            return {valid: false, error_number: 8, error: errors[8]};\n          }\n          sum_fields += parseInt(rows[i][k], 10);\n          previous_was_number = true;\n        } else {\n          if (!/^[prnbqkPRNBQK]$/.test(rows[i][k])) {\n            return {valid: false, error_number: 9, error: errors[9]};\n          }\n          sum_fields += 1;\n          previous_was_number = false;\n        }\n      }\n      if (sum_fields !== 8) {\n        return {valid: false, error_number: 10, error: errors[10]};\n      }\n    }\n\n    if ((tokens[3][1] == '3' && tokens[1] == 'w') ||\n        (tokens[3][1] == '6' && tokens[1] == 'b')) {\n          return {valid: false, error_number: 11, error: errors[11]};\n    }\n\n    /* everything's okay! */\n    return {valid: true, error_number: 0, error: errors[0]};\n  }\n\n  function generate_fen() {\n    var empty = 0;\n    var fen = '';\n\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      if (board[i] == null) {\n        empty++;\n      } else {\n        if (empty > 0) {\n          fen += empty;\n          empty = 0;\n        }\n        var color = board[i].color;\n        var piece = board[i].type;\n\n        fen += (color === WHITE) ?\n                 piece.toUpperCase() : piece.toLowerCase();\n      }\n\n      if ((i + 1) & 0x88) {\n        if (empty > 0) {\n          fen += empty;\n        }\n\n        if (i !== SQUARES.h1) {\n          fen += '/';\n        }\n\n        empty = 0;\n        i += 8;\n      }\n    }\n\n    var cflags = '';\n    if (castling[WHITE] & BITS.KSIDE_CASTLE) { cflags += 'K'; }\n    if (castling[WHITE] & BITS.QSIDE_CASTLE) { cflags += 'Q'; }\n    if (castling[BLACK] & BITS.KSIDE_CASTLE) { cflags += 'k'; }\n    if (castling[BLACK] & BITS.QSIDE_CASTLE) { cflags += 'q'; }\n\n    /* do we have an empty castling flag? */\n    cflags = cflags || '-';\n    var epflags = (ep_square === EMPTY) ? '-' : algebraic(ep_square);\n\n    return [fen, turn, cflags, epflags, half_moves, move_number].join(' ');\n  }\n\n  function set_header(args) {\n    for (var i = 0; i < args.length; i += 2) {\n      if (typeof args[i] === 'string' &&\n          typeof args[i + 1] === 'string') {\n        header[args[i]] = args[i + 1];\n      }\n    }\n    return header;\n  }\n\n  /* called when the initial board setup is changed with put() or remove().\n   * modifies the SetUp and FEN properties of the header object.  if the FEN is\n   * equal to the default position, the SetUp and FEN are deleted\n   * the setup is only updated if history.length is zero, ie moves haven't been\n   * made.\n   */\n  function update_setup(fen) {\n    if (history.length > 0) return;\n\n    if (fen !== DEFAULT_POSITION) {\n      header['SetUp'] = '1';\n      header['FEN'] = fen;\n    } else {\n      delete header['SetUp'];\n      delete header['FEN'];\n    }\n  }\n\n  function get(square) {\n    var piece = board[SQUARES[square]];\n    return (piece) ? {type: piece.type, color: piece.color} : null;\n  }\n\n  function put(piece, square) {\n    /* check for valid piece object */\n    if (!('type' in piece && 'color' in piece)) {\n      return false;\n    }\n\n    /* check for piece */\n    if (SYMBOLS.indexOf(piece.type.toLowerCase()) === -1) {\n      return false;\n    }\n\n    /* check for valid square */\n    if (!(square in SQUARES)) {\n      return false;\n    }\n\n    var sq = SQUARES[square];\n\n    /* don't let the user place more than one king */\n    if (piece.type == KING &&\n        !(kings[piece.color] == EMPTY || kings[piece.color] == sq)) {\n      return false;\n    }\n\n    board[sq] = {type: piece.type, color: piece.color};\n    if (piece.type === KING) {\n      kings[piece.color] = sq;\n    }\n\n    update_setup(generate_fen());\n\n    return true;\n  }\n\n  function remove(square) {\n    var piece = get(square);\n    board[SQUARES[square]] = null;\n    if (piece && piece.type === KING) {\n      kings[piece.color] = EMPTY;\n    }\n\n    update_setup(generate_fen());\n\n    return piece;\n  }\n\n  function build_move(board, from, to, flags, promotion) {\n    var move = {\n      color: turn,\n      from: from,\n      to: to,\n      flags: flags,\n      piece: board[from].type\n    };\n\n    if (promotion) {\n      move.flags |= BITS.PROMOTION;\n      move.promotion = promotion;\n    }\n\n    if (board[to]) {\n      move.captured = board[to].type;\n    } else if (flags & BITS.EP_CAPTURE) {\n        move.captured = PAWN;\n    }\n    return move;\n  }\n\n  function generate_moves(options) {\n    function add_move(board, moves, from, to, flags) {\n      /* if pawn promotion */\n      if (board[from].type === PAWN &&\n         (rank(to) === RANK_8 || rank(to) === RANK_1)) {\n          var pieces = [QUEEN, ROOK, BISHOP, KNIGHT];\n          for (var i = 0, len = pieces.length; i < len; i++) {\n            moves.push(build_move(board, from, to, flags, pieces[i]));\n          }\n      } else {\n       moves.push(build_move(board, from, to, flags));\n      }\n    }\n\n    var moves = [];\n    var us = turn;\n    var them = swap_color(us);\n    var second_rank = {b: RANK_7, w: RANK_2};\n\n    var first_sq = SQUARES.a8;\n    var last_sq = SQUARES.h1;\n    var single_square = false;\n\n    /* do we want legal moves? */\n    var legal = (typeof options !== 'undefined' && 'legal' in options) ?\n                options.legal : true;\n\n    /* are we generating moves for a single square? */\n    if (typeof options !== 'undefined' && 'square' in options) {\n      if (options.square in SQUARES) {\n        first_sq = last_sq = SQUARES[options.square];\n        single_square = true;\n      } else {\n        /* invalid square */\n        return [];\n      }\n    }\n\n    for (var i = first_sq; i <= last_sq; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece == null || piece.color !== us) {\n        continue;\n      }\n\n      if (piece.type === PAWN) {\n        /* single square, non-capturing */\n        var square = i + PAWN_OFFSETS[us][0];\n        if (board[square] == null) {\n            add_move(board, moves, i, square, BITS.NORMAL);\n\n          /* double square */\n          var square = i + PAWN_OFFSETS[us][1];\n          if (second_rank[us] === rank(i) && board[square] == null) {\n            add_move(board, moves, i, square, BITS.BIG_PAWN);\n          }\n        }\n\n        /* pawn captures */\n        for (j = 2; j < 4; j++) {\n          var square = i + PAWN_OFFSETS[us][j];\n          if (square & 0x88) continue;\n\n          if (board[square] != null &&\n              board[square].color === them) {\n              add_move(board, moves, i, square, BITS.CAPTURE);\n          } else if (square === ep_square) {\n              add_move(board, moves, i, ep_square, BITS.EP_CAPTURE);\n          }\n        }\n      } else {\n        for (var j = 0, len = PIECE_OFFSETS[piece.type].length; j < len; j++) {\n          var offset = PIECE_OFFSETS[piece.type][j];\n          var square = i;\n\n          while (true) {\n            square += offset;\n            if (square & 0x88) break;\n\n            if (board[square] == null) {\n              add_move(board, moves, i, square, BITS.NORMAL);\n            } else {\n              if (board[square].color === us) break;\n              add_move(board, moves, i, square, BITS.CAPTURE);\n              break;\n            }\n\n            /* break, if knight or king */\n            if (piece.type === 'n' || piece.type === 'k') break;\n          }\n        }\n      }\n    }\n\n    /* check for castling if: a) we're generating all moves, or b) we're doing\n     * single square move generation on the king's square\n     */\n    if ((!single_square) || last_sq === kings[us]) {\n      /* king-side castling */\n      if (castling[us] & BITS.KSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from + 2;\n\n        if (board[castling_from + 1] == null &&\n            board[castling_to]       == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from + 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us] , castling_to,\n                   BITS.KSIDE_CASTLE);\n        }\n      }\n\n      /* queen-side castling */\n      if (castling[us] & BITS.QSIDE_CASTLE) {\n        var castling_from = kings[us];\n        var castling_to = castling_from - 2;\n\n        if (board[castling_from - 1] == null &&\n            board[castling_from - 2] == null &&\n            board[castling_from - 3] == null &&\n            !attacked(them, kings[us]) &&\n            !attacked(them, castling_from - 1) &&\n            !attacked(them, castling_to)) {\n          add_move(board, moves, kings[us], castling_to,\n                   BITS.QSIDE_CASTLE);\n        }\n      }\n    }\n\n    /* return all pseudo-legal moves (this includes moves that allow the king\n     * to be captured)\n     */\n    if (!legal) {\n      return moves;\n    }\n\n    /* filter out illegal moves */\n    var legal_moves = [];\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(us)) {\n        legal_moves.push(moves[i]);\n      }\n      undo_move();\n    }\n\n    return legal_moves;\n  }\n\n  /* convert a move from 0x88 coordinates to Standard Algebraic Notation\n   * (SAN)\n   *\n   * @param {boolean} sloppy Use the sloppy SAN generator to work around over\n   * disambiguation bugs in Fritz and Chessbase.  See below:\n   *\n   * r1bqkbnr/ppp2ppp/2n5/1B1pP3/4P3/8/PPPP2PP/RNBQK1NR b KQkq - 2 4\n   * 4. ... Nge7 is overly disambiguated because the knight on c6 is pinned\n   * 4. ... Ne7 is technically the valid SAN\n   */\n  function move_to_san(move, sloppy) {\n\n    var output = '';\n\n    if (move.flags & BITS.KSIDE_CASTLE) {\n      output = 'O-O';\n    } else if (move.flags & BITS.QSIDE_CASTLE) {\n      output = 'O-O-O';\n    } else {\n      var disambiguator = get_disambiguator(move, sloppy);\n\n      if (move.piece !== PAWN) {\n        output += move.piece.toUpperCase() + disambiguator;\n      }\n\n      if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n        if (move.piece === PAWN) {\n          output += algebraic(move.from)[0];\n        }\n        output += 'x';\n      }\n\n      output += algebraic(move.to);\n\n      if (move.flags & BITS.PROMOTION) {\n        output += '=' + move.promotion.toUpperCase();\n      }\n    }\n\n    make_move(move);\n    if (in_check()) {\n      if (in_checkmate()) {\n        output += '#';\n      } else {\n        output += '+';\n      }\n    }\n    undo_move();\n\n    return output;\n  }\n\n  // parses all of the decorators out of a SAN string\n  function stripped_san(move) {\n    return move.replace(/=/,'').replace(/[+#]?[?!]*$/,'');\n  }\n\n  function attacked(color, square) {\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* did we run off the end of the board */\n      if (i & 0x88) { i += 7; continue; }\n\n      /* if empty square or wrong color */\n      if (board[i] == null || board[i].color !== color) continue;\n\n      var piece = board[i];\n      var difference = i - square;\n      var index = difference + 119;\n\n      if (ATTACKS[index] & (1 << SHIFTS[piece.type])) {\n        if (piece.type === PAWN) {\n          if (difference > 0) {\n            if (piece.color === WHITE) return true;\n          } else {\n            if (piece.color === BLACK) return true;\n          }\n          continue;\n        }\n\n        /* if the piece is a knight or a king */\n        if (piece.type === 'n' || piece.type === 'k') return true;\n\n        var offset = RAYS[index];\n        var j = i + offset;\n\n        var blocked = false;\n        while (j !== square) {\n          if (board[j] != null) { blocked = true; break; }\n          j += offset;\n        }\n\n        if (!blocked) return true;\n      }\n    }\n\n    return false;\n  }\n\n  function king_attacked(color) {\n    return attacked(swap_color(color), kings[color]);\n  }\n\n  function in_check() {\n    return king_attacked(turn);\n  }\n\n  function in_checkmate() {\n    return in_check() && generate_moves().length === 0;\n  }\n\n  function in_stalemate() {\n    return !in_check() && generate_moves().length === 0;\n  }\n\n  function insufficient_material() {\n    var pieces = {};\n    var bishops = [];\n    var num_pieces = 0;\n    var sq_color = 0;\n\n    for (var i = SQUARES.a8; i<= SQUARES.h1; i++) {\n      sq_color = (sq_color + 1) % 2;\n      if (i & 0x88) { i += 7; continue; }\n\n      var piece = board[i];\n      if (piece) {\n        pieces[piece.type] = (piece.type in pieces) ?\n                              pieces[piece.type] + 1 : 1;\n        if (piece.type === BISHOP) {\n          bishops.push(sq_color);\n        }\n        num_pieces++;\n      }\n    }\n\n    /* k vs. k */\n    if (num_pieces === 2) { return true; }\n\n    /* k vs. kn .... or .... k vs. kb */\n    else if (num_pieces === 3 && (pieces[BISHOP] === 1 ||\n                                 pieces[KNIGHT] === 1)) { return true; }\n\n    /* kb vs. kb where any number of bishops are all on the same color */\n    else if (num_pieces === pieces[BISHOP] + 2) {\n      var sum = 0;\n      var len = bishops.length;\n      for (var i = 0; i < len; i++) {\n        sum += bishops[i];\n      }\n      if (sum === 0 || sum === len) { return true; }\n    }\n\n    return false;\n  }\n\n  function in_threefold_repetition() {\n    /* TODO: while this function is fine for casual use, a better\n     * implementation would use a Zobrist key (instead of FEN). the\n     * Zobrist key would be maintained in the make_move/undo_move functions,\n     * avoiding the costly that we do below.\n     */\n    var moves = [];\n    var positions = {};\n    var repetition = false;\n\n    while (true) {\n      var move = undo_move();\n      if (!move) break;\n      moves.push(move);\n    }\n\n    while (true) {\n      /* remove the last two fields in the FEN string, they're not needed\n       * when checking for draw by rep */\n      var fen = generate_fen().split(' ').slice(0,4).join(' ');\n\n      /* has the position occurred three or move times */\n      positions[fen] = (fen in positions) ? positions[fen] + 1 : 1;\n      if (positions[fen] >= 3) {\n        repetition = true;\n      }\n\n      if (!moves.length) {\n        break;\n      }\n      make_move(moves.pop());\n    }\n\n    return repetition;\n  }\n\n  function push(move) {\n    history.push({\n      move: move,\n      kings: {b: kings.b, w: kings.w},\n      turn: turn,\n      castling: {b: castling.b, w: castling.w},\n      ep_square: ep_square,\n      half_moves: half_moves,\n      move_number: move_number\n    });\n  }\n\n  function make_move(move) {\n    var us = turn;\n    var them = swap_color(us);\n    push(move);\n\n    board[move.to] = board[move.from];\n    board[move.from] = null;\n\n    /* if ep capture, remove the captured pawn */\n    if (move.flags & BITS.EP_CAPTURE) {\n      if (turn === BLACK) {\n        board[move.to - 16] = null;\n      } else {\n        board[move.to + 16] = null;\n      }\n    }\n\n    /* if pawn promotion, replace with new piece */\n    if (move.flags & BITS.PROMOTION) {\n      board[move.to] = {type: move.promotion, color: us};\n    }\n\n    /* if we moved the king */\n    if (board[move.to].type === KING) {\n      kings[board[move.to].color] = move.to;\n\n      /* if we castled, move the rook next to the king */\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        var castling_to = move.to - 1;\n        var castling_from = move.to + 1;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        var castling_to = move.to + 1;\n        var castling_from = move.to - 2;\n        board[castling_to] = board[castling_from];\n        board[castling_from] = null;\n      }\n\n      /* turn off castling */\n      castling[us] = '';\n    }\n\n    /* turn off castling if we move a rook */\n    if (castling[us]) {\n      for (var i = 0, len = ROOKS[us].length; i < len; i++) {\n        if (move.from === ROOKS[us][i].square &&\n            castling[us] & ROOKS[us][i].flag) {\n          castling[us] ^= ROOKS[us][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* turn off castling if we capture a rook */\n    if (castling[them]) {\n      for (var i = 0, len = ROOKS[them].length; i < len; i++) {\n        if (move.to === ROOKS[them][i].square &&\n            castling[them] & ROOKS[them][i].flag) {\n          castling[them] ^= ROOKS[them][i].flag;\n          break;\n        }\n      }\n    }\n\n    /* if big pawn move, update the en passant square */\n    if (move.flags & BITS.BIG_PAWN) {\n      if (turn === 'b') {\n        ep_square = move.to - 16;\n      } else {\n        ep_square = move.to + 16;\n      }\n    } else {\n      ep_square = EMPTY;\n    }\n\n    /* reset the 50 move counter if a pawn is moved or a piece is captured */\n    if (move.piece === PAWN) {\n      half_moves = 0;\n    } else if (move.flags & (BITS.CAPTURE | BITS.EP_CAPTURE)) {\n      half_moves = 0;\n    } else {\n      half_moves++;\n    }\n\n    if (turn === BLACK) {\n      move_number++;\n    }\n    turn = swap_color(turn);\n  }\n\n  function undo_move() {\n    var old = history.pop();\n    if (old == null) { return null; }\n\n    var move = old.move;\n    kings = old.kings;\n    turn = old.turn;\n    castling = old.castling;\n    ep_square = old.ep_square;\n    half_moves = old.half_moves;\n    move_number = old.move_number;\n\n    var us = turn;\n    var them = swap_color(turn);\n\n    board[move.from] = board[move.to];\n    board[move.from].type = move.piece;  // to undo any promotions\n    board[move.to] = null;\n\n    if (move.flags & BITS.CAPTURE) {\n      board[move.to] = {type: move.captured, color: them};\n    } else if (move.flags & BITS.EP_CAPTURE) {\n      var index;\n      if (us === BLACK) {\n        index = move.to - 16;\n      } else {\n        index = move.to + 16;\n      }\n      board[index] = {type: PAWN, color: them};\n    }\n\n\n    if (move.flags & (BITS.KSIDE_CASTLE | BITS.QSIDE_CASTLE)) {\n      var castling_to, castling_from;\n      if (move.flags & BITS.KSIDE_CASTLE) {\n        castling_to = move.to + 1;\n        castling_from = move.to - 1;\n      } else if (move.flags & BITS.QSIDE_CASTLE) {\n        castling_to = move.to - 2;\n        castling_from = move.to + 1;\n      }\n\n      board[castling_to] = board[castling_from];\n      board[castling_from] = null;\n    }\n\n    return move;\n  }\n\n  /* this function is used to uniquely identify ambiguous moves */\n  function get_disambiguator(move, sloppy) {\n    var moves = generate_moves({legal: !sloppy});\n\n    var from = move.from;\n    var to = move.to;\n    var piece = move.piece;\n\n    var ambiguities = 0;\n    var same_rank = 0;\n    var same_file = 0;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      var ambig_from = moves[i].from;\n      var ambig_to = moves[i].to;\n      var ambig_piece = moves[i].piece;\n\n      /* if a move of the same piece type ends on the same to square, we'll\n       * need to add a disambiguator to the algebraic notation\n       */\n      if (piece === ambig_piece && from !== ambig_from && to === ambig_to) {\n        ambiguities++;\n\n        if (rank(from) === rank(ambig_from)) {\n          same_rank++;\n        }\n\n        if (file(from) === file(ambig_from)) {\n          same_file++;\n        }\n      }\n    }\n\n    if (ambiguities > 0) {\n      /* if there exists a similar moving piece on the same rank and file as\n       * the move in question, use the square as the disambiguator\n       */\n      if (same_rank > 0 && same_file > 0) {\n        return algebraic(from);\n      }\n      /* if the moving piece rests on the same file, use the rank symbol as the\n       * disambiguator\n       */\n      else if (same_file > 0) {\n        return algebraic(from).charAt(1);\n      }\n      /* else use the file symbol */\n      else {\n        return algebraic(from).charAt(0);\n      }\n    }\n\n    return '';\n  }\n\n  function ascii() {\n    var s = '   +------------------------+\\n';\n    for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n      /* display the rank */\n      if (file(i) === 0) {\n        s += ' ' + '87654321'[rank(i)] + ' |';\n      }\n\n      /* empty piece */\n      if (board[i] == null) {\n        s += ' . ';\n      } else {\n        var piece = board[i].type;\n        var color = board[i].color;\n        var symbol = (color === WHITE) ?\n                     piece.toUpperCase() : piece.toLowerCase();\n        s += ' ' + symbol + ' ';\n      }\n\n      if ((i + 1) & 0x88) {\n        s += '|\\n';\n        i += 8;\n      }\n    }\n    s += '   +------------------------+\\n';\n    s += '     a  b  c  d  e  f  g  h\\n';\n\n    return s;\n  }\n\n  // convert a move from Standard Algebraic Notation (SAN) to 0x88 coordinates\n  function move_from_san(move, sloppy) {\n    // strip off any move decorations: e.g Nf3+?!\n    var clean_move = stripped_san(move);\n\n    // if we're using the sloppy parser run a regex to grab piece, to, and from\n    // this should parse invalid SAN like: Pe2-e4, Rc1c4, Qf3xf7\n    if (sloppy) {\n      var matches = clean_move.match(/([pnbrqkPNBRQK])?([a-h][1-8])x?-?([a-h][1-8])([qrbnQRBN])?/);\n      if (matches) {\n        var piece = matches[1];\n        var from = matches[2];\n        var to = matches[3];\n        var promotion = matches[4];\n      }\n    }\n\n    var moves = generate_moves();\n    for (var i = 0, len = moves.length; i < len; i++) {\n      // try the strict parser first, then the sloppy parser if requested\n      // by the user\n      if ((clean_move === stripped_san(move_to_san(moves[i]))) ||\n          (sloppy && clean_move === stripped_san(move_to_san(moves[i], true)))) {\n        return moves[i];\n      } else {\n        if (matches &&\n            (!piece || piece.toLowerCase() == moves[i].piece) &&\n            SQUARES[from] == moves[i].from &&\n            SQUARES[to] == moves[i].to &&\n            (!promotion || promotion.toLowerCase() == moves[i].promotion)) {\n          return moves[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n\n  /*****************************************************************************\n   * UTILITY FUNCTIONS\n   ****************************************************************************/\n  function rank(i) {\n    return i >> 4;\n  }\n\n  function file(i) {\n    return i & 15;\n  }\n\n  function algebraic(i){\n    var f = file(i), r = rank(i);\n    return 'abcdefgh'.substring(f,f+1) + '87654321'.substring(r,r+1);\n  }\n\n  function swap_color(c) {\n    return c === WHITE ? BLACK : WHITE;\n  }\n\n  function is_digit(c) {\n    return '0123456789'.indexOf(c) !== -1;\n  }\n\n  /* pretty = external move object */\n  function make_pretty(ugly_move) {\n    var move = clone(ugly_move);\n    move.san = move_to_san(move, false);\n    move.to = algebraic(move.to);\n    move.from = algebraic(move.from);\n\n    var flags = '';\n\n    for (var flag in BITS) {\n      if (BITS[flag] & move.flags) {\n        flags += FLAGS[flag];\n      }\n    }\n    move.flags = flags;\n\n    return move;\n  }\n\n  function clone(obj) {\n    var dupe = (obj instanceof Array) ? [] : {};\n\n    for (var property in obj) {\n      if (typeof property === 'object') {\n        dupe[property] = clone(obj[property]);\n      } else {\n        dupe[property] = obj[property];\n      }\n    }\n\n    return dupe;\n  }\n\n  function trim(str) {\n    return str.replace(/^\\s+|\\s+$/g, '');\n  }\n\n  /*****************************************************************************\n   * DEBUGGING UTILITIES\n   ****************************************************************************/\n  function perft(depth) {\n    var moves = generate_moves({legal: false});\n    var nodes = 0;\n    var color = turn;\n\n    for (var i = 0, len = moves.length; i < len; i++) {\n      make_move(moves[i]);\n      if (!king_attacked(color)) {\n        if (depth - 1 > 0) {\n          var child_nodes = perft(depth - 1);\n          nodes += child_nodes;\n        } else {\n          nodes++;\n        }\n      }\n      undo_move();\n    }\n\n    return nodes;\n  }\n\n  return {\n    /***************************************************************************\n     * PUBLIC CONSTANTS (is there a better way to do this?)\n     **************************************************************************/\n    WHITE: WHITE,\n    BLACK: BLACK,\n    PAWN: PAWN,\n    KNIGHT: KNIGHT,\n    BISHOP: BISHOP,\n    ROOK: ROOK,\n    QUEEN: QUEEN,\n    KING: KING,\n    SQUARES: (function() {\n                /* from the ECMA-262 spec (section 12.6.4):\n                 * \"The mechanics of enumerating the properties ... is\n                 * implementation dependent\"\n                 * so: for (var sq in SQUARES) { keys.push(sq); } might not be\n                 * ordered correctly\n                 */\n                var keys = [];\n                for (var i = SQUARES.a8; i <= SQUARES.h1; i++) {\n                  if (i & 0x88) { i += 7; continue; }\n                  keys.push(algebraic(i));\n                }\n                return keys;\n              })(),\n    FLAGS: FLAGS,\n\n    /***************************************************************************\n     * PUBLIC API\n     **************************************************************************/\n    load: function(fen) {\n      return load(fen);\n    },\n\n    reset: function() {\n      return reset();\n    },\n\n    moves: function(options) {\n      /* The internal representation of a chess move is in 0x88 format, and\n       * not meant to be human-readable.  The code below converts the 0x88\n       * square coordinates to algebraic coordinates.  It also prunes an\n       * unnecessary move keys resulting from a verbose call.\n       */\n\n      var ugly_moves = generate_moves(options);\n      var moves = [];\n\n      for (var i = 0, len = ugly_moves.length; i < len; i++) {\n\n        /* does the user want a full move object (most likely not), or just\n         * SAN\n         */\n        if (typeof options !== 'undefined' && 'verbose' in options &&\n            options.verbose) {\n          moves.push(make_pretty(ugly_moves[i]));\n        } else {\n          moves.push(move_to_san(ugly_moves[i], false));\n        }\n      }\n\n      return moves;\n    },\n\n    in_check: function() {\n      return in_check();\n    },\n\n    in_checkmate: function() {\n      return in_checkmate();\n    },\n\n    in_stalemate: function() {\n      return in_stalemate();\n    },\n\n    in_draw: function() {\n      return half_moves >= 100 ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    insufficient_material: function() {\n      return insufficient_material();\n    },\n\n    in_threefold_repetition: function() {\n      return in_threefold_repetition();\n    },\n\n    game_over: function() {\n      return half_moves >= 100 ||\n             in_checkmate() ||\n             in_stalemate() ||\n             insufficient_material() ||\n             in_threefold_repetition();\n    },\n\n    validate_fen: function(fen) {\n      return validate_fen(fen);\n    },\n\n    fen: function() {\n      return generate_fen();\n    },\n\n    pgn: function(options) {\n      /* using the specification from http://www.chessclub.com/help/PGN-spec\n       * example for html usage: .pgn({ max_width: 72, newline_char: \"<br />\" })\n       */\n      var newline = (typeof options === 'object' &&\n                     typeof options.newline_char === 'string') ?\n                     options.newline_char : '\\n';\n      var max_width = (typeof options === 'object' &&\n                       typeof options.max_width === 'number') ?\n                       options.max_width : 0;\n      var result = [];\n      var header_exists = false;\n\n      /* add the PGN header headerrmation */\n      for (var i in header) {\n        /* TODO: order of enumerated properties in header object is not\n         * guaranteed, see ECMA-262 spec (section 12.6.4)\n         */\n        result.push('[' + i + ' \\\"' + header[i] + '\\\"]' + newline);\n        header_exists = true;\n      }\n\n      if (header_exists && history.length) {\n        result.push(newline);\n      }\n\n      /* pop all of history onto reversed_history */\n      var reversed_history = [];\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      var moves = [];\n      var move_string = '';\n\n      /* build the list of moves.  a move_string looks like: \"3. e3 e6\" */\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n\n        /* if the position started with black to move, start PGN with 1. ... */\n        if (!history.length && move.color === 'b') {\n          move_string = move_number + '. ...';\n        } else if (move.color === 'w') {\n          /* store the previous generated move_string if we have one */\n          if (move_string.length) {\n            moves.push(move_string);\n          }\n          move_string = move_number + '.';\n        }\n\n        move_string = move_string + ' ' + move_to_san(move, false);\n        make_move(move);\n      }\n\n      /* are there any other leftover moves? */\n      if (move_string.length) {\n        moves.push(move_string);\n      }\n\n      /* is there a result? */\n      if (typeof header.Result !== 'undefined') {\n        moves.push(header.Result);\n      }\n\n      /* history should be back to what is was before we started generating PGN,\n       * so join together moves\n       */\n      if (max_width === 0) {\n        return result.join('') + moves.join(' ');\n      }\n\n      /* wrap the PGN output at max_width */\n      var current_width = 0;\n      for (var i = 0; i < moves.length; i++) {\n        /* if the current move will push past max_width */\n        if (current_width + moves[i].length > max_width && i !== 0) {\n\n          /* don't end the line with whitespace */\n          if (result[result.length - 1] === ' ') {\n            result.pop();\n          }\n\n          result.push(newline);\n          current_width = 0;\n        } else if (i !== 0) {\n          result.push(' ');\n          current_width++;\n        }\n        result.push(moves[i]);\n        current_width += moves[i].length;\n      }\n\n      return result.join('');\n    },\n\n    load_pgn: function(pgn, options) {\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      function mask(str) {\n        return str.replace(/\\\\/g, '\\\\');\n      }\n\n      function has_keys(object) {\n        for (var key in object) {\n          return true;\n        }\n        return false;\n      }\n\n      function parse_pgn_header(header, options) {\n        var newline_char = (typeof options === 'object' &&\n                            typeof options.newline_char === 'string') ?\n                            options.newline_char : '\\r?\\n';\n        var header_obj = {};\n        var headers = header.split(new RegExp(mask(newline_char)));\n        var key = '';\n        var value = '';\n\n        for (var i = 0; i < headers.length; i++) {\n          key = headers[i].replace(/^\\[([A-Z][A-Za-z]*)\\s.*\\]$/, '$1');\n          value = headers[i].replace(/^\\[[A-Za-z]+\\s\"(.*)\"\\]$/, '$1');\n          if (trim(key).length > 0) {\n            header_obj[key] = value;\n          }\n        }\n\n        return header_obj;\n      }\n\n      var newline_char = (typeof options === 'object' &&\n                          typeof options.newline_char === 'string') ?\n                          options.newline_char : '\\r?\\n';\n      var regex = new RegExp('^(\\\\[(.|' + mask(newline_char) + ')*\\\\])' +\n                             '(' + mask(newline_char) + ')*' +\n                             '1.(' + mask(newline_char) + '|.)*$', 'g');\n\n      /* get header part of the PGN file */\n      var header_string = pgn.replace(regex, '$1');\n\n      /* no info part given, begins with moves */\n      if (header_string[0] !== '[') {\n        header_string = '';\n      }\n\n      reset();\n\n      /* parse PGN header */\n      var headers = parse_pgn_header(header_string, options);\n      for (var key in headers) {\n        set_header([key, headers[key]]);\n      }\n\n      /* load the starting position indicated by [Setup '1'] and\n      * [FEN position] */\n      if (headers['SetUp'] === '1') {\n          if (!(('FEN' in headers) && load(headers['FEN']))) {\n            return false;\n          }\n      }\n\n      /* delete header to get the moves */\n      var ms = pgn.replace(header_string, '').replace(new RegExp(mask(newline_char), 'g'), ' ');\n\n      /* delete comments */\n      ms = ms.replace(/(\\{[^}]+\\})+?/g, '');\n\n      /* delete recursive annotation variations */\n      var rav_regex = /(\\([^\\(\\)]+\\))+?/g\n      while (rav_regex.test(ms)) {\n        ms = ms.replace(rav_regex, '');\n      }\n\n      /* delete move numbers */\n      ms = ms.replace(/\\d+\\.(\\.\\.)?/g, '');\n\n      /* delete ... indicating black to move */\n      ms = ms.replace(/\\.\\.\\./g, '');\n\n      /* delete numeric annotation glyphs */\n      ms = ms.replace(/\\$\\d+/g, '');\n\n      /* trim and get array of moves */\n      var moves = trim(ms).split(new RegExp(/\\s+/));\n\n      /* delete empty entries */\n      moves = moves.join(',').replace(/,,+/g, ',').split(',');\n      var move = '';\n\n      for (var half_move = 0; half_move < moves.length - 1; half_move++) {\n        move = move_from_san(moves[half_move], sloppy);\n\n        /* move not possible! (don't clear the board to examine to show the\n         * latest valid position)\n         */\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n\n      /* examine last move */\n      move = moves[moves.length - 1];\n      if (POSSIBLE_RESULTS.indexOf(move) > -1) {\n        if (has_keys(header) && typeof header.Result === 'undefined') {\n          set_header(['Result', move]);\n        }\n      }\n      else {\n        move = move_from_san(move, sloppy);\n        if (move == null) {\n          return false;\n        } else {\n          make_move(move);\n        }\n      }\n      return true;\n    },\n\n    header: function() {\n      return set_header(arguments);\n    },\n\n    ascii: function() {\n      return ascii();\n    },\n\n    turn: function() {\n      return turn;\n    },\n\n    move: function(move, options) {\n      /* The move function can be called with in the following parameters:\n       *\n       * .move('Nxb7')      <- where 'move' is a case-sensitive SAN string\n       *\n       * .move({ from: 'h7', <- where the 'move' is a move object (additional\n       *         to :'h8',      fields are ignored)\n       *         promotion: 'q',\n       *      })\n       */\n\n      // allow the user to specify the sloppy move parser to work around over\n      // disambiguation bugs in Fritz and Chessbase\n      var sloppy = (typeof options !== 'undefined' && 'sloppy' in options) ?\n                    options.sloppy : false;\n\n      var move_obj = null;\n\n      if (typeof move === 'string') {\n        move_obj = move_from_san(move, sloppy);\n      } else if (typeof move === 'object') {\n        var moves = generate_moves();\n\n        /* convert the pretty move object to an ugly move object */\n        for (var i = 0, len = moves.length; i < len; i++) {\n          if (move.from === algebraic(moves[i].from) &&\n              move.to === algebraic(moves[i].to) &&\n              (!('promotion' in moves[i]) ||\n              move.promotion === moves[i].promotion)) {\n            move_obj = moves[i];\n            break;\n          }\n        }\n      }\n\n      /* failed to find move */\n      if (!move_obj) {\n        return null;\n      }\n\n      /* need to make a copy of move because we can't generate SAN after the\n       * move is made\n       */\n      var pretty_move = make_pretty(move_obj);\n\n      make_move(move_obj);\n\n      return pretty_move;\n    },\n\n    undo: function() {\n      var move = undo_move();\n      return (move) ? make_pretty(move) : null;\n    },\n\n    clear: function() {\n      return clear();\n    },\n\n    put: function(piece, square) {\n      return put(piece, square);\n    },\n\n    get: function(square) {\n      return get(square);\n    },\n\n    remove: function(square) {\n      return remove(square);\n    },\n\n    perft: function(depth) {\n      return perft(depth);\n    },\n\n    square_color: function(square) {\n      if (square in SQUARES) {\n        var sq_0x88 = SQUARES[square];\n        return ((rank(sq_0x88) + file(sq_0x88)) % 2 === 0) ? 'light' : 'dark';\n      }\n\n      return null;\n    },\n\n    history: function(options) {\n      var reversed_history = [];\n      var move_history = [];\n      var verbose = (typeof options !== 'undefined' && 'verbose' in options &&\n                     options.verbose);\n\n      while (history.length > 0) {\n        reversed_history.push(undo_move());\n      }\n\n      while (reversed_history.length > 0) {\n        var move = reversed_history.pop();\n        if (verbose) {\n          move_history.push(make_pretty(move));\n        } else {\n          move_history.push(move_to_san(move));\n        }\n        make_move(move);\n      }\n\n      return move_history;\n    }\n\n  };\n};\n\n/* export Chess object if using node or any other CommonJS compatible\n * environment */\nif (typeof exports !== 'undefined') exports.Chess = Chess;\n/* export Chess object for any RequireJS compatible environment */\nif (typeof define !== 'undefined') define( function () { return Chess;  });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/chess.js/chess.js\n// module id = 2\n// module chunks = 1","/*!\n * Vue.js v2.2.1\n * (c) 2014-2017 Evan You\n * Released under the MIT License.\n */\n/*  */\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction _toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return typeof value === 'string' || typeof value === 'number'\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /([^-])([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str\n    .replace(hyphenateRE, '$1-$2')\n    .replace(hyphenateRE, '$1-$2')\n    .toLowerCase()\n});\n\n/**\n * Simple bind, faster than native\n */\nfunction bind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n  // record original fn length\n  boundFn._length = fn.length;\n  return boundFn\n}\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject (obj) {\n  return toString.call(obj) === OBJECT_STRING\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n */\nfunction noop () {}\n\n/**\n * Always return false.\n */\nvar no = function () { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn();\n    }\n  }\n}\n\n/*  */\n\nvar config = {\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * List of asset types that a component can own.\n   */\n  _assetTypes: [\n    'component',\n    'directive',\n    'filter'\n  ],\n\n  /**\n   * List of lifecycle hooks.\n   */\n  _lifecycleHooks: [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed',\n    'activated',\n    'deactivated'\n  ],\n\n  /**\n   * Max circular updates allowed in a scheduler flush cycle.\n   */\n  _maxUpdateCount: 100\n};\n\n/*  */\n/* globals MutationObserver */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIOS = UA && /iphone|ipad|ipod|ios/.test(UA);\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\n/**\n * Defer a task to execute it asynchronously.\n */\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n\n  function nextTickHandler () {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks.length = 0;\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  // the nextTick behavior leverages the microtask queue, which can be accessed\n  // via either native Promise.then or MutationObserver.\n  // MutationObserver has wider support, however it is seriously bugged in\n  // UIWebView in iOS >= 9.3.3 when triggered in touch event handlers. It\n  // completely stops working after triggering a few times... so, if native\n  // Promise is available, we will use it:\n  /* istanbul ignore if */\n  if (typeof Promise !== 'undefined' && isNative(Promise)) {\n    var p = Promise.resolve();\n    var logError = function (err) { console.error(err); };\n    timerFunc = function () {\n      p.then(nextTickHandler).catch(logError);\n      // in problematic UIWebViews, Promise.then doesn't completely break, but\n      // it can get stuck in a weird state where callbacks are pushed into the\n      // microtask queue but the queue isn't being flushed, until the browser\n      // needs to do some other work, e.g. handle a timer. Therefore we can\n      // \"force\" the microtask queue to be flushed by adding an empty timer.\n      if (isIOS) { setTimeout(noop); }\n    };\n  } else if (typeof MutationObserver !== 'undefined' && (\n    isNative(MutationObserver) ||\n    // PhantomJS and iOS 7.x\n    MutationObserver.toString() === '[object MutationObserverConstructor]'\n  )) {\n    // use MutationObserver where native Promise is not available,\n    // e.g. PhantomJS IE11, iOS7, Android 4.4\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(String(counter));\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = String(counter);\n    };\n  } else {\n    // fallback to setTimeout\n    /* istanbul ignore next */\n    timerFunc = function () {\n      setTimeout(nextTickHandler, 0);\n    };\n  }\n\n  return function queueNextTick (cb, ctx) {\n    var _resolve;\n    callbacks.push(function () {\n      if (cb) { cb.call(ctx); }\n      if (_resolve) { _resolve(ctx); }\n    });\n    if (!pending) {\n      pending = true;\n      timerFunc();\n    }\n    if (!cb && typeof Promise !== 'undefined') {\n      return new Promise(function (resolve) {\n        _resolve = resolve;\n      })\n    }\n  }\n})();\n\nvar _Set;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\nvar perf;\n\nif (process.env.NODE_ENV !== 'production') {\n  perf = inBrowser && window.performance;\n  if (perf && (!perf.mark || !perf.measure)) {\n    perf = undefined;\n  }\n}\n\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  } else {\n    var segments = path.split('.');\n    return function (obj) {\n      for (var i = 0; i < segments.length; i++) {\n        if (!obj) { return }\n        obj = obj[segments[i]];\n      }\n      return obj\n    }\n  }\n}\n\nvar warn = noop;\nvar tip = noop;\nvar formatComponentName;\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.error(\"[Vue warn]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + \" \" + (\n        vm ? formatLocation(formatComponentName(vm)) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var name = vm._isVue\n      ? vm.$options.name || vm.$options._componentTag\n      : vm.name;\n\n    var file = vm._isVue && vm.$options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var formatLocation = function (str) {\n    if (str === \"<Anonymous>\") {\n      str += \" - use the \\\"name\\\" option for better debugging messages.\";\n    }\n    return (\"\\n(found in \" + str + \")\")\n  };\n}\n\n/*  */\n\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid$1++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (obj, key, val) {\n  if (Array.isArray(obj)) {\n    obj.length = Math.max(obj.length, key);\n    obj.splice(key, 1, val);\n    return val\n  }\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return\n  }\n  if (!ob) {\n    obj[key] = val;\n    return\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (obj, key) {\n  if (Array.isArray(obj)) {\n    obj.splice(key, 1);\n    return\n  }\n  var ob = obj.__ob__;\n  if (obj._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(obj, key)) {\n    return\n  }\n  delete obj[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        childVal.call(this),\n        parentVal.call(this)\n      )\n    }\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm)\n        : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nconfig._lifecycleHooks.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal\n    ? extend(res, childVal)\n    : res\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (parentVal, childVal) {\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent\n      ? parent.concat(child)\n      : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.computed = function (parentVal, childVal) {\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret\n};\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    var lower = key.toLowerCase();\n    if (isBuiltInTag(lower) || config.isReservedTag(lower)) {\n      warn(\n        'Do not use built-in or reserved HTML elements as component ' +\n        'id: ' + key\n      );\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  }\n  options.props = res;\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n  normalizeProps(child);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = typeof extendsFrom === 'function'\n      ? mergeOptions(parent, extendsFrom.options, vm)\n      : mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      if (mixin.prototype instanceof Vue$2) {\n        mixin = mixin.options;\n      }\n      parent = mergeOptions(parent, mixin, vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // handle boolean props\n  if (isType(Boolean, prop.type)) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (!isType(String, prop.type) && (value === '' || value === hyphenate(key))) {\n      value = true;\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldConvert = observerState.shouldConvert;\n    observerState.shouldConvert = true;\n    observe(value);\n    observerState.shouldConvert = prevShouldConvert;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      'Invalid prop: type check failed for prop \"' + name + '\".' +\n      ' Expected ' + expectedTypes.map(capitalize).join(', ') +\n      ', got ' + Object.prototype.toString.call(value).slice(8, -1) + '.',\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\n/**\n * Assert the type of a value\n */\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (expectedType === 'String') {\n    valid = typeof value === (expectedType = 'string');\n  } else if (expectedType === 'Number') {\n    valid = typeof value === (expectedType = 'number');\n  } else if (expectedType === 'Boolean') {\n    valid = typeof value === (expectedType = 'boolean');\n  } else if (expectedType === 'Function') {\n    valid = typeof value === (expectedType = 'function');\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match && match[1]\n}\n\nfunction isType (type, fn) {\n  if (!Array.isArray(fn)) {\n    return getType(fn) === getType(type)\n  }\n  for (var i = 0, len = fn.length; i < len; i++) {\n    if (getType(fn[i]) === getType(type)) {\n      return true\n    }\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction handleError (err, vm, type) {\n  if (config.errorHandler) {\n    config.errorHandler.call(null, err, vm, type);\n  } else {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Error in \" + type + \":\"), vm);\n    }\n    /* istanbul ignore else */\n    if (inBrowser && typeof console !== 'undefined') {\n      console.error(err);\n    } else {\n      throw err\n    }\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      \"referenced during render. Make sure to declare reactive data \" +\n      \"properties in the data option.\",\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' &&\n    Proxy.toString().match(/native code/);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.functionalContext = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n};\n\nvar prototypeAccessors = { child: {} };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function () {\n  var node = new VNode();\n  node.text = '';\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isCloned = true;\n  return cloned\n}\n\nfunction cloneVNodes (vnodes) {\n  var res = new Array(vnodes.length);\n  for (var i = 0; i < vnodes.length; i++) {\n    res[i] = cloneVNode(vnodes[i]);\n  }\n  return res\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      for (var i = 0; i < fns.length; i++) {\n        fns[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, cur, old, event;\n  for (name in on) {\n    cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (!cur) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (!old) {\n      if (!cur.fns) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (!on[name]) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (!oldHook) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (oldHook.fns && oldHook.merged) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constrcuts that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (c == null || typeof c === 'boolean') { continue }\n    last = res[res.length - 1];\n    //  nested\n    if (Array.isArray(c)) {\n      res.push.apply(res, normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i)));\n    } else if (isPrimitive(c)) {\n      if (last && last.text) {\n        last.text += String(c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (c.text && last && last.text) {\n        res[res.length - 1] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (c.tag && c.key == null && nestedIndex != null) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  return children && children.filter(function (c) { return c && c.componentOptions; })[0]\n}\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once$$1) {\n  if (once$$1) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (arguments.length === 1) {\n      vm._events[event] = null;\n      return vm\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        cbs.splice(i, 1);\n        break\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        cbs[i].apply(vm, args);\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  var defaultSlot = [];\n  var name, child;\n  for (var i = 0, l = children.length; i < l; i++) {\n    child = children[i];\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.functionalContext === context) &&\n        child.data && (name = child.data.slot)) {\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      defaultSlot.push(child);\n    }\n  }\n  // ignore single whitespace\n  if (defaultSlot.length && !(\n    defaultSlot.length === 1 &&\n    (defaultSlot[0].text === ' ' || defaultSlot[0].isComment)\n  )) {\n    slots.default = defaultSlot;\n  }\n  return slots\n}\n\nfunction resolveScopedSlots (\n  fns\n) {\n  var res = {};\n  for (var i = 0; i < fns.length; i++) {\n    res[fns[i][0]] = fns[i][1];\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (vm.$options.template && vm.$options.template.charAt(0) !== '#') {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'option is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && perf) {\n    updateComponent = function () {\n      var name = vm._name;\n      var startTag = \"start \" + name;\n      var endTag = \"end \" + name;\n      perf.mark(startTag);\n      var vnode = vm._render();\n      perf.mark(endTag);\n      perf.measure((name + \" render\"), startTag, endTag);\n      perf.mark(startTag);\n      vm._update(vnode, hydrating);\n      perf.mark(endTag);\n      perf.measure((name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  vm._watcher = new Watcher(vm, updateComponent, noop);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    observerState.shouldConvert = false;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = true;\n    }\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      props[key] = validateProp(key, vm.$options.props, propsData, vm);\n    }\n    observerState.shouldConvert = true;\n    if (process.env.NODE_ENV !== 'production') {\n      observerState.isSettingProps = false;\n    }\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n  // update listeners\n  if (listeners) {\n    var oldListeners = vm.$options._parentListeners;\n    vm.$options._parentListeners = listeners;\n    updateComponentListeners(vm, listeners, oldListeners);\n  }\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive == null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n}\n\n/*  */\n\n\nvar queue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  queue.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id, vm;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // call updated hooks\n  index = queue.length;\n  while (index--) {\n    watcher = queue[index];\n    vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n\n  resetSchedulerState();\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i >= 0 && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(Math.max(i, index) + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  if (this.user) {\n    try {\n      value = this.getter.call(vm, vm);\n    } catch (e) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    }\n  } else {\n    value = this.getter.call(vm, vm);\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val) {\n  seenObjects.clear();\n  _traverse(val, seenObjects);\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || !Object.isExtensible(val)) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch) { initWatch(vm, opts.watch); }\n}\n\nvar isReservedProp = { key: 1, ref: 1, slot: 1 };\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  observerState.shouldConvert = isRoot;\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      if (isReservedProp[key]) {\n        warn(\n          (\"\\\"\" + key + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (vm.$parent && !observerState.isSettingProps) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  observerState.shouldConvert = true;\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? data.call(vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var i = keys.length;\n  while (i--) {\n    if (props && hasOwn(props, keys[i])) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + (keys[i]) + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(keys[i])) {\n      proxy(vm, \"_data\", keys[i]);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  var watchers = vm._computedWatchers = Object.create(null);\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    // create internal watcher for the computed property.\n    watchers[key] = new Watcher(vm, getter, noop, computedWatcherOptions);\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    }\n  }\n}\n\nfunction defineComputed (target, key, userDef) {\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = createComputedGetter(key);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n    }\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (vm, key, handler) {\n  var options;\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  vm.$watch(key, handler, options);\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nvar hooks = { init: init, prepatch: prepatch, insert: insert, destroy: destroy };\nvar hooksToMerge = Object.keys(hooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (!Ctor) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  if (!Ctor.cid) {\n    if (Ctor.resolved) {\n      Ctor = Ctor.resolved;\n    } else {\n      Ctor = resolveAsyncComponent(Ctor, baseCtor, function () {\n        // it's ok to queue this on every render because\n        // $forceUpdate is buffered by the scheduler.\n        context.$forceUpdate();\n      });\n      if (!Ctor) {\n        // return nothing if this is indeed an async component\n        // wait for the callback to trigger parent update.\n        return\n      }\n    }\n  }\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  data = data || {};\n\n  // transform component v-model data into props & events\n  if (data.model) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractProps(data, Ctor);\n\n  // functional component\n  if (Ctor.options.functional) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  data.on = data.nativeOn;\n\n  if (Ctor.options.abstract) {\n    // abstract components do not keep anything\n    // other than props & listeners\n    data = {};\n  }\n\n  // merge component management hooks onto the placeholder node\n  mergeHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children }\n  );\n  return vnode\n}\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  context,\n  children\n) {\n  var props = {};\n  var propOptions = Ctor.options.props;\n  if (propOptions) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData);\n    }\n  }\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var _context = Object.create(context);\n  var h = function (a, b, c, d) { return createElement(_context, a, b, c, d, true); };\n  var vnode = Ctor.options.render.call(null, h, {\n    props: props,\n    data: data,\n    parent: context,\n    children: children,\n    slots: function () { return resolveSlots(children, context); }\n  });\n  if (vnode instanceof VNode) {\n    vnode.functionalContext = context;\n    if (data.slot) {\n      (vnode.data || (vnode.data = {})).slot = data.slot;\n    }\n  }\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var vnodeComponentOptions = vnode.componentOptions;\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    propsData: vnodeComponentOptions.propsData,\n    _componentTag: vnodeComponentOptions.tag,\n    _parentVnode: vnode,\n    _parentListeners: vnodeComponentOptions.listeners,\n    _renderChildren: vnodeComponentOptions.children,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (inlineTemplate) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnodeComponentOptions.Ctor(options)\n}\n\nfunction init (\n  vnode,\n  hydrating,\n  parentElm,\n  refElm\n) {\n  if (!vnode.componentInstance || vnode.componentInstance._isDestroyed) {\n    var child = vnode.componentInstance = createComponentInstanceForVnode(\n      vnode,\n      activeInstance,\n      parentElm,\n      refElm\n    );\n    child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n  } else if (vnode.data.keepAlive) {\n    // kept-alive components, treat as a patch\n    var mountedNode = vnode; // work around flow\n    prepatch(mountedNode, mountedNode);\n  }\n}\n\nfunction prepatch (\n  oldVnode,\n  vnode\n) {\n  var options = vnode.componentOptions;\n  var child = vnode.componentInstance = oldVnode.componentInstance;\n  updateChildComponent(\n    child,\n    options.propsData, // updated props\n    options.listeners, // updated listeners\n    vnode, // new parent vnode\n    options.children // new children\n  );\n}\n\nfunction insert (vnode) {\n  if (!vnode.componentInstance._isMounted) {\n    vnode.componentInstance._isMounted = true;\n    callHook(vnode.componentInstance, 'mounted');\n  }\n  if (vnode.data.keepAlive) {\n    activateChildComponent(vnode.componentInstance, true /* direct */);\n  }\n}\n\nfunction destroy (vnode) {\n  if (!vnode.componentInstance._isDestroyed) {\n    if (!vnode.data.keepAlive) {\n      vnode.componentInstance.$destroy();\n    } else {\n      deactivateChildComponent(vnode.componentInstance, true /* direct */);\n    }\n  }\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  cb\n) {\n  if (factory.requested) {\n    // pool callbacks\n    factory.pendingCallbacks.push(cb);\n  } else {\n    factory.requested = true;\n    var cbs = factory.pendingCallbacks = [cb];\n    var sync = true;\n\n    var resolve = function (res) {\n      if (isObject(res)) {\n        res = baseCtor.extend(res);\n      }\n      // cache resolved\n      factory.resolved = res;\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        for (var i = 0, l = cbs.length; i < l; i++) {\n          cbs[i](res);\n        }\n      }\n    };\n\n    var reject = function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n    };\n\n    var res = factory(resolve, reject);\n\n    // handle promise\n    if (res && typeof res.then === 'function' && !factory.resolved) {\n      res.then(resolve, reject);\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.resolved\n  }\n}\n\nfunction extractProps (data, Ctor) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (!propOptions) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  var domProps = data.domProps;\n  if (attrs || props || domProps) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey) ||\n      checkProp(res, domProps, key, altKey);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (hash) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\nfunction mergeHooks (data) {\n  if (!data.hook) {\n    data.hook = {};\n  }\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var fromParent = data.hook[key];\n    var ours = hooks[key];\n    data.hook[key] = fromParent ? mergeHook$1(ours, fromParent) : ours;\n  }\n}\n\nfunction mergeHook$1 (one, two) {\n  return function (a, b, c, d) {\n    one(a, b, c, d);\n    two(a, b, c, d);\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (on[event]) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (alwaysNormalize) { normalizationType = ALWAYS_NORMALIZE; }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (data && data.__ob__) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n      typeof children[0] === 'function') {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (vnode) {\n    if (ns) { applyNS(vnode, ns); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    return\n  }\n  if (vnode.children) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (child.tag && !child.ns) {\n        applyNS(child, ns);\n      }\n    }\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      extend(props, bindObject);\n    }\n    return scopedSlotFn(props) || fallback\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes && process.env.NODE_ENV !== 'production') {\n      slotNodes._rendered && warn(\n        \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n        \"- this will likely cause render errors.\",\n        this\n      );\n      slotNodes._rendered = true;\n    }\n    return slotNodes || fallback\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\n/**\n * Runtime helper for checking keyCodes from config.\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInAlias\n) {\n  var keyCodes = config.keyCodes[key] || builtInAlias;\n  if (Array.isArray(keyCodes)) {\n    return keyCodes.indexOf(eventKeyCode) === -1\n  } else {\n    return keyCodes !== eventKeyCode\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      for (var key in value) {\n        if (key === 'class' || key === 'style') {\n          data[key] = value[key];\n        } else {\n          var type = data.attrs && data.attrs.type;\n          var hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n          hash[key] = value[key];\n        }\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var tree = this._staticTrees[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree by doing a shallow clone.\n  if (tree && !isInFor) {\n    return Array.isArray(tree)\n      ? cloneVNodes(tree)\n      : cloneVNode(tree)\n  }\n  // otherwise, render a fresh tree.\n  tree = this._staticTrees[index] =\n    this.$options.staticRenderFns[index].call(this._renderProxy);\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm.$vnode = null; // the placeholder node in parent tree\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null;\n  var parentVnode = vm.$options._parentVnode;\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(vm.$options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n}\n\nfunction renderMixin (Vue) {\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var staticRenderFns = ref.staticRenderFns;\n    var _parentVnode = ref._parentVnode;\n\n    if (vm._isMounted) {\n      // clone slot nodes on re-renders\n      for (var key in vm.$slots) {\n        vm.$slots[key] = cloneVNodes(vm.$slots[key]);\n      }\n    }\n\n    vm.$scopedSlots = (_parentVnode && _parentVnode.data.scopedSlots) || emptyObject;\n\n    if (staticRenderFns && !vm._staticTrees) {\n      vm._staticTrees = [];\n    }\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render function\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        vnode = vm.$options.renderError\n          ? vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e)\n          : vm._vnode;\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n\n  // internal render helpers.\n  // these are exposed on the instance prototype to reduce generated render\n  // code size.\n  Vue.prototype._o = markOnce;\n  Vue.prototype._n = toNumber;\n  Vue.prototype._s = _toString;\n  Vue.prototype._l = renderList;\n  Vue.prototype._t = renderSlot;\n  Vue.prototype._q = looseEqual;\n  Vue.prototype._i = looseIndexOf;\n  Vue.prototype._m = renderStatic;\n  Vue.prototype._f = resolveFilter;\n  Vue.prototype._k = checkKeyCodes;\n  Vue.prototype._b = bindObjectProps;\n  Vue.prototype._v = createTextVNode;\n  Vue.prototype._e = createEmptyVNode;\n  Vue.prototype._u = resolveScopedSlots;\n}\n\n/*  */\n\nfunction initInjections (vm) {\n  var provide = vm.$options.provide;\n  var inject = vm.$options.inject;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    // isArray here\n    var isArray = Array.isArray(inject);\n    var keys = isArray\n      ? inject\n      : hasSymbol\n        ? Reflect.ownKeys(inject)\n        : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = isArray ? key : inject[key];\n      var source = vm;\n      while (source) {\n        if (source._provided && source._provided[provideKey]) {\n          vm[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n    }\n  }\n}\n\n/*  */\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && perf) {\n      perf.mark('init');\n    }\n\n    var vm = this;\n    // a uid\n    vm._uid = uid++;\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initState(vm);\n    initInjections(vm);\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && perf) {\n      vm._name = formatComponentName(vm, false);\n      perf.mark('init end');\n      perf.measure(((vm._name) + \" init\"), 'init', 'init end');\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  opts.parent = options.parent;\n  opts.propsData = options.propsData;\n  opts._parentVnode = options._parentVnode;\n  opts._parentListeners = options._parentListeners;\n  opts._renderChildren = options._renderChildren;\n  opts._componentTag = options._componentTag;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    for (var i = 0; i < latest.length; i++) {\n      if (sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue$2 (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue$2)) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue$2);\nstateMixin(Vue$2);\neventsMixin(Vue$2);\nlifecycleMixin(Vue$2);\nrenderMixin(Vue$2);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn(\n          'Invalid component name: \"' + name + '\". Component names ' +\n          'can only contain alphanumeric characters and the hyphen, ' +\n          'and must start with a letter.'\n        );\n      }\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && config.isReservedTag(id)) {\n            warn(\n              'Do not use built-in or reserved HTML elements as component ' +\n              'id: ' + id\n            );\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nvar patternTypes = [String, RegExp];\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (pattern instanceof RegExp) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (cache, filter) {\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cachedNode);\n        cache[key] = null;\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (vnode) {\n  if (vnode) {\n    if (!vnode.componentInstance._inactive) {\n      callHook(vnode.componentInstance, 'deactivated');\n    }\n    vnode.componentInstance.$destroy();\n  }\n}\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache[key]);\n    }\n  },\n\n  watch: {\n    include: function include (val) {\n      pruneCache(this.cache, function (name) { return matches(val, name); });\n    },\n    exclude: function exclude (val) {\n      pruneCache(this.cache, function (name) { return !matches(val, name); });\n    }\n  },\n\n  render: function render () {\n    var vnode = getFirstComponentChild(this.$slots.default);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      if (name && (\n        (this.include && !matches(this.include, name)) ||\n        (this.exclude && matches(this.exclude, name))\n      )) {\n        return vnode\n      }\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (this.cache[key]) {\n        vnode.componentInstance = this.cache[key].componentInstance;\n      } else {\n        this.cache[key] = vnode;\n      }\n      vnode.data.keepAlive = true;\n    }\n    return vnode\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  config._assetTypes.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue$2);\n\nObject.defineProperty(Vue$2.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nVue$2.version = '2.2.1';\n\n/*  */\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (childNode.componentInstance) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return genClassFromData(data)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: child.class\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction genClassFromData (data) {\n  var dynamicClass = data.class;\n  var staticClass = data.staticClass;\n  if (staticClass || dynamicClass) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  var res = '';\n  if (!value) {\n    return res\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  if (Array.isArray(value)) {\n    var stringified;\n    for (var i = 0, l = value.length; i < l; i++) {\n      if (value[i]) {\n        if ((stringified = stringifyClass(value[i]))) {\n          res += stringified + ' ';\n        }\n      }\n    }\n    return res.slice(0, -1)\n  }\n  if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) { res += key + ' '; }\n    }\n    return res.slice(0, -1)\n  }\n  /* istanbul ignore next */\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setAttribute (node, key, val) {\n  node.setAttribute(key, val);\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetAttribute: setAttribute\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!key) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (Array.isArray(refs[key]) && refs[key].indexOf(ref) < 0) {\n        refs[key].push(ref);\n      } else {\n        refs[key] = [ref];\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n\n/*\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks$1 = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction isUndef (s) {\n  return s == null\n}\n\nfunction isDef (s) {\n  return s != null\n}\n\nfunction sameVnode (vnode1, vnode2) {\n  return (\n    vnode1.key === vnode2.key &&\n    vnode1.tag === vnode2.tag &&\n    vnode1.isComment === vnode2.isComment &&\n    !vnode1.data === !vnode2.data\n  )\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks$1.length; ++i) {\n    cbs[hooks$1[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (modules[j][hooks$1[i]] !== undefined) { cbs[hooks$1[i]].push(modules[j][hooks$1[i]]); }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (parent) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  var inPre = 0;\n  function createElm (vnode, insertedVnodeQueue, parentElm, refElm, nested) {\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          inPre++;\n        }\n        if (\n          !inPre &&\n          !vnode.ns &&\n          !(config.ignoredElements.length && config.ignoredElements.indexOf(tag) > -1) &&\n          config.isUnknownElement(tag)\n        ) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        inPre--;\n      }\n    } else if (vnode.isComment) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isReactivated) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (vnode.data.pendingInsert) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref) {\n    if (parent) {\n      if (ref) {\n        nodeOps.insertBefore(parent, elm, ref);\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(vnode.text));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (i.create) { i.create(emptyNode, vnode); }\n      if (i.insert) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    var ancestor = vnode;\n    while (ancestor) {\n      if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n        nodeOps.setAttribute(vnode.elm, i, '');\n      }\n      ancestor = ancestor.parent;\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n        i !== vnode.context &&\n        isDef(i = i.$options._scopeId)) {\n      nodeOps.setAttribute(vnode.elm, i, '');\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (rm || isDef(vnode.data)) {\n      var listeners = cbs.remove.length + 1;\n      if (!rm) {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      } else {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, elmToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key) ? oldKeyToIdx[newStartVnode.key] : null;\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n          newStartVnode = newCh[++newStartIdx];\n        } else {\n          elmToMove = oldCh[idxInOld];\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !elmToMove) {\n            warn(\n              'It seems there are duplicate keys that is causing an update error. ' +\n              'Make sure each v-for item has a unique key.'\n            );\n          }\n          if (sameVnode(elmToMove, newStartVnode)) {\n            patchVnode(elmToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, newStartVnode.elm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm);\n            newStartVnode = newCh[++newStartIdx];\n          }\n        }\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (vnode.isStatic &&\n        oldVnode.isStatic &&\n        vnode.key === oldVnode.key &&\n        (vnode.isCloned || vnode.isOnce)) {\n      vnode.elm = oldVnode.elm;\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n    var i;\n    var data = vnode.data;\n    var hasData = isDef(data);\n    if (hasData && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n    var elm = vnode.elm = oldVnode.elm;\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (hasData && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (hasData) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (initial && vnode.parent) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var bailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  var isRenderedModule = makeMap('attrs,style,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode)) {\n        return false\n      }\n    }\n    vnode.elm = elm;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          var childrenMatch = true;\n          var childNode = elm.firstChild;\n          for (var i$1 = 0; i$1 < children.length; i$1++) {\n            if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue)) {\n              childrenMatch = false;\n              break\n            }\n            childNode = childNode.nextSibling;\n          }\n          // if childNode is not null, it means the actual childNodes list is\n          // longer than the virtual children list.\n          if (!childrenMatch || childNode) {\n            if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !bailed) {\n              bailed = true;\n              console.warn('Parent: ', elm);\n              console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n            }\n            return false\n          }\n        }\n      }\n      if (isDef(data)) {\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode) {\n    if (vnode.tag) {\n      return (\n        vnode.tag.indexOf('vue-component') === 0 ||\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (!vnode) {\n      if (oldVnode) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (!oldVnode) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute('server-rendered')) {\n            oldVnode.removeAttribute('server-rendered');\n            hydrating = true;\n          }\n          if (hydrating) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        if (vnode.parent) {\n          // component root element replaced.\n          // update parent placeholder node element, recursively\n          var ancestor = vnode.parent;\n          while (ancestor) {\n            ancestor.elm = vnode.elm;\n            ancestor = ancestor.parent;\n          }\n          if (isPatchable(vnode)) {\n            for (var i = 0; i < cbs.create.length; ++i) {\n              cbs.create[i](emptyNode, vnode.parent);\n            }\n          }\n        }\n\n        if (parentElm$1 !== null) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  if (!oldVnode.data.attrs && !vnode.data.attrs) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (attrs.__ob__) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  /* istanbul ignore if */\n  if (isIE9 && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (attrs[key] == null) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, key);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      el.setAttribute(key, value);\n    }\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (!data.staticClass && !data.class &&\n      (!oldData || (!oldData.staticClass && !oldData.class))) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (transitionClass) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\n\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + \",\" + args)\n  }\n}\n\n/*  */\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n\n/**\n * parse directive model to do the array update transform. a[idx] = val => $$a.splice($$idx, 1, val)\n *\n * for loop possible cases:\n *\n * - test\n * - test[idx]\n * - test[test1[idx]]\n * - test[\"a\"][idx]\n * - xxx.test[a[a].test1[idx]]\n * - test.xxx.a[\"asa\"][test1[idx]]\n *\n */\n\nvar str;\nvar index$1;\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  var event;\n  /* istanbul ignore if */\n  if (on[RANGE_TOKEN]) {\n    // IE input[type=range] only supports `change` event\n    event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  if (on[CHECKBOX_RADIO_TOKEN]) {\n    // Chrome fires microtasks in between click/change, leads to #4521\n    event = isChrome ? 'click' : 'change';\n    on[event] = [].concat(on[CHECKBOX_RADIO_TOKEN], on[event] || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction add$1 (\n  event,\n  handler,\n  once,\n  capture\n) {\n  if (once) {\n    var oldHandler = handler;\n    var _target = target$1; // save current target element in closure\n    handler = function (ev) {\n      var res = arguments.length === 1\n        ? oldHandler(ev)\n        : oldHandler.apply(null, arguments);\n      if (res !== null) {\n        remove$2(event, handler, capture, _target);\n      }\n    };\n  }\n  target$1.addEventListener(event, handler, capture);\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(event, handler, capture);\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (!oldVnode.data.on && !vnode.data.on) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (!oldVnode.data.domProps && !vnode.data.domProps) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (props.__ob__) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (props[key] == null) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = cur == null ? '' : String(cur);\n      if (shouldUpdateValue(elm, vnode, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (\n  elm,\n  vnode,\n  checkVal\n) {\n  return (!elm.composing && (\n    vnode.tag === 'option' ||\n    isDirty(elm, checkVal) ||\n    isInputChanged(elm, checkVal)\n  ))\n}\n\nfunction isDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is not equal to the updated value\n  return document.activeElement !== elm && elm.value !== checkVal\n}\n\nfunction isInputChanged (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if ((modifiers && modifiers.number) || elm.type === 'number') {\n    return toNumber(value) !== toNumber(newVal)\n  }\n  if (modifiers && modifiers.trim) {\n    return value.trim() !== newVal.trim()\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (childNode.data && (styleData = normalizeStyleData(childNode.data))) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    el.style[normalize(name)] = val;\n  }\n};\n\nvar prefixes = ['Webkit', 'Moz', 'ms'];\n\nvar testEl;\nvar normalize = cached(function (prop) {\n  testEl = testEl || document.createElement('div');\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in testEl.style)) {\n    return prop\n  }\n  var upper = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < prefixes.length; i++) {\n    var prefixed = prefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return prefixed\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (!data.staticStyle && !data.style &&\n      !oldData.staticStyle && !oldData.style) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldVnode.data.staticStyle;\n  var oldStyleBinding = oldVnode.data.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  vnode.data.style = style.__ob__ ? extend({}, style) : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (newStyle[name] == null) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    el.setAttribute('class', cur.trim());\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser && window.requestAnimationFrame\n  ? window.requestAnimationFrame.bind(window)\n  : setTimeout;\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  (el._transitionClasses || (el._transitionClasses = [])).push(cls);\n  addClass(el, cls);\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitioneDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitioneDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (el._leaveCb) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (el._enterCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookAgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode.data.hook || (vnode.data.hook = {}), 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n          pendingNode.tag === vnode.tag &&\n          pendingNode.elm._leaveCb) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      addTransitionClass(el, toClass);\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled && !userWantsControl) {\n        if (isValidDuration(explicitEnterDuration)) {\n          setTimeout(cb, explicitEnterDuration);\n        } else {\n          whenTransitionEnds(el, type, cb);\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (el._enterCb) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (!data) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (el._leaveCb || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookAgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitLeaveDuration != null) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[vnode.key] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        addTransitionClass(el, leaveToClass);\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled && !userWantsControl) {\n          if (isValidDuration(explicitLeaveDuration)) {\n            setTimeout(cb, explicitLeaveDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookAgumentsLength (fn) {\n  if (!fn) { return false }\n  var invokerFns = fn.fns;\n  if (invokerFns) {\n    // invoker\n    return getHookAgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (!vnode.data.show) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (!vnode.data.show) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar model$1 = {\n  inserted: function inserted (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      var cb = function () {\n        setSelected(el, binding, vnode.context);\n      };\n      cb();\n      /* istanbul ignore if */\n      if (isIE || isEdge) {\n        setTimeout(cb, 0);\n      }\n    } else if (vnode.tag === 'textarea' || el.type === 'text') {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        if (!isAndroid) {\n          el.addEventListener('compositionstart', onCompositionStart);\n          el.addEventListener('compositionend', onCompositionEnd);\n        }\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var needReset = el.multiple\n        ? binding.value.some(function (v) { return hasNoMatchingOption(v, el.options); })\n        : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, el.options);\n      if (needReset) {\n        trigger(el, 'change');\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  for (var i = 0, l = options.length; i < l; i++) {\n    if (looseEqual(getValue(options[i]), value)) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition && !isIE9) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (value === oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition = vnode.data && vnode.data.transition;\n    if (transition && !isIE9) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: model$1,\n  show: show\n};\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  return /\\d-keep-alive$/.test(rawChild.tag)\n    ? h('keep-alive')\n    : null\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag; });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n        mode && mode !== 'in-out' && mode !== 'out-in') {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (oldChild && oldChild.data && !isSameChild(child, oldChild)) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild && (oldChild.data.transition = extend({}, data));\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final disired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    var body = document.body;\n    var f = body.offsetHeight; // eslint-disable-line\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      if (this._hasMove != null) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue$2.config.mustUseProp = mustUseProp;\nVue$2.config.isReservedTag = isReservedTag;\nVue$2.config.getTagNamespace = getTagNamespace;\nVue$2.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue$2.options.directives, platformDirectives);\nextend(Vue$2.options.components, platformComponents);\n\n// install platform patch function\nVue$2.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue$2.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue$2);\n    } else if (process.env.NODE_ENV !== 'production' && isChrome) {\n      console[console.info ? 'info' : 'log'](\n        'Download the Vue Devtools extension for a better development experience:\\n' +\n        'https://github.com/vuejs/vue-devtools'\n      );\n    }\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      config.productionTip !== false &&\n      inBrowser && typeof console !== 'undefined') {\n    console[console.info ? 'info' : 'log'](\n      \"You are running Vue in development mode.\\n\" +\n      \"Make sure to turn on production mode when deploying for production.\\n\" +\n      \"See more tips at https://vuejs.org/guide/deployment.html\"\n    );\n  }\n}, 0);\n\nexport default Vue$2;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue/dist/vue.runtime.esm.js\n// module id = 3\n// module chunks = 1","/**\n  * vue-router v2.2.1\n  * (c) 2017 Evan You\n  * @license MIT\n  */\n/*  */\n\nfunction assert (condition, message) {\n  if (!condition) {\n    throw new Error((\"[vue-router] \" + message))\n  }\n}\n\nfunction warn (condition, message) {\n  if (!condition) {\n    typeof console !== 'undefined' && console.warn((\"[vue-router] \" + message));\n  }\n}\n\nvar View = {\n  name: 'router-view',\n  functional: true,\n  props: {\n    name: {\n      type: String,\n      default: 'default'\n    }\n  },\n  render: function render (h, ref) {\n    var props = ref.props;\n    var children = ref.children;\n    var parent = ref.parent;\n    var data = ref.data;\n\n    data.routerView = true;\n\n    var name = props.name;\n    var route = parent.$route;\n    var cache = parent._routerViewCache || (parent._routerViewCache = {});\n\n    // determine current view depth, also check to see if the tree\n    // has been toggled inactive but kept-alive.\n    var depth = 0;\n    var inactive = false;\n    while (parent) {\n      if (parent.$vnode && parent.$vnode.data.routerView) {\n        depth++;\n      }\n      if (parent._inactive) {\n        inactive = true;\n      }\n      parent = parent.$parent;\n    }\n    data.routerViewDepth = depth;\n\n    // render previous view if the tree is inactive and kept-alive\n    if (inactive) {\n      return h(cache[name], data, children)\n    }\n\n    var matched = route.matched[depth];\n    // render empty node if no matched route\n    if (!matched) {\n      cache[name] = null;\n      return h()\n    }\n\n    var component = cache[name] = matched.components[name];\n\n    // inject instance registration hooks\n    var hooks = data.hook || (data.hook = {});\n    hooks.init = function (vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.prepatch = function (oldVnode, vnode) {\n      matched.instances[name] = vnode.child;\n    };\n    hooks.destroy = function (vnode) {\n      if (matched.instances[name] === vnode.child) {\n        matched.instances[name] = undefined;\n      }\n    };\n\n    // resolve props\n    data.props = resolveProps(route, matched.props && matched.props[name]);\n\n    return h(component, data, children)\n  }\n};\n\nfunction resolveProps (route, config) {\n  switch (typeof config) {\n    case 'undefined':\n      return\n    case 'object':\n      return config\n    case 'function':\n      return config(route)\n    case 'boolean':\n      return config ? route.params : undefined\n    default:\n      warn(false, (\"props in \\\"\" + (route.path) + \"\\\" is a \" + (typeof config) + \", expecting an object, function or boolean.\"));\n  }\n}\n\n/*  */\n\nvar encodeReserveRE = /[!'()*]/g;\nvar encodeReserveReplacer = function (c) { return '%' + c.charCodeAt(0).toString(16); };\nvar commaRE = /%2C/g;\n\n// fixed encodeURIComponent which is more comformant to RFC3986:\n// - escapes [!'()*]\n// - preserve commas\nvar encode = function (str) { return encodeURIComponent(str)\n  .replace(encodeReserveRE, encodeReserveReplacer)\n  .replace(commaRE, ','); };\n\nvar decode = decodeURIComponent;\n\nfunction resolveQuery (\n  query,\n  extraQuery\n) {\n  if ( extraQuery === void 0 ) extraQuery = {};\n\n  if (query) {\n    var parsedQuery;\n    try {\n      parsedQuery = parseQuery(query);\n    } catch (e) {\n      process.env.NODE_ENV !== 'production' && warn(false, e.message);\n      parsedQuery = {};\n    }\n    for (var key in extraQuery) {\n      parsedQuery[key] = extraQuery[key];\n    }\n    return parsedQuery\n  } else {\n    return extraQuery\n  }\n}\n\nfunction parseQuery (query) {\n  var res = {};\n\n  query = query.trim().replace(/^(\\?|#|&)/, '');\n\n  if (!query) {\n    return res\n  }\n\n  query.split('&').forEach(function (param) {\n    var parts = param.replace(/\\+/g, ' ').split('=');\n    var key = decode(parts.shift());\n    var val = parts.length > 0\n      ? decode(parts.join('='))\n      : null;\n\n    if (res[key] === undefined) {\n      res[key] = val;\n    } else if (Array.isArray(res[key])) {\n      res[key].push(val);\n    } else {\n      res[key] = [res[key], val];\n    }\n  });\n\n  return res\n}\n\nfunction stringifyQuery (obj) {\n  var res = obj ? Object.keys(obj).map(function (key) {\n    var val = obj[key];\n\n    if (val === undefined) {\n      return ''\n    }\n\n    if (val === null) {\n      return encode(key)\n    }\n\n    if (Array.isArray(val)) {\n      var result = [];\n      val.slice().forEach(function (val2) {\n        if (val2 === undefined) {\n          return\n        }\n        if (val2 === null) {\n          result.push(encode(key));\n        } else {\n          result.push(encode(key) + '=' + encode(val2));\n        }\n      });\n      return result.join('&')\n    }\n\n    return encode(key) + '=' + encode(val)\n  }).filter(function (x) { return x.length > 0; }).join('&') : null;\n  return res ? (\"?\" + res) : ''\n}\n\n/*  */\n\nvar trailingSlashRE = /\\/?$/;\n\nfunction createRoute (\n  record,\n  location,\n  redirectedFrom\n) {\n  var route = {\n    name: location.name || (record && record.name),\n    meta: (record && record.meta) || {},\n    path: location.path || '/',\n    hash: location.hash || '',\n    query: location.query || {},\n    params: location.params || {},\n    fullPath: getFullPath(location),\n    matched: record ? formatMatch(record) : []\n  };\n  if (redirectedFrom) {\n    route.redirectedFrom = getFullPath(redirectedFrom);\n  }\n  return Object.freeze(route)\n}\n\n// the starting route that represents the initial state\nvar START = createRoute(null, {\n  path: '/'\n});\n\nfunction formatMatch (record) {\n  var res = [];\n  while (record) {\n    res.unshift(record);\n    record = record.parent;\n  }\n  return res\n}\n\nfunction getFullPath (ref) {\n  var path = ref.path;\n  var query = ref.query; if ( query === void 0 ) query = {};\n  var hash = ref.hash; if ( hash === void 0 ) hash = '';\n\n  return (path || '/') + stringifyQuery(query) + hash\n}\n\nfunction isSameRoute (a, b) {\n  if (b === START) {\n    return a === b\n  } else if (!b) {\n    return false\n  } else if (a.path && b.path) {\n    return (\n      a.path.replace(trailingSlashRE, '') === b.path.replace(trailingSlashRE, '') &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query)\n    )\n  } else if (a.name && b.name) {\n    return (\n      a.name === b.name &&\n      a.hash === b.hash &&\n      isObjectEqual(a.query, b.query) &&\n      isObjectEqual(a.params, b.params)\n    )\n  } else {\n    return false\n  }\n}\n\nfunction isObjectEqual (a, b) {\n  if ( a === void 0 ) a = {};\n  if ( b === void 0 ) b = {};\n\n  var aKeys = Object.keys(a);\n  var bKeys = Object.keys(b);\n  if (aKeys.length !== bKeys.length) {\n    return false\n  }\n  return aKeys.every(function (key) { return String(a[key]) === String(b[key]); })\n}\n\nfunction isIncludedRoute (current, target) {\n  return (\n    current.path.replace(trailingSlashRE, '/').indexOf(\n      target.path.replace(trailingSlashRE, '/')\n    ) === 0 &&\n    (!target.hash || current.hash === target.hash) &&\n    queryIncludes(current.query, target.query)\n  )\n}\n\nfunction queryIncludes (current, target) {\n  for (var key in target) {\n    if (!(key in current)) {\n      return false\n    }\n  }\n  return true\n}\n\n/*  */\n\n// work around weird flow bug\nvar toTypes = [String, Object];\nvar eventTypes = [String, Array];\n\nvar Link = {\n  name: 'router-link',\n  props: {\n    to: {\n      type: toTypes,\n      required: true\n    },\n    tag: {\n      type: String,\n      default: 'a'\n    },\n    exact: Boolean,\n    append: Boolean,\n    replace: Boolean,\n    activeClass: String,\n    event: {\n      type: eventTypes,\n      default: 'click'\n    }\n  },\n  render: function render (h) {\n    var this$1 = this;\n\n    var router = this.$router;\n    var current = this.$route;\n    var ref = router.resolve(this.to, current, this.append);\n    var location = ref.location;\n    var route = ref.route;\n    var href = ref.href;\n    var classes = {};\n    var activeClass = this.activeClass || router.options.linkActiveClass || 'router-link-active';\n    var compareTarget = location.path ? createRoute(null, location) : route;\n    classes[activeClass] = this.exact\n      ? isSameRoute(current, compareTarget)\n      : isIncludedRoute(current, compareTarget);\n\n    var handler = function (e) {\n      if (guardEvent(e)) {\n        if (this$1.replace) {\n          router.replace(location);\n        } else {\n          router.push(location);\n        }\n      }\n    };\n\n    var on = { click: guardEvent };\n    if (Array.isArray(this.event)) {\n      this.event.forEach(function (e) { on[e] = handler; });\n    } else {\n      on[this.event] = handler;\n    }\n\n    var data = {\n      class: classes\n    };\n\n    if (this.tag === 'a') {\n      data.on = on;\n      data.attrs = { href: href };\n    } else {\n      // find the first <a> child and apply listener and href\n      var a = findAnchor(this.$slots.default);\n      if (a) {\n        // in case the <a> is a static node\n        a.isStatic = false;\n        var extend = _Vue.util.extend;\n        var aData = a.data = extend({}, a.data);\n        aData.on = on;\n        var aAttrs = a.data.attrs = extend({}, a.data.attrs);\n        aAttrs.href = href;\n      } else {\n        // doesn't have <a> child, apply listener to self\n        data.on = on;\n      }\n    }\n\n    return h(this.tag, data, this.$slots.default)\n  }\n};\n\nfunction guardEvent (e) {\n  // don't redirect with control keys\n  if (e.metaKey || e.ctrlKey || e.shiftKey) { return }\n  // don't redirect when preventDefault called\n  if (e.defaultPrevented) { return }\n  // don't redirect on right click\n  if (e.button !== undefined && e.button !== 0) { return }\n  // don't redirect if `target=\"_blank\"`\n  if (e.target && e.target.getAttribute) {\n    var target = e.target.getAttribute('target');\n    if (/\\b_blank\\b/i.test(target)) { return }\n  }\n  // this may be a Weex event which doesn't have this method\n  if (e.preventDefault) {\n    e.preventDefault();\n  }\n  return true\n}\n\nfunction findAnchor (children) {\n  if (children) {\n    var child;\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      if (child.tag === 'a') {\n        return child\n      }\n      if (child.children && (child = findAnchor(child.children))) {\n        return child\n      }\n    }\n  }\n}\n\nvar _Vue;\n\nfunction install (Vue) {\n  if (install.installed) { return }\n  install.installed = true;\n\n  _Vue = Vue;\n\n  Object.defineProperty(Vue.prototype, '$router', {\n    get: function get () { return this.$root._router }\n  });\n\n  Object.defineProperty(Vue.prototype, '$route', {\n    get: function get () { return this.$root._route }\n  });\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate () {\n      if (this.$options.router) {\n        this._router = this.$options.router;\n        this._router.init(this);\n        Vue.util.defineReactive(this, '_route', this._router.history.current);\n      }\n    }\n  });\n\n  Vue.component('router-view', View);\n  Vue.component('router-link', Link);\n\n  var strats = Vue.config.optionMergeStrategies;\n  // use the same hook merging strategy for route hooks\n  strats.beforeRouteEnter = strats.beforeRouteLeave = strats.created;\n}\n\n/*  */\n\nvar inBrowser = typeof window !== 'undefined';\n\n/*  */\n\nfunction resolvePath (\n  relative,\n  base,\n  append\n) {\n  if (relative.charAt(0) === '/') {\n    return relative\n  }\n\n  if (relative.charAt(0) === '?' || relative.charAt(0) === '#') {\n    return base + relative\n  }\n\n  var stack = base.split('/');\n\n  // remove trailing segment if:\n  // - not appending\n  // - appending to trailing slash (last segment is empty)\n  if (!append || !stack[stack.length - 1]) {\n    stack.pop();\n  }\n\n  // resolve relative path\n  var segments = relative.replace(/^\\//, '').split('/');\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    if (segment === '.') {\n      continue\n    } else if (segment === '..') {\n      stack.pop();\n    } else {\n      stack.push(segment);\n    }\n  }\n\n  // ensure leading slash\n  if (stack[0] !== '') {\n    stack.unshift('');\n  }\n\n  return stack.join('/')\n}\n\nfunction parsePath (path) {\n  var hash = '';\n  var query = '';\n\n  var hashIndex = path.indexOf('#');\n  if (hashIndex >= 0) {\n    hash = path.slice(hashIndex);\n    path = path.slice(0, hashIndex);\n  }\n\n  var queryIndex = path.indexOf('?');\n  if (queryIndex >= 0) {\n    query = path.slice(queryIndex + 1);\n    path = path.slice(0, queryIndex);\n  }\n\n  return {\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction cleanPath (path) {\n  return path.replace(/\\/\\//g, '/')\n}\n\n/*  */\n\nfunction createRouteMap (\n  routes,\n  oldPathMap,\n  oldNameMap\n) {\n  var pathMap = oldPathMap || Object.create(null);\n  var nameMap = oldNameMap || Object.create(null);\n\n  routes.forEach(function (route) {\n    addRouteRecord(pathMap, nameMap, route);\n  });\n\n  return {\n    pathMap: pathMap,\n    nameMap: nameMap\n  }\n}\n\nfunction addRouteRecord (\n  pathMap,\n  nameMap,\n  route,\n  parent,\n  matchAs\n) {\n  var path = route.path;\n  var name = route.name;\n  if (process.env.NODE_ENV !== 'production') {\n    assert(path != null, \"\\\"path\\\" is required in a route configuration.\");\n    assert(\n      typeof route.component !== 'string',\n      \"route config \\\"component\\\" for path: \" + (String(path || name)) + \" cannot be a \" +\n      \"string id. Use an actual component instead.\"\n    );\n  }\n\n  var record = {\n    path: normalizePath(path, parent),\n    components: route.components || { default: route.component },\n    instances: {},\n    name: name,\n    parent: parent,\n    matchAs: matchAs,\n    redirect: route.redirect,\n    beforeEnter: route.beforeEnter,\n    meta: route.meta || {},\n    props: route.props == null\n      ? {}\n      : route.components\n        ? route.props\n        : { default: route.props }\n  };\n\n  if (route.children) {\n    // Warn if route is named and has a default child route.\n    // If users navigate to this route by name, the default child will\n    // not be rendered (GH Issue #629)\n    if (process.env.NODE_ENV !== 'production') {\n      if (route.name && route.children.some(function (child) { return /^\\/?$/.test(child.path); })) {\n        warn(\n          false,\n          \"Named Route '\" + (route.name) + \"' has a default child route. \" +\n          \"When navigating to this named route (:to=\\\"{name: '\" + (route.name) + \"'\\\"), \" +\n          \"the default child route will not be rendered. Remove the name from \" +\n          \"this route and use the name of the default child route for named \" +\n          \"links instead.\"\n        );\n      }\n    }\n    route.children.forEach(function (child) {\n      var childMatchAs = matchAs\n        ? cleanPath((matchAs + \"/\" + (child.path)))\n        : undefined;\n      addRouteRecord(pathMap, nameMap, child, record, childMatchAs);\n    });\n  }\n\n  if (route.alias !== undefined) {\n    if (Array.isArray(route.alias)) {\n      route.alias.forEach(function (alias) {\n        var aliasRoute = {\n          path: alias,\n          children: route.children\n        };\n        addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n      });\n    } else {\n      var aliasRoute = {\n        path: route.alias,\n        children: route.children\n      };\n      addRouteRecord(pathMap, nameMap, aliasRoute, parent, record.path);\n    }\n  }\n\n  if (!pathMap[record.path]) {\n    pathMap[record.path] = record;\n  }\n\n  if (name) {\n    if (!nameMap[name]) {\n      nameMap[name] = record;\n    } else if (process.env.NODE_ENV !== 'production' && !matchAs) {\n      warn(\n        false,\n        \"Duplicate named routes definition: \" +\n        \"{ name: \\\"\" + name + \"\\\", path: \\\"\" + (record.path) + \"\\\" }\"\n      );\n    }\n  }\n}\n\nfunction normalizePath (path, parent) {\n  path = path.replace(/\\/$/, '');\n  if (path[0] === '/') { return path }\n  if (parent == null) { return path }\n  return cleanPath(((parent.path) + \"/\" + path))\n}\n\nvar index$1 = Array.isArray || function (arr) {\n  return Object.prototype.toString.call(arr) == '[object Array]';\n};\n\nvar isarray = index$1;\n\n/**\n * Expose `pathToRegexp`.\n */\nvar index = pathToRegexp;\nvar parse_1 = parse;\nvar compile_1 = compile;\nvar tokensToFunction_1 = tokensToFunction;\nvar tokensToRegExp_1 = tokensToRegExp;\n\n/**\n * The main path matching regexp utility.\n *\n * @type {RegExp}\n */\nvar PATH_REGEXP = new RegExp([\n  // Match escaped characters that would otherwise appear in future matches.\n  // This allows the user to escape special characters that won't transform.\n  '(\\\\\\\\.)',\n  // Match Express-style parameters and un-named parameters with a prefix\n  // and optional suffixes. Matches appear as:\n  //\n  // \"/:test(\\\\d+)?\" => [\"/\", \"test\", \"\\d+\", undefined, \"?\", undefined]\n  // \"/route(\\\\d+)\"  => [undefined, undefined, undefined, \"\\d+\", undefined, undefined]\n  // \"/*\"            => [\"/\", undefined, undefined, undefined, undefined, \"*\"]\n  '([\\\\/.])?(?:(?:\\\\:(\\\\w+)(?:\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))?|\\\\(((?:\\\\\\\\.|[^\\\\\\\\()])+)\\\\))([+*?])?|(\\\\*))'\n].join('|'), 'g');\n\n/**\n * Parse a string for the raw tokens.\n *\n * @param  {string}  str\n * @param  {Object=} options\n * @return {!Array}\n */\nfunction parse (str, options) {\n  var tokens = [];\n  var key = 0;\n  var index = 0;\n  var path = '';\n  var defaultDelimiter = options && options.delimiter || '/';\n  var res;\n\n  while ((res = PATH_REGEXP.exec(str)) != null) {\n    var m = res[0];\n    var escaped = res[1];\n    var offset = res.index;\n    path += str.slice(index, offset);\n    index = offset + m.length;\n\n    // Ignore already escaped sequences.\n    if (escaped) {\n      path += escaped[1];\n      continue\n    }\n\n    var next = str[index];\n    var prefix = res[2];\n    var name = res[3];\n    var capture = res[4];\n    var group = res[5];\n    var modifier = res[6];\n    var asterisk = res[7];\n\n    // Push the current path onto the tokens.\n    if (path) {\n      tokens.push(path);\n      path = '';\n    }\n\n    var partial = prefix != null && next != null && next !== prefix;\n    var repeat = modifier === '+' || modifier === '*';\n    var optional = modifier === '?' || modifier === '*';\n    var delimiter = res[2] || defaultDelimiter;\n    var pattern = capture || group;\n\n    tokens.push({\n      name: name || key++,\n      prefix: prefix || '',\n      delimiter: delimiter,\n      optional: optional,\n      repeat: repeat,\n      partial: partial,\n      asterisk: !!asterisk,\n      pattern: pattern ? escapeGroup(pattern) : (asterisk ? '.*' : '[^' + escapeString(delimiter) + ']+?')\n    });\n  }\n\n  // Match any characters still remaining.\n  if (index < str.length) {\n    path += str.substr(index);\n  }\n\n  // If the path exists, push it onto the end.\n  if (path) {\n    tokens.push(path);\n  }\n\n  return tokens\n}\n\n/**\n * Compile a string to a template function for the path.\n *\n * @param  {string}             str\n * @param  {Object=}            options\n * @return {!function(Object=, Object=)}\n */\nfunction compile (str, options) {\n  return tokensToFunction(parse(str, options))\n}\n\n/**\n * Prettier encoding of URI path segments.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeURIComponentPretty (str) {\n  return encodeURI(str).replace(/[\\/?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Encode the asterisk parameter. Similar to `pretty`, but allows slashes.\n *\n * @param  {string}\n * @return {string}\n */\nfunction encodeAsterisk (str) {\n  return encodeURI(str).replace(/[?#]/g, function (c) {\n    return '%' + c.charCodeAt(0).toString(16).toUpperCase()\n  })\n}\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nfunction tokensToFunction (tokens) {\n  // Compile all the tokens into regexps.\n  var matches = new Array(tokens.length);\n\n  // Compile all the patterns before compilation.\n  for (var i = 0; i < tokens.length; i++) {\n    if (typeof tokens[i] === 'object') {\n      matches[i] = new RegExp('^(?:' + tokens[i].pattern + ')$');\n    }\n  }\n\n  return function (obj, opts) {\n    var path = '';\n    var data = obj || {};\n    var options = opts || {};\n    var encode = options.pretty ? encodeURIComponentPretty : encodeURIComponent;\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n\n      if (typeof token === 'string') {\n        path += token;\n\n        continue\n      }\n\n      var value = data[token.name];\n      var segment;\n\n      if (value == null) {\n        if (token.optional) {\n          // Prepend partial segment prefixes.\n          if (token.partial) {\n            path += token.prefix;\n          }\n\n          continue\n        } else {\n          throw new TypeError('Expected \"' + token.name + '\" to be defined')\n        }\n      }\n\n      if (isarray(value)) {\n        if (!token.repeat) {\n          throw new TypeError('Expected \"' + token.name + '\" to not repeat, but received `' + JSON.stringify(value) + '`')\n        }\n\n        if (value.length === 0) {\n          if (token.optional) {\n            continue\n          } else {\n            throw new TypeError('Expected \"' + token.name + '\" to not be empty')\n          }\n        }\n\n        for (var j = 0; j < value.length; j++) {\n          segment = encode(value[j]);\n\n          if (!matches[i].test(segment)) {\n            throw new TypeError('Expected all \"' + token.name + '\" to match \"' + token.pattern + '\", but received `' + JSON.stringify(segment) + '`')\n          }\n\n          path += (j === 0 ? token.prefix : token.delimiter) + segment;\n        }\n\n        continue\n      }\n\n      segment = token.asterisk ? encodeAsterisk(value) : encode(value);\n\n      if (!matches[i].test(segment)) {\n        throw new TypeError('Expected \"' + token.name + '\" to match \"' + token.pattern + '\", but received \"' + segment + '\"')\n      }\n\n      path += token.prefix + segment;\n    }\n\n    return path\n  }\n}\n\n/**\n * Escape a regular expression string.\n *\n * @param  {string} str\n * @return {string}\n */\nfunction escapeString (str) {\n  return str.replace(/([.+*?=^!:${}()[\\]|\\/\\\\])/g, '\\\\$1')\n}\n\n/**\n * Escape the capturing group by escaping special characters and meaning.\n *\n * @param  {string} group\n * @return {string}\n */\nfunction escapeGroup (group) {\n  return group.replace(/([=!:$\\/()])/g, '\\\\$1')\n}\n\n/**\n * Attach the keys as a property of the regexp.\n *\n * @param  {!RegExp} re\n * @param  {Array}   keys\n * @return {!RegExp}\n */\nfunction attachKeys (re, keys) {\n  re.keys = keys;\n  return re\n}\n\n/**\n * Get the flags for a regexp from the options.\n *\n * @param  {Object} options\n * @return {string}\n */\nfunction flags (options) {\n  return options.sensitive ? '' : 'i'\n}\n\n/**\n * Pull out keys from a regexp.\n *\n * @param  {!RegExp} path\n * @param  {!Array}  keys\n * @return {!RegExp}\n */\nfunction regexpToRegexp (path, keys) {\n  // Use a negative lookahead to match only capturing groups.\n  var groups = path.source.match(/\\((?!\\?)/g);\n\n  if (groups) {\n    for (var i = 0; i < groups.length; i++) {\n      keys.push({\n        name: i,\n        prefix: null,\n        delimiter: null,\n        optional: false,\n        repeat: false,\n        partial: false,\n        asterisk: false,\n        pattern: null\n      });\n    }\n  }\n\n  return attachKeys(path, keys)\n}\n\n/**\n * Transform an array into a regexp.\n *\n * @param  {!Array}  path\n * @param  {Array}   keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction arrayToRegexp (path, keys, options) {\n  var parts = [];\n\n  for (var i = 0; i < path.length; i++) {\n    parts.push(pathToRegexp(path[i], keys, options).source);\n  }\n\n  var regexp = new RegExp('(?:' + parts.join('|') + ')', flags(options));\n\n  return attachKeys(regexp, keys)\n}\n\n/**\n * Create a path regexp from string input.\n *\n * @param  {string}  path\n * @param  {!Array}  keys\n * @param  {!Object} options\n * @return {!RegExp}\n */\nfunction stringToRegexp (path, keys, options) {\n  return tokensToRegExp(parse(path, options), keys, options)\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n *\n * @param  {!Array}          tokens\n * @param  {(Array|Object)=} keys\n * @param  {Object=}         options\n * @return {!RegExp}\n */\nfunction tokensToRegExp (tokens, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  var strict = options.strict;\n  var end = options.end !== false;\n  var route = '';\n\n  // Iterate over the tokens and create our regexp string.\n  for (var i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (typeof token === 'string') {\n      route += escapeString(token);\n    } else {\n      var prefix = escapeString(token.prefix);\n      var capture = '(?:' + token.pattern + ')';\n\n      keys.push(token);\n\n      if (token.repeat) {\n        capture += '(?:' + prefix + capture + ')*';\n      }\n\n      if (token.optional) {\n        if (!token.partial) {\n          capture = '(?:' + prefix + '(' + capture + '))?';\n        } else {\n          capture = prefix + '(' + capture + ')?';\n        }\n      } else {\n        capture = prefix + '(' + capture + ')';\n      }\n\n      route += capture;\n    }\n  }\n\n  var delimiter = escapeString(options.delimiter || '/');\n  var endsWithDelimiter = route.slice(-delimiter.length) === delimiter;\n\n  // In non-strict mode we allow a slash at the end of match. If the path to\n  // match already ends with a slash, we remove it for consistency. The slash\n  // is valid at the end of a path match, not in the middle. This is important\n  // in non-ending mode, where \"/test/\" shouldn't match \"/test//route\".\n  if (!strict) {\n    route = (endsWithDelimiter ? route.slice(0, -delimiter.length) : route) + '(?:' + delimiter + '(?=$))?';\n  }\n\n  if (end) {\n    route += '$';\n  } else {\n    // In non-ending mode, we need the capturing groups to match as much as\n    // possible by using a positive lookahead to the end or next path segment.\n    route += strict && endsWithDelimiter ? '' : '(?=' + delimiter + '|$)';\n  }\n\n  return attachKeys(new RegExp('^' + route, flags(options)), keys)\n}\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n *\n * @param  {(string|RegExp|Array)} path\n * @param  {(Array|Object)=}       keys\n * @param  {Object=}               options\n * @return {!RegExp}\n */\nfunction pathToRegexp (path, keys, options) {\n  if (!isarray(keys)) {\n    options = /** @type {!Object} */ (keys || options);\n    keys = [];\n  }\n\n  options = options || {};\n\n  if (path instanceof RegExp) {\n    return regexpToRegexp(path, /** @type {!Array} */ (keys))\n  }\n\n  if (isarray(path)) {\n    return arrayToRegexp(/** @type {!Array} */ (path), /** @type {!Array} */ (keys), options)\n  }\n\n  return stringToRegexp(/** @type {string} */ (path), /** @type {!Array} */ (keys), options)\n}\n\nindex.parse = parse_1;\nindex.compile = compile_1;\nindex.tokensToFunction = tokensToFunction_1;\nindex.tokensToRegExp = tokensToRegExp_1;\n\n/*  */\n\nvar regexpCache = Object.create(null);\n\nfunction getRouteRegex (path) {\n  var hit = regexpCache[path];\n  var keys, regexp;\n\n  if (hit) {\n    keys = hit.keys;\n    regexp = hit.regexp;\n  } else {\n    keys = [];\n    regexp = index(path, keys);\n    regexpCache[path] = { keys: keys, regexp: regexp };\n  }\n\n  return { keys: keys, regexp: regexp }\n}\n\nvar regexpCompileCache = Object.create(null);\n\nfunction fillParams (\n  path,\n  params,\n  routeMsg\n) {\n  try {\n    var filler =\n      regexpCompileCache[path] ||\n      (regexpCompileCache[path] = index.compile(path));\n    return filler(params || {}, { pretty: true })\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn(false, (\"missing param for \" + routeMsg + \": \" + (e.message)));\n    }\n    return ''\n  }\n}\n\n/*  */\n\nfunction normalizeLocation (\n  raw,\n  current,\n  append\n) {\n  var next = typeof raw === 'string' ? { path: raw } : raw;\n  // named target\n  if (next.name || next._normalized) {\n    return next\n  }\n\n  // relative params\n  if (!next.path && next.params && current) {\n    next = assign({}, next);\n    next._normalized = true;\n    var params = assign(assign({}, current.params), next.params);\n    if (current.name) {\n      next.name = current.name;\n      next.params = params;\n    } else if (current.matched) {\n      var rawPath = current.matched[current.matched.length - 1].path;\n      next.path = fillParams(rawPath, params, (\"path \" + (current.path)));\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn(false, \"relative params navigation requires a current route.\");\n    }\n    return next\n  }\n\n  var parsedPath = parsePath(next.path || '');\n  var basePath = (current && current.path) || '/';\n  var path = parsedPath.path\n    ? resolvePath(parsedPath.path, basePath, append || next.append)\n    : (current && current.path) || '/';\n  var query = resolveQuery(parsedPath.query, next.query);\n  var hash = next.hash || parsedPath.hash;\n  if (hash && hash.charAt(0) !== '#') {\n    hash = \"#\" + hash;\n  }\n\n  return {\n    _normalized: true,\n    path: path,\n    query: query,\n    hash: hash\n  }\n}\n\nfunction assign (a, b) {\n  for (var key in b) {\n    a[key] = b[key];\n  }\n  return a\n}\n\n/*  */\n\nfunction createMatcher (routes) {\n  var ref = createRouteMap(routes);\n  var pathMap = ref.pathMap;\n  var nameMap = ref.nameMap;\n\n  function addRoutes (routes) {\n    createRouteMap(routes, pathMap, nameMap);\n  }\n\n  function match (\n    raw,\n    currentRoute,\n    redirectedFrom\n  ) {\n    var location = normalizeLocation(raw, currentRoute);\n    var name = location.name;\n\n    if (name) {\n      var record = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        warn(record, (\"Route with name '\" + name + \"' does not exist\"));\n      }\n      var paramNames = getRouteRegex(record.path).keys\n        .filter(function (key) { return !key.optional; })\n        .map(function (key) { return key.name; });\n\n      if (typeof location.params !== 'object') {\n        location.params = {};\n      }\n\n      if (currentRoute && typeof currentRoute.params === 'object') {\n        for (var key in currentRoute.params) {\n          if (!(key in location.params) && paramNames.indexOf(key) > -1) {\n            location.params[key] = currentRoute.params[key];\n          }\n        }\n      }\n\n      if (record) {\n        location.path = fillParams(record.path, location.params, (\"named route \\\"\" + name + \"\\\"\"));\n        return _createRoute(record, location, redirectedFrom)\n      }\n    } else if (location.path) {\n      location.params = {};\n      for (var path in pathMap) {\n        if (matchRoute(path, location.params, location.path)) {\n          return _createRoute(pathMap[path], location, redirectedFrom)\n        }\n      }\n    }\n    // no match\n    return _createRoute(null, location)\n  }\n\n  function redirect (\n    record,\n    location\n  ) {\n    var originalRedirect = record.redirect;\n    var redirect = typeof originalRedirect === 'function'\n        ? originalRedirect(createRoute(record, location))\n        : originalRedirect;\n\n    if (typeof redirect === 'string') {\n      redirect = { path: redirect };\n    }\n\n    if (!redirect || typeof redirect !== 'object') {\n      process.env.NODE_ENV !== 'production' && warn(\n        false, (\"invalid redirect option: \" + (JSON.stringify(redirect)))\n      );\n      return _createRoute(null, location)\n    }\n\n    var re = redirect;\n    var name = re.name;\n    var path = re.path;\n    var query = location.query;\n    var hash = location.hash;\n    var params = location.params;\n    query = re.hasOwnProperty('query') ? re.query : query;\n    hash = re.hasOwnProperty('hash') ? re.hash : hash;\n    params = re.hasOwnProperty('params') ? re.params : params;\n\n    if (name) {\n      // resolved named direct\n      var targetRecord = nameMap[name];\n      if (process.env.NODE_ENV !== 'production') {\n        assert(targetRecord, (\"redirect failed: named route \\\"\" + name + \"\\\" not found.\"));\n      }\n      return match({\n        _normalized: true,\n        name: name,\n        query: query,\n        hash: hash,\n        params: params\n      }, undefined, location)\n    } else if (path) {\n      // 1. resolve relative redirect\n      var rawPath = resolveRecordPath(path, record);\n      // 2. resolve params\n      var resolvedPath = fillParams(rawPath, params, (\"redirect route with path \\\"\" + rawPath + \"\\\"\"));\n      // 3. rematch with existing query and hash\n      return match({\n        _normalized: true,\n        path: resolvedPath,\n        query: query,\n        hash: hash\n      }, undefined, location)\n    } else {\n      warn(false, (\"invalid redirect option: \" + (JSON.stringify(redirect))));\n      return _createRoute(null, location)\n    }\n  }\n\n  function alias (\n    record,\n    location,\n    matchAs\n  ) {\n    var aliasedPath = fillParams(matchAs, location.params, (\"aliased route with path \\\"\" + matchAs + \"\\\"\"));\n    var aliasedMatch = match({\n      _normalized: true,\n      path: aliasedPath\n    });\n    if (aliasedMatch) {\n      var matched = aliasedMatch.matched;\n      var aliasedRecord = matched[matched.length - 1];\n      location.params = aliasedMatch.params;\n      return _createRoute(aliasedRecord, location)\n    }\n    return _createRoute(null, location)\n  }\n\n  function _createRoute (\n    record,\n    location,\n    redirectedFrom\n  ) {\n    if (record && record.redirect) {\n      return redirect(record, redirectedFrom || location)\n    }\n    if (record && record.matchAs) {\n      return alias(record, location, record.matchAs)\n    }\n    return createRoute(record, location, redirectedFrom)\n  }\n\n  return {\n    match: match,\n    addRoutes: addRoutes\n  }\n}\n\nfunction matchRoute (\n  path,\n  params,\n  pathname\n) {\n  var ref = getRouteRegex(path);\n  var regexp = ref.regexp;\n  var keys = ref.keys;\n  var m = pathname.match(regexp);\n\n  if (!m) {\n    return false\n  } else if (!params) {\n    return true\n  }\n\n  for (var i = 1, len = m.length; i < len; ++i) {\n    var key = keys[i - 1];\n    var val = typeof m[i] === 'string' ? decodeURIComponent(m[i]) : m[i];\n    if (key) { params[key.name] = val; }\n  }\n\n  return true\n}\n\nfunction resolveRecordPath (path, record) {\n  return resolvePath(path, record.parent ? record.parent.path : '/', true)\n}\n\n/*  */\n\n\nvar positionStore = Object.create(null);\n\nfunction setupScroll () {\n  window.addEventListener('popstate', function (e) {\n    saveScrollPosition();\n    if (e.state && e.state.key) {\n      setStateKey(e.state.key);\n    }\n  });\n}\n\nfunction handleScroll (\n  router,\n  to,\n  from,\n  isPop\n) {\n  if (!router.app) {\n    return\n  }\n\n  var behavior = router.options.scrollBehavior;\n  if (!behavior) {\n    return\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    assert(typeof behavior === 'function', \"scrollBehavior must be a function\");\n  }\n\n  // wait until re-render finishes before scrolling\n  router.app.$nextTick(function () {\n    var position = getScrollPosition();\n    var shouldScroll = behavior(to, from, isPop ? position : null);\n    if (!shouldScroll) {\n      return\n    }\n    var isObject = typeof shouldScroll === 'object';\n    if (isObject && typeof shouldScroll.selector === 'string') {\n      var el = document.querySelector(shouldScroll.selector);\n      if (el) {\n        position = getElementPosition(el);\n      } else if (isValidPosition(shouldScroll)) {\n        position = normalizePosition(shouldScroll);\n      }\n    } else if (isObject && isValidPosition(shouldScroll)) {\n      position = normalizePosition(shouldScroll);\n    }\n\n    if (position) {\n      window.scrollTo(position.x, position.y);\n    }\n  });\n}\n\nfunction saveScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    positionStore[key] = {\n      x: window.pageXOffset,\n      y: window.pageYOffset\n    };\n  }\n}\n\nfunction getScrollPosition () {\n  var key = getStateKey();\n  if (key) {\n    return positionStore[key]\n  }\n}\n\nfunction getElementPosition (el) {\n  var docEl = document.documentElement;\n  var docRect = docEl.getBoundingClientRect();\n  var elRect = el.getBoundingClientRect();\n  return {\n    x: elRect.left - docRect.left,\n    y: elRect.top - docRect.top\n  }\n}\n\nfunction isValidPosition (obj) {\n  return isNumber(obj.x) || isNumber(obj.y)\n}\n\nfunction normalizePosition (obj) {\n  return {\n    x: isNumber(obj.x) ? obj.x : window.pageXOffset,\n    y: isNumber(obj.y) ? obj.y : window.pageYOffset\n  }\n}\n\nfunction isNumber (v) {\n  return typeof v === 'number'\n}\n\n/*  */\n\nvar supportsPushState = inBrowser && (function () {\n  var ua = window.navigator.userAgent;\n\n  if (\n    (ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) &&\n    ua.indexOf('Mobile Safari') !== -1 &&\n    ua.indexOf('Chrome') === -1 &&\n    ua.indexOf('Windows Phone') === -1\n  ) {\n    return false\n  }\n\n  return window.history && 'pushState' in window.history\n})();\n\n// use User Timing api (if present) for more accurate key precision\nvar Time = inBrowser && window.performance && window.performance.now\n  ? window.performance\n  : Date;\n\nvar _key = genKey();\n\nfunction genKey () {\n  return Time.now().toFixed(3)\n}\n\nfunction getStateKey () {\n  return _key\n}\n\nfunction setStateKey (key) {\n  _key = key;\n}\n\nfunction pushState (url, replace) {\n  saveScrollPosition();\n  // try...catch the pushState call to get around Safari\n  // DOM Exception 18 where it limits to 100 pushState calls\n  var history = window.history;\n  try {\n    if (replace) {\n      history.replaceState({ key: _key }, '', url);\n    } else {\n      _key = genKey();\n      history.pushState({ key: _key }, '', url);\n    }\n  } catch (e) {\n    window.location[replace ? 'replace' : 'assign'](url);\n  }\n}\n\nfunction replaceState (url) {\n  pushState(url, true);\n}\n\n/*  */\n\nfunction runQueue (queue, fn, cb) {\n  var step = function (index) {\n    if (index >= queue.length) {\n      cb();\n    } else {\n      if (queue[index]) {\n        fn(queue[index], function () {\n          step(index + 1);\n        });\n      } else {\n        step(index + 1);\n      }\n    }\n  };\n  step(0);\n}\n\n/*  */\n\n\nvar History = function History (router, base) {\n  this.router = router;\n  this.base = normalizeBase(base);\n  // start with a route object that stands for \"nowhere\"\n  this.current = START;\n  this.pending = null;\n  this.ready = false;\n  this.readyCbs = [];\n};\n\nHistory.prototype.listen = function listen (cb) {\n  this.cb = cb;\n};\n\nHistory.prototype.onReady = function onReady (cb) {\n  if (this.ready) {\n    cb();\n  } else {\n    this.readyCbs.push(cb);\n  }\n};\n\nHistory.prototype.transitionTo = function transitionTo (location, onComplete, onAbort) {\n    var this$1 = this;\n\n  var route = this.router.match(location, this.current);\n  this.confirmTransition(route, function () {\n    this$1.updateRoute(route);\n    onComplete && onComplete(route);\n    this$1.ensureURL();\n\n    // fire ready cbs once\n    if (!this$1.ready) {\n      this$1.ready = true;\n      this$1.readyCbs.forEach(function (cb) {\n        cb(route);\n      });\n    }\n  }, onAbort);\n};\n\nHistory.prototype.confirmTransition = function confirmTransition (route, onComplete, onAbort) {\n    var this$1 = this;\n\n  var current = this.current;\n  var abort = function () { onAbort && onAbort(); };\n  if (\n    isSameRoute(route, current) &&\n    // in the case the route map has been dynamically appended to\n    route.matched.length === current.matched.length\n  ) {\n    this.ensureURL();\n    return abort()\n  }\n\n  var ref = resolveQueue(this.current.matched, route.matched);\n    var updated = ref.updated;\n    var deactivated = ref.deactivated;\n    var activated = ref.activated;\n\n  var queue = [].concat(\n    // in-component leave guards\n    extractLeaveGuards(deactivated),\n    // global before hooks\n    this.router.beforeHooks,\n    // in-component update hooks\n    extractUpdateHooks(updated),\n    // in-config enter guards\n    activated.map(function (m) { return m.beforeEnter; }),\n    // async components\n    resolveAsyncComponents(activated)\n  );\n\n  this.pending = route;\n  var iterator = function (hook, next) {\n    if (this$1.pending !== route) {\n      return abort()\n    }\n    hook(route, current, function (to) {\n      if (to === false) {\n        // next(false) -> abort navigation, ensure current URL\n        this$1.ensureURL(true);\n        abort();\n      } else if (typeof to === 'string' || typeof to === 'object') {\n        // next('/') or next({ path: '/' }) -> redirect\n        (typeof to === 'object' && to.replace) ? this$1.replace(to) : this$1.push(to);\n        abort();\n      } else {\n        // confirm transition and pass on the value\n        next(to);\n      }\n    });\n  };\n\n  runQueue(queue, iterator, function () {\n    var postEnterCbs = [];\n    var isValid = function () { return this$1.current === route; };\n    var enterGuards = extractEnterGuards(activated, postEnterCbs, isValid);\n    // wait until async components are resolved before\n    // extracting in-component enter guards\n    runQueue(enterGuards, iterator, function () {\n      if (this$1.pending !== route) {\n        return abort()\n      }\n      this$1.pending = null;\n      onComplete(route);\n      if (this$1.router.app) {\n        this$1.router.app.$nextTick(function () {\n          postEnterCbs.forEach(function (cb) { return cb(); });\n        });\n      }\n    });\n  });\n};\n\nHistory.prototype.updateRoute = function updateRoute (route) {\n  var prev = this.current;\n  this.current = route;\n  this.cb && this.cb(route);\n  this.router.afterHooks.forEach(function (hook) {\n    hook && hook(route, prev);\n  });\n};\n\nfunction normalizeBase (base) {\n  if (!base) {\n    if (inBrowser) {\n      // respect <base> tag\n      var baseEl = document.querySelector('base');\n      base = (baseEl && baseEl.getAttribute('href')) || '/';\n    } else {\n      base = '/';\n    }\n  }\n  // make sure there's the starting slash\n  if (base.charAt(0) !== '/') {\n    base = '/' + base;\n  }\n  // remove trailing slash\n  return base.replace(/\\/$/, '')\n}\n\nfunction resolveQueue (\n  current,\n  next\n) {\n  var i;\n  var max = Math.max(current.length, next.length);\n  for (i = 0; i < max; i++) {\n    if (current[i] !== next[i]) {\n      break\n    }\n  }\n  return {\n    updated: next.slice(0, i),\n    activated: next.slice(i),\n    deactivated: current.slice(i)\n  }\n}\n\nfunction extractGuards (\n  records,\n  name,\n  bind,\n  reverse\n) {\n  var guards = flatMapComponents(records, function (def, instance, match, key) {\n    var guard = extractGuard(def, name);\n    if (guard) {\n      return Array.isArray(guard)\n        ? guard.map(function (guard) { return bind(guard, instance, match, key); })\n        : bind(guard, instance, match, key)\n    }\n  });\n  return flatten(reverse ? guards.reverse() : guards)\n}\n\nfunction extractGuard (\n  def,\n  key\n) {\n  if (typeof def !== 'function') {\n    // extend now so that global mixins are applied.\n    def = _Vue.extend(def);\n  }\n  return def.options[key]\n}\n\nfunction extractLeaveGuards (deactivated) {\n  return extractGuards(deactivated, 'beforeRouteLeave', bindGuard, true)\n}\n\nfunction extractUpdateHooks (updated) {\n  return extractGuards(updated, 'beforeRouteUpdate', bindGuard)\n}\n\nfunction bindGuard (guard, instance) {\n  return function boundRouteGuard () {\n    return guard.apply(instance, arguments)\n  }\n}\n\nfunction extractEnterGuards (\n  activated,\n  cbs,\n  isValid\n) {\n  return extractGuards(activated, 'beforeRouteEnter', function (guard, _, match, key) {\n    return bindEnterGuard(guard, match, key, cbs, isValid)\n  })\n}\n\nfunction bindEnterGuard (\n  guard,\n  match,\n  key,\n  cbs,\n  isValid\n) {\n  return function routeEnterGuard (to, from, next) {\n    return guard(to, from, function (cb) {\n      next(cb);\n      if (typeof cb === 'function') {\n        cbs.push(function () {\n          // #750\n          // if a router-view is wrapped with an out-in transition,\n          // the instance may not have been registered at this time.\n          // we will need to poll for registration until current route\n          // is no longer valid.\n          poll(cb, match.instances, key, isValid);\n        });\n      }\n    })\n  }\n}\n\nfunction poll (\n  cb, // somehow flow cannot infer this is a function\n  instances,\n  key,\n  isValid\n) {\n  if (instances[key]) {\n    cb(instances[key]);\n  } else if (isValid()) {\n    setTimeout(function () {\n      poll(cb, instances, key, isValid);\n    }, 16);\n  }\n}\n\nfunction resolveAsyncComponents (matched) {\n  return flatMapComponents(matched, function (def, _, match, key) {\n    // if it's a function and doesn't have Vue options attached,\n    // assume it's an async component resolve function.\n    // we are not using Vue's default async resolving mechanism because\n    // we want to halt the navigation until the incoming component has been\n    // resolved.\n    if (typeof def === 'function' && !def.options) {\n      return function (to, from, next) {\n        var resolve = once(function (resolvedDef) {\n          match.components[key] = resolvedDef;\n          next();\n        });\n\n        var reject = once(function (reason) {\n          warn(false, (\"Failed to resolve async component \" + key + \": \" + reason));\n          next(false);\n        });\n\n        var res = def(resolve, reject);\n        if (res && typeof res.then === 'function') {\n          res.then(resolve, reject);\n        }\n      }\n    }\n  })\n}\n\nfunction flatMapComponents (\n  matched,\n  fn\n) {\n  return flatten(matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) { return fn(\n      m.components[key],\n      m.instances[key],\n      m, key\n    ); })\n  }))\n}\n\nfunction flatten (arr) {\n  return Array.prototype.concat.apply([], arr)\n}\n\n// in Webpack 2, require.ensure now also returns a Promise\n// so the resolve/reject functions may get called an extra time\n// if the user uses an arrow function shorthand that happens to\n// return that Promise.\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (called) { return }\n    called = true;\n    return fn.apply(this, arguments)\n  }\n}\n\n/*  */\n\n\nvar HTML5History = (function (History$$1) {\n  function HTML5History (router, base) {\n    var this$1 = this;\n\n    History$$1.call(this, router, base);\n\n    var expectScroll = router.options.scrollBehavior;\n\n    if (expectScroll) {\n      setupScroll();\n    }\n\n    window.addEventListener('popstate', function (e) {\n      this$1.transitionTo(getLocation(this$1.base), function (route) {\n        if (expectScroll) {\n          handleScroll(router, route, this$1.current, true);\n        }\n      });\n    });\n  }\n\n  if ( History$$1 ) HTML5History.__proto__ = History$$1;\n  HTML5History.prototype = Object.create( History$$1 && History$$1.prototype );\n  HTML5History.prototype.constructor = HTML5History;\n\n  HTML5History.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HTML5History.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      pushState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, this$1.current, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      replaceState(cleanPath(this$1.base + route.fullPath));\n      handleScroll(this$1.router, route, this$1.current, false);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HTML5History.prototype.ensureURL = function ensureURL (push) {\n    if (getLocation(this.base) !== this.current.fullPath) {\n      var current = cleanPath(this.base + this.current.fullPath);\n      push ? pushState(current) : replaceState(current);\n    }\n  };\n\n  HTML5History.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getLocation(this.base)\n  };\n\n  return HTML5History;\n}(History));\n\nfunction getLocation (base) {\n  var path = window.location.pathname;\n  if (base && path.indexOf(base) === 0) {\n    path = path.slice(base.length);\n  }\n  return (path || '/') + window.location.search + window.location.hash\n}\n\n/*  */\n\n\nvar HashHistory = (function (History$$1) {\n  function HashHistory (router, base, fallback) {\n    History$$1.call(this, router, base);\n    // check history fallback deeplinking\n    if (fallback && checkFallback(this.base)) {\n      return\n    }\n    ensureSlash();\n  }\n\n  if ( History$$1 ) HashHistory.__proto__ = History$$1;\n  HashHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  HashHistory.prototype.constructor = HashHistory;\n\n  // this is delayed until the app mounts\n  // to avoid the hashchange listener being fired too early\n  HashHistory.prototype.setupListeners = function setupListeners () {\n    var this$1 = this;\n\n    window.addEventListener('hashchange', function () {\n      if (!ensureSlash()) {\n        return\n      }\n      this$1.transitionTo(getHash(), function (route) {\n        replaceHash(route.fullPath);\n      });\n    });\n  };\n\n  HashHistory.prototype.push = function push (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      pushHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    this.transitionTo(location, function (route) {\n      replaceHash(route.fullPath);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  HashHistory.prototype.go = function go (n) {\n    window.history.go(n);\n  };\n\n  HashHistory.prototype.ensureURL = function ensureURL (push) {\n    var current = this.current.fullPath;\n    if (getHash() !== current) {\n      push ? pushHash(current) : replaceHash(current);\n    }\n  };\n\n  HashHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    return getHash()\n  };\n\n  return HashHistory;\n}(History));\n\nfunction checkFallback (base) {\n  var location = getLocation(base);\n  if (!/^\\/#/.test(location)) {\n    window.location.replace(\n      cleanPath(base + '/#' + location)\n    );\n    return true\n  }\n}\n\nfunction ensureSlash () {\n  var path = getHash();\n  if (path.charAt(0) === '/') {\n    return true\n  }\n  replaceHash('/' + path);\n  return false\n}\n\nfunction getHash () {\n  // We can't use window.location.hash here because it's not\n  // consistent across browsers - Firefox will pre-decode it!\n  var href = window.location.href;\n  var index = href.indexOf('#');\n  return index === -1 ? '' : href.slice(index + 1)\n}\n\nfunction pushHash (path) {\n  window.location.hash = path;\n}\n\nfunction replaceHash (path) {\n  var i = window.location.href.indexOf('#');\n  window.location.replace(\n    window.location.href.slice(0, i >= 0 ? i : 0) + '#' + path\n  );\n}\n\n/*  */\n\n\nvar AbstractHistory = (function (History$$1) {\n  function AbstractHistory (router, base) {\n    History$$1.call(this, router, base);\n    this.stack = [];\n    this.index = -1;\n  }\n\n  if ( History$$1 ) AbstractHistory.__proto__ = History$$1;\n  AbstractHistory.prototype = Object.create( History$$1 && History$$1.prototype );\n  AbstractHistory.prototype.constructor = AbstractHistory;\n\n  AbstractHistory.prototype.push = function push (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index + 1).concat(route);\n      this$1.index++;\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.replace = function replace (location, onComplete, onAbort) {\n    var this$1 = this;\n\n    this.transitionTo(location, function (route) {\n      this$1.stack = this$1.stack.slice(0, this$1.index).concat(route);\n      onComplete && onComplete(route);\n    }, onAbort);\n  };\n\n  AbstractHistory.prototype.go = function go (n) {\n    var this$1 = this;\n\n    var targetIndex = this.index + n;\n    if (targetIndex < 0 || targetIndex >= this.stack.length) {\n      return\n    }\n    var route = this.stack[targetIndex];\n    this.confirmTransition(route, function () {\n      this$1.index = targetIndex;\n      this$1.updateRoute(route);\n    });\n  };\n\n  AbstractHistory.prototype.getCurrentLocation = function getCurrentLocation () {\n    var current = this.stack[this.stack.length - 1];\n    return current ? current.fullPath : '/'\n  };\n\n  AbstractHistory.prototype.ensureURL = function ensureURL () {\n    // noop\n  };\n\n  return AbstractHistory;\n}(History));\n\n/*  */\n\nvar VueRouter = function VueRouter (options) {\n  if ( options === void 0 ) options = {};\n\n  this.app = null;\n  this.apps = [];\n  this.options = options;\n  this.beforeHooks = [];\n  this.afterHooks = [];\n  this.matcher = createMatcher(options.routes || []);\n\n  var mode = options.mode || 'hash';\n  this.fallback = mode === 'history' && !supportsPushState;\n  if (this.fallback) {\n    mode = 'hash';\n  }\n  if (!inBrowser) {\n    mode = 'abstract';\n  }\n  this.mode = mode;\n\n  switch (mode) {\n    case 'history':\n      this.history = new HTML5History(this, options.base);\n      break\n    case 'hash':\n      this.history = new HashHistory(this, options.base, this.fallback);\n      break\n    case 'abstract':\n      this.history = new AbstractHistory(this, options.base);\n      break\n    default:\n      if (process.env.NODE_ENV !== 'production') {\n        assert(false, (\"invalid mode: \" + mode));\n      }\n  }\n};\n\nvar prototypeAccessors = { currentRoute: {} };\n\nVueRouter.prototype.match = function match (\n  raw,\n  current,\n  redirectedFrom\n) {\n  return this.matcher.match(raw, current, redirectedFrom)\n};\n\nprototypeAccessors.currentRoute.get = function () {\n  return this.history && this.history.current\n};\n\nVueRouter.prototype.init = function init (app /* Vue component instance */) {\n    var this$1 = this;\n\n  process.env.NODE_ENV !== 'production' && assert(\n    install.installed,\n    \"not installed. Make sure to call `Vue.use(VueRouter)` \" +\n    \"before creating root instance.\"\n  );\n\n  this.apps.push(app);\n\n  // main app already initialized.\n  if (this.app) {\n    return\n  }\n\n  this.app = app;\n\n  var history = this.history;\n\n  if (history instanceof HTML5History) {\n    history.transitionTo(history.getCurrentLocation());\n  } else if (history instanceof HashHistory) {\n    var setupHashListener = function () {\n      history.setupListeners();\n    };\n    history.transitionTo(\n      history.getCurrentLocation(),\n      setupHashListener,\n      setupHashListener\n    );\n  }\n\n  history.listen(function (route) {\n    this$1.apps.forEach(function (app) {\n      app._route = route;\n    });\n  });\n};\n\nVueRouter.prototype.beforeEach = function beforeEach (fn) {\n  this.beforeHooks.push(fn);\n};\n\nVueRouter.prototype.afterEach = function afterEach (fn) {\n  this.afterHooks.push(fn);\n};\n\nVueRouter.prototype.onReady = function onReady (cb) {\n  this.history.onReady(cb);\n};\n\nVueRouter.prototype.push = function push (location, onComplete, onAbort) {\n  this.history.push(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.replace = function replace (location, onComplete, onAbort) {\n  this.history.replace(location, onComplete, onAbort);\n};\n\nVueRouter.prototype.go = function go (n) {\n  this.history.go(n);\n};\n\nVueRouter.prototype.back = function back () {\n  this.go(-1);\n};\n\nVueRouter.prototype.forward = function forward () {\n  this.go(1);\n};\n\nVueRouter.prototype.getMatchedComponents = function getMatchedComponents (to) {\n  var route = to\n    ? this.resolve(to).route\n    : this.currentRoute;\n  if (!route) {\n    return []\n  }\n  return [].concat.apply([], route.matched.map(function (m) {\n    return Object.keys(m.components).map(function (key) {\n      return m.components[key]\n    })\n  }))\n};\n\nVueRouter.prototype.resolve = function resolve (\n  to,\n  current,\n  append\n) {\n  var location = normalizeLocation(to, current || this.history.current, append);\n  var route = this.match(location, current);\n  var fullPath = route.redirectedFrom || route.fullPath;\n  var base = this.history.base;\n  var href = createHref(base, fullPath, this.mode);\n  return {\n    location: location,\n    route: route,\n    href: href,\n    // for backwards compat\n    normalizedTo: location,\n    resolved: route\n  }\n};\n\nVueRouter.prototype.addRoutes = function addRoutes (routes) {\n  this.matcher.addRoutes(routes);\n  if (this.history.current !== START) {\n    this.history.transitionTo(this.history.getCurrentLocation());\n  }\n};\n\nObject.defineProperties( VueRouter.prototype, prototypeAccessors );\n\nfunction createHref (base, fullPath, mode) {\n  var path = mode === 'hash' ? '#' + fullPath : fullPath;\n  return base ? cleanPath(base + '/' + path) : path\n}\n\nVueRouter.install = install;\nVueRouter.version = '2.2.1';\n\nif (inBrowser && window.Vue) {\n  window.Vue.use(VueRouter);\n}\n\nexport default VueRouter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-router/dist/vue-router.esm.js\n// module id = 25\n// module chunks = 1","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/listToStyles.js\n// module id = 26\n// module chunks = 1","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 27\n// module chunks = 1","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function() {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\tvar result = [];\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar item = this[i];\n\t\t\tif(item[2]) {\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\n\t\t\t} else {\n\t\t\t\tresult.push(item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result.join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader/lib/css-base.js\n// module id = 29\n// module chunks = 1","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction) {\n  isProduction = _isProduction\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = { css: css, media: media, sourceMap: sourceMap }\n    if (!newStyles[id]) {\n      part.id = parentId + ':0'\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      part.id = parentId + ':' + newStyles[id].parts.length\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[data-vue-ssr-id~=\"' + obj.id + '\"]')\n  var hasSSR = styleElement != null\n\n  // if in production mode and style is already provided by SSR,\n  // simply do nothing.\n  if (hasSSR && isProduction) {\n    return noop\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = styleElement || createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (!hasSSR) {\n    update(obj)\n  }\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/vue-style-loader/lib/addStylesClient.js\n// module id = 30\n// module chunks = 1"],"sourceRoot":""}